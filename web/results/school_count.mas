<%args>
	$school
	$tourn
	$debug => 1
</%args>
<%init>

	system "$Tab::logger Called the school count method for ".$school->name if $debug;

	Tab::Entry->columns( TEMP => "class_id");

	Tab::Entry->set_sql( school_comps_with_class => "
		select comp.*,event.class as class_id
		from comp,event
		where comp.event = event.id
		and comp.school = ?
		and comp.dropped != 1
		order by comp.sweeps_points DESC");

	my @comps = Tab::Entry->search_school_comps_with_class($school->id);

	my %use_comps = ();

	my $comp_limit = $tourn->method->sweep_per_event;
	my $event_limit = $tourn->method->sweep_event_total;

	if ($tourn->method->sweep_class_based) { 

		my %classes = (); 
	
		COMP:
		foreach my $comp (@comps) { 


			if ($comp_limit > 0 && $classes{$comp->event->class->id} == $comp_limit) {
				next COMP;
			}

			$use_comps{$comp->id}++;
			$classes{$comp->event->class->id}++;

		}

	} else { 

		my $num_events;

		my %events = ();

		my $events_at_limit;

		foreach my $comp (@comps) {

            last if $event_limit > 0 && $events_at_limit == $event_limit;

            next if $comp_limit > 0 && $events{$comp->event->id} >= $comp_limit;

            $use_comps{$comp->id}++;

            $events{$comp->event->id}++;

			$events_at_limit++ if $events{$comp->event->id} >= $comp_limit;

        }

	}

	my $wildcards = $tourn->method->sweep_wildcards;
	my $use;

	if ($wildcards) { 

	foreach my $comp (@comps) { 
		last if $use == $wildcards;
		unless ($use_comps{$comp->id}) { 
			$use_comps{$comp->id}++;
			$use++;
	} }	} 

	return %use_comps;

</%init>
