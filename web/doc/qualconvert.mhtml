<%args>

</%args>
<%init>

	use Tab::JudgeClass;
	use Tab::Class;

	my @judge_classes = Tab::JudgeClass->retrieve_all;

	my @classes = Tab::Class->retrieve_all;
	my %group_by_class = ();

	foreach my $class (@classes) { 
		$group_by_class{$class->id} = $class->judge_group->id;
	}

	my @quals = Tab::Qual->search( type => "" );
	my %quals_by_tournament = ();

	foreach my $qual (@quals) { 
		push (@{$quals_by_tournament{$qual->tournament->id}}, $qual);
		Tab::log("Tagging qual ".$qual->name." ID ".$qual->id." to ".$qual->tournament->id);
	}

	my %new_qual_by_name_and_group = ();

	foreach my $tourn_id (keys %quals_by_tournament) { 

		my $count;

		foreach my $group (Tab::JudgeGroup->search( tournament => $tourn_id )) { 

			foreach my $qual (@{$quals_by_tournament{$tourn_id}}) {

				my $new_qual = $qual->copy;
				$new_qual->judge_group($group->id);
				$new_qual->type("qual");
				$new_qual->update;

				$new_qual_by_name_and_group{$new_qual->name."-".$group->id} = $new_qual->id;

				$count++;
			}

		}

		Tab::log("$count quals transferred to tournament $tourn_id");

	}

	foreach my $judge_class (@judge_classes) { 

		next unless $judge_class->judge;
		next unless $judge_class->judge->id;
		next unless $judge_class->qual;
		next unless $judge_class->qual->id;

		my $qual = $new_qual_by_name_and_group{$judge_class->qual->name."-".$judge_class->judge->judge_group->id};
		next unless $qual;

		Tab::log("Copying ".$judge_class->id." qual from ".$judge_class->qual->id." to ".$qual);

		Tab::Rating->create({
			type => "coach",
			judge => $judge_class->judge->id,
			qual => $qual
		});

	}

</%init>

	<p>Fin</p>

	<p>Now run</p>
	
	<code>update rating,judge set rating.tournament = judge.tournament where rating.judge = judge.id </code>
