<%args>
	$account => undef
	$circuit => undef
	$circuit_id => undef
</%args>
<%init>
	
	use Time::HiRes qw( time );
	use Data::Dumper;
	if ($circuit_id) { $circuit = Tab::Circuit->retrieve( $circuit_id ); }
	unless ($circuit) { $circuit = Tab::Circuit->retrieve( 43 ); $circuit_id = $circuit->id; }
		
	my $start = time(); 
	
#Load chapter characteristics
	Tab::Chapter->columns(TEMP => qw/nstudents/);	
	Tab::Chapter->columns(TEMP => qw/njudges/);	
	Tab::Chapter->columns(TEMP => qw/retired_students/);	
	Tab::Chapter->set_sql(pull_competitors => "
		select chapter.*, count(distinct student.id) as nstudents, count(distinct chapter_judge.id) as njudges 
		from chapter
		left join student on chapter.id=student.chapter 
		left join chapter_judge on chapter.id=chapter_judge.chapter 
		left join chapter_circuit on chapter.id=chapter_circuit.chapter 
		where chapter_circuit.circuit = $circuit_id
		group by chapter.id
	");
	
	my @chpt = Tab::Chapter->search_pull_competitors;
	@chpt = sort { $b->nstudents <=> $a->nstudents } @chpt;
	
	my $totalstudents=0;
	my $totaljudges=0;
	foreach my $chapter (@chpt) {
		$totalstudents += $chapter->nstudents;
		$totaljudges += $chapter->njudges;
	}

#student and judge active counts
	Tab::Student->set_sql(pull_student => "
		select student.id
		from chapter, student, chapter_circuit
		where student.retired=0 and student.chapter=chapter.id and chapter.id=chapter_circuit.chapter and chapter_circuit.circuit = $circuit_id
	");
	my @student = Tab::Student->search_pull_student;

	Tab::ChapterJudge->set_sql(pull_judge => "
		select chapter_judge.id
		from chapter_judge, student, chapter_circuit
		where chapter_judge.active=1 and chapter_judge.chapter=chapter.id and chapter.id=chapter_circuit.chapter and chapter_circuit.circuit = $circuit_id
	");
	my @judge = Tab::Student->search_pull_student;

#Load tournament characteristics
	Tab::Tourn->columns(TEMP => qw/entries/);	
	Tab::Tourn->columns(TEMP => qw/events/);	
	Tab::Tourn->set_sql(pull_tourn => "
		select tourn.*, count(distinct entry.id) as entries, count(distinct event.id) as events
		from tourn
		left join entry on tourn.id=entry.tourn 
		left join event on tourn.id=event.tourn 
		left join tourn_circuit on tourn.id=tourn_circuit.tourn 
		where tourn_circuit.circuit = $circuit_id
		group by tourn.id
	");
	
	my @tourn = Tab::Tourn->search_pull_tourn;
	
	my $totalentries=0;
	my $totalevents=0;
	foreach my $tourney(@tourn) {
		$totalentries += $tourney->entries;
		$totalevents += $tourney->events;
	}
		
	sub commify {
		local($_)=shift;
		1 while s/^(-?\d+)(\d{3})/$1,$2/;
		return $_;
	}
	
</%init>

	<& menu.mas, circuit_id => $circuit_id &>
	
	<div class="left huge">
	
	<h2>Circuit statistics for <% $circuit->name %></h2>

		<& /funclib/tablesorter.mas, table => "Stats" &>

		<table cellpadding="3" width="100%" id="Stats" class="tablesorter">

		<thead>
			<tr class="dkgreen">
				<th class="smaller">Item</th>
				<th class="smaller">Value</th>
			</tr>
		</thead>

		<tr>
			<td> Chapters </td>
			<td> <% scalar(@chpt)  %> </td>
		</tr>
		<tr>
			<td> Students -- total </td>
			<td> <% commify(sprintf("%.0f", $totalstudents))  %> </td>
		</tr>
		<tr>
			<td> Students -- not retired </td>
			<td> <% scalar(@student) %> </td>
		</tr>
		<tr>
			<td> Judges </td>
			<td> <% commify(sprintf("%.0f", $totaljudges))  %> </td>
		</tr>
		<tr>
			<td> Tournaments </td>
			<td> <% scalar(@tourn)  %> </td>
		</tr>
		<tr>
			<td> Events </td>
			<td> <% commify(sprintf("%.0f", $totalevents))  %> </td>
		</tr>
		<tr>
			<td> Total Entries </td>
			<td> <% commify(sprintf("%.0f", $totalentries))  %> </td>
		</tr>

		</table>
		
% my $end = time(); print "<br>Load time ";
% printf("%.2f\n", $end - $start);

	</div>
