<%args>
	$tourn_id => undef
</%args>
<%init>

	my $now = DateTime->now;

	my $end = $now->clone;

	$end->subtract(days => 1);

	my @upcoming = Tab::Tourn->search_where({ 
		end => { '>',  DateTime::Format::MySQL->format_datetime($end) },
	});

	@upcoming = sort {$a->name cmp $b->name} @upcoming;

</%init>

	<h3>Upcoming Tournaments</h3>

%		my $switch;
%		my $notfirst;

%		my $date = $now->clone;
%		$date->subtract(years => 1);  #Nothing like an ugly hack to get started right.

		<ul class="tournlist">

%		foreach my $tourn (sort {$a->start->epoch <=> $b->start->epoch} @upcoming) { 

%			next if $tourn->hidden;
%			next unless $tourn->approved;

%			$switch++;
%			last if $switch > 50;

<%perl>
			#Week by week ticker

			my $distance = $tourn->start - $date;
			
			if ($distance->delta_days > 6 || not defined $notfirst) { 

				if ($notfirst) { 
					$m->print("</ul></li>");
				}

				$date = $tourn->start;

				while ($date->day_of_week != 1) { 
					$date->subtract(days => 1);
				}

				$notfirst++;

				my $date_ticker = $date->clone;
				my $sun_ticker = $date->clone;
				$sun_ticker->add(days => 6);

				$m->print("<li><h5>".$date_ticker->month."/".$date_ticker->day);
				$m->print(" - ".$sun_ticker->month."/".$sun_ticker->day."</h5>");
				$m->print("<ul class=\"datelist\">");

			}

</%perl>

%           if ($tourn->id == $tourn_id) {
                <li class="chosen">
%           } elsif ($tourn->reg_start && $tourn->reg_end && $tourn->reg_start->epoch < $now->epoch && $tourn->reg_end->epoch > $now->epoch) { 
                <li class="open">
%			} else {
                <li class="closed">
%			}

				<span class="circuit">
%					foreach my $circuit ($tourn->circuits) { 
						<% $circuit->abbr %>
%					}
				</span>

				<span class="tourn">
					<a class="tourn" href="tourn/index.mhtml?tourn_id=<% $tourn->id %>">
						<% $tourn->name %>
					</a>
				</span>

				<div style="clear: both;"></div>

			</li>

%		}

