<%args>
	$account
	$tourn
	$event_id
</%args>
<%init>


	sub find_other { 

		my ($comp, $panel, $need, $orig_panel) = @_;

		OTHER:
		foreach my $other ($panel->entries) { 

			next OTHER if $orig_panel->score($other) > $panel->score($other);

			my $other_order = $other->speakerorder($panel);
		
			if ($need eq "early") {
				next OTHER if $other_order > 2;	
				my ($other_status, $other_early, $other_mid, $other_late)
					= $other->ncfl_speaks_check;
				next OTHER if $other_early < 2;

			} 
			
			if ($need eq "mid") {
				next OTHER if $other_order < 2 || $other_order > 5;	
				my ($other_status, $other_early, $other_mid, $other_late)
					= $other->ncfl_speaks_check;
				next OTHER if $other_mid < 2;
			} 
			
			if ($need eq "late") {
				next OTHER if $other_order < 6;	
				my ($other_status, $other_early, $other_mid, $other_late)
					= $other->ncfl_speaks_check;
				next OTHER if $other_late < 2;
			}

			# If we got this far without getting bumped, then we have found
			# the candidate with which the current one should switch.

			return ($other, $other_order);

		}

	}


	my $event = Tab::Event->retrieve($event_id);

	my @rounds = $event->rounds( type => "prelim");

	foreach my $comp ($event->entries) { 

		my ($status, $early, $mid, $late) = $comp->ncfl_speaks_check;
		next if $status eq "OK";

		my @needs;
		my @panels = $comp->panels;

		push (@needs, "early") unless $early;
		push (@needs, "mid") unless $mid;
		push (@needs, "late") unless $late;

		NEED:
		foreach my $need (@needs) {

			foreach my $panel ($comp->panels) { 

				next unless $panel->type eq "prelim";
				my $order = $comp->speakerorder($panel);

				# Don't move the comp if it would just create other problems
				next if ($early == 1) && $order < 3;
				next if ($mid == 1) && $order > 2 && $order < 6;
				next if ($late == 1) && $order > 5;

				my ($other, $other_order) = &find_other($comp,$panel,$need,$panel);

				if ($other) { 
					$comp->setorder($other_order,$panel);
					$other->setorder($order,$panel);
					next NEED;
				}
			}
		}
	}

	# Now that we've switched everyone we can within the panel, take anyone left
	# who isn't OK and try to swap them among equivalent scoring panels to solve
	# the problem.

	foreach my $comp ($event->entries) { 

		my ($status, $early, $mid, $late) = $comp->ncfl_speaks_check;
		next if $status eq "OK";

		my @needs;

		my @panels = $comp->panels;

		push (@needs, "early") unless $early;
		push (@needs, "mid") unless $mid;
		push (@needs, "late") unless $late;

		NEED:
		foreach my $need (@needs) {

			foreach my $panel ($comp->panels) { 

				next unless $panel->type eq "prelim";
				my $order = $comp->speakerorder($panel);
	
				# See if moving in this round would create another problem.
				next if ($early == 1) && $order < 3;
				next if ($mid == 1) && $order > 2 && $order < 6;
				next if ($late == 1) && $order > 5;

				my $starting_score = $panel->score($comp);
			

				my @other_panels = $panel->round->panels;
				my @candidates;

				# Find other panels where the competitor is an equal or better fit.
				foreach my $cand_panel (@other_panels) { 

					my $other_score = $cand_panel->score($comp);
					next if $other_score > $starting_score;


					my ($other, $other_order) = &find_other($comp,$cand_panel,$need,$panel);

					if ($other) { 

						my $moves = $m->comp("/panel/comp_move.mas",
                        	shut_up => "yes",
                        	tourn => $tourn,
                        	comp_id => $comp->id,
                        	panel_id => $cand_panel->id );

						$moves .= $m->comp("/panel/comp_move.mas",
                        	shut_up => "yes",
                        	tourn => $tourn,
                        	comp_id => $other->id,
                        	panel_id => $panel->id );

						$comp->setorder($other_order,$cand_panel);
						$other->setorder($order,$panel);

						next NEED;
					}		
				}
			}
		}
	}

	$m->redirect("$Tab::url_prefix/panel/speakerorder_report.mhtml?event_id=$event_id");

</%init>
