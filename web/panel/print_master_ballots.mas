<%args>
	$league
	$timeslot_id
	$event_id
	$panel_id => undef
	$sort_by => undef
	$tourn
	$session
</%args>
<%init>

	my $tourn_id = $tourn->id;
	my @timeslots;

	my $whatto = $tourn->method->master_printouts;
    my $points++ if $tourn->method->tiebreaks(tiebreaker => "points");
	
	if ($timeslot_id eq "all") { 
		@timeslots = $tourn->timeslots;
	} else {
		push (@timeslots, Tab::Timeslot->retrieve($timeslot_id));
	} 

	my @events;
	if ($event_id eq "all") { 
		@events = $tourn->events;
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	} 

	@timeslots = sort {$a->start <=> $b->start} @timeslots;
	@events = sort {$a->name cmp $b->name} @events;
	
	#Set up the filename and the needed trace files

	my $session_id = $session->id;

    my $filename = $Tab::file_root."/tmp/masters-$tourn_id-$session_id";
    my $garbage = `rm -f $filename.*`;

   	open (TEXOUT, ">$filename.tex");

	print TEXOUT <<"EOF";

\\documentclass[10pt]{report}
\\usepackage{fullpage}
\\usepackage{helvet}
\\usepackage{nopageno}
\\usepackage[hmargin=1.0in,vmargin=.5in]{geometry}
\\pagestyle{empty}
\\renewcommand{\\familydefault}{\\sfdefault}
\\renewcommand{\\arraystretch}{1.5}
\\begin{document}
\\addtolength{\\hoffset}{-.1in}

EOF

	close TEXOUT;

	my $first; 

	my $didit;

	&Tab::log("Sort me by $sort_by");

	if ($sort_by eq "code" || $sort_by eq "name" || $sort_by eq "school") { 

		&Tab::log("Sorting by $sort_by");

		my %panels_by_judge = ();
		my @judges; 

		foreach my $timeslot (@timeslots) { 

			foreach my $event (@events) { 

				my @panels = $event->panels_by_timeslot($timeslot) unless $panel_id;

				foreach my $panel (@panels) { 

					next unless $panel->round->timeslot->id == $timeslot->id;

					foreach my $judge ($panel->judges) {
						push (@judges, $judge);
						push (@{$panels_by_judge{$judge->id}}, $panel);
					}
				}
			}
		}

		@judges = sort {$a->code <=> $b->code} @judges;
		@judges = sort {$a->last <=> $b->last} @judges if $sort_by eq "names";
		@judges = sort {$a->school->name <=> $b->school->name} @judges if $sort_by eq "schools";

		foreach my $judge (@judges) { 

			foreach my $panel (@{$panels_by_judge{$judge->id}}) { 

				$didit++;

			    $m->comp("/funclib/print_master.mas", 
						judge_id => $judge->id, 
						panel_id => $panel->id, 
						filename => $filename);

   				open (TEXOUT, ">>$filename.tex");
				print TEXOUT "\\newpage\n";
				close TEXOUT;

			}

		} #end of foreach judge

	} else { 

		foreach my $ts (@timeslots) { 

			foreach my $event (@events) { 

				my @panels = $event->panels_by_timeslot($ts) unless $panel_id;
				push (@panels, Tab::Panel->retrieve($panel_id)) if $panel_id;

				@panels = sort {$a->letter cmp $b->letter} @panels;
				@panels = sort {$a->round->event->name cmp $b->round->event->name } @panels;

				foreach my $panel (@panels) { 

					next unless $panel->round->timeslot->id == $ts->id;

					foreach my $judge ($panel->judges) {

						$didit++;

					    $m->comp("/funclib/print_master.mas", 
								judge_id => $judge->id, 
								panel_id => $panel->id, 
								filename => $filename);

   						open (TEXOUT, ">>$filename.tex");
						print TEXOUT "\\newpage\n";
						close TEXOUT;

				
					}#end of foreach judge		

				} #end of foreach panels

			} # end of foreach event

		} # end of foreach timeslot

	} #end of unless sort_by

	unless ($didit) { 

		$m->print("<p class=\"err\">Nothing was printed: Either you haven't assigned judges yet, or that event has no rounds in that timeslot, or something.</p>");
		$m->abort;

	}

	open (TEXOUT, ">>$filename.tex");
	print TEXOUT "\\end{document} \n";
	close TEXOUT;

	$garbage = `cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;
	`rm -f $filename.tex $filename.log $filename.dvi $filename.aux`;
	$m->redirect("$Tab::url_prefix/tmp/masters-$tourn_id-$session_id.pdf");

</%init>
