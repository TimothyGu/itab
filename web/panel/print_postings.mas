<%args>
	$event_id
	$timeslot_id
	$tourn
	$session
	$debug => undef
</%args>
<%init>
	use POSIX;
	
	my $tourn_id = $tourn->id;
	my $circuit = $tourn->circuit;
	my @events;
	if ($event_id eq "all") { 
		@events = $m->comp("/funclib/tourn_events.mas", tourn => $tourn);
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	}

    my $schools = 1 if $tourn->method->schemat_school_code;
	
 	my @timeslots;
	if ($timeslot_id eq "all") { 
		@timeslots = $tourn->timeslots;
	} else {
		push (@timeslots, Tab::Timeslot->retrieve($timeslot_id));
	} 

	@events = sort {$a->abbr <=> $b->abbr} @events;

	#Set up the filename and the needed trace files

     my $filename = $Tab::file_root."/tmp/postings-".$timeslot_id."-".$event_id."-".$tourn->id."-".$session->id;
     my $garbage = `rm -f $filename.*`;
     open (TEXOUT, ">$filename.tex");

	print TEXOUT <<'EOF';
\documentclass[12pt]{letter}
\usepackage{fullpage}
\usepackage{times}
\usepackage{nopageno}
\renewcommand{\arraystretch}{1.3}

% Overrule the maximum in font-size in ot1cmr.fd:
\DeclareFontShape{OT1}{cmr}{m}{n}
     {%
        <5><6><7><8><9>gen*cmbx%
        <10><10.95>cmbx10%
        <12><14.4><17.28><20.74><24.88->cmbx12%
        }{}

\begin{document}
\begin{center}

\addtolength{\textwidth}{1in}
\addtolength{\hoffset}{-.1in}

EOF

	foreach my $event (@events) { 

		foreach my $timeslot (@timeslots) { 
		
			my @panels = Tab::Panel->search(event => $event->id);
	
			foreach my $panel (@panels) { 

				next unless $panel->round;
				next if $panel->round->preset;

				next unless $panel->round->timeslot->id == $timeslot->id;
	
				print TEXOUT <<'EOF';
				
\fontsize{50pt}{50pt}\selectfont
\begin{tabular}{c}

EOF
				print TEXOUT $event->name."\\\\ \n";
				print TEXOUT "{\\Huge ".uc($panel->round->label)."}\\\\ \n";
				print TEXOUT "\\end{tabular} \n";
				print TEXOUT '\fontsize{50pt}{50pt}\selectfont'." \n";
				print TEXOUT '\begin{tabular*}{.8\textwidth}'."\n";
				print TEXOUT '{@{\extracolsep{\fill}}lr}'."\n";
				print TEXOUT "\\hline \n";
				print TEXOUT "\\hline \n";
		
				my $switch;
		
				foreach my $comp ($panel->comps) { 
					if ($switch == 1) { 
						print TEXOUT $comp->school->code if $schools;
						print TEXOUT $comp->code." \\\\ \n";
						$switch--;
					} else { 
						print TEXOUT $comp->school->code if $schools;
						print TEXOUT $comp->code." & ";
						$switch++;
					}
				}

				print TEXOUT "\\\\  \n" if $switch == 1;
				print TEXOUT "\\hline \n";
				print TEXOUT "\\hline \n";
				print TEXOUT "\\end{tabular*} \n";
				print TEXOUT "\\fontsize{30pt}{30pt}\\selectfont \n"; 	
				print TEXOUT "\\begin{tabular}{|p{3.0in}|p{3.0in}|} \n";
				print TEXOUT "\\multicolumn{1}{c}{\\huge ROOM: ".$panel->room->name ."}" if $panel->room->id;
				print TEXOUT " & ";
				my $start = $panel->round->timeslot->start->set_time_zone($circuit->timezone);
				print TEXOUT "\\multicolumn{1}{c}{\\huge BEGIN: ".$start->hour_12.":".$start->strftime("%M")." ".$start->strftime("%P")."} \\\\ \n";
				print TEXOUT "\\multicolumn{2}{c}{\\huge JUDGES: }\\\\ \n";
				print TEXOUT "\\hline\n";
				
				my $count;
				foreach my $judge ($panel->judges) { 
					print TEXOUT $judge->school->code if $judge->school->id;
					print TEXOUT "HIRE" unless $judge->school->id;
					print TEXOUT " ".$judge->code;
					print TEXOUT " \\LARGE ".ucfirst($judge->last);
					print TEXOUT " & " unless $count % 2;
					print TEXOUT " \\\\ \n \\hline \n" if $count % 2;
					$count++;
				}

				print TEXOUT " \\\\ \n \\hline \n" if $count % 2;
				print TEXOUT "\\end{tabular} \n"; 
				print TEXOUT "\\newpage \n";

			} # end of foreach panel

		} # end of foreach timeslot

	} # end of foreach event

	print TEXOUT "\\end{center}\n";
	print TEXOUT "\\end{document} \n";
	close TEXOUT;

	$garbage = `cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;
	$garbage = `rm -f $filename.tex $filename.log $filename.dvi $filename.aux` unless $debug;
	$m->redirect("$Tab::url_prefix/tmp/postings-$timeslot_id-$event_id-$tourn_id-".$session->id.".pdf");

</%init>
