<%args>
	$circuit
	$tourn
	$session
	$err => undef
	$event_id
	$schools => undef 
	$round_id => undef
	$timeslot_id => undef
	$debug => undef
</%args>
<%init>

	my @events;

	if ($event_id eq "all") { 
		@events = Tab::Event->search(tournament => $tourn->id, type => "speech");
		push (@events, Tab::Event->search(tournament => $tourn->id, type => "congress"));
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	}

	my @timeslots;

	if ($timeslot_id eq "all") { 

		@timeslots = sort {$a->start <=> $b->start} $tourn->timeslots;

	} else { 

		push (@timeslots, Tab::Timeslot->retrieve($timeslot_id)) if $timeslot_id;
		my $round = Tab::Round->retrieve($round_id) if $round_id;
		push (@timeslots, $round->timeslot) if $round;

	}

	@events = sort {$a->name cmp $b->name} @events;

	my $tab = "TABCOPY" if $schools;

	my $name = $events[0]->name if $event_id ne "all";
	$name = "ALL" unless $name;
	$name =~ s/\s+//g;
	$name =~ s/\(//g;
	$name =~ s/\)//g;

	my $filename = $Tab::file_root."/tmp/".$name."-".$tab."Schematics-".$session->id;

	my $garbage = `rm -f $filename.*`;
	my $tablewidth = "1.6";
	my $ptsize = "12pt";

	if ($circuit->diocese_based) { 
		$tablewidth = "1.4";
		$ptsize = "10pt";
	}
	
	open (TEXOUT, ">$filename.tex");
	print TEXOUT <<"EOF";

\\documentclass[$ptsize]{report}
\\usepackage{fullpage}
\\usepackage[hmargin=.5in,vmargin=.5in]{geometry}
\\usepackage{colortbl}
\\pagestyle{empty}
\\renewcommand{\\familydefault}{\\sfdefault}
\\renewcommand{\\arraystretch}{$tablewidth}
\\begin{document}

\\addtolength{\\textwidth}{1in}
\\addtolength{\\hoffset}{-.1in}

\\normalsize

EOF

EVENT:
foreach my $event (@events) { 

TIMESLOT:
foreach my $timeslot (@timeslots) { 

	my @rounds = Tab::Round->search(event => $event->id, timeslot => $timeslot->id);

#	next TIMESLOT unless (@rounds);
#	print TEXOUT "\\huge ". $timeslot->name ." \\\\ \n" if $timeslot;

	unless ($timeslot) { 
		print TEXOUT "\\huge TAB ROOM COPY: ". $event->name ." \\\\ \n" if $schools;
		print TEXOUT "\\huge ". $event->name ." \\\\ \n" unless $schools;
	}

	close TEXOUT;

	foreach my $round (@rounds) { 

		next unless $round->panels;
		next if $round->preset;

		$m->comp("/funclib/roundschemat_print_names.mas", 
			round_id => $round->id, 
			filename => $filename, 
			schools => $schools, 
			circuit => $circuit) if ($tourn->method->schemat_display eq "full_names") ||
				($event->team == 2 && $tourn->method->schemat_display eq "last_names") ||
				($event->team == 3 && $tourn->method->schemat_display eq "last_names");

		$m->comp("/funclib/roundschemat_print_last_names.mas", 
			round_id => $round->id, 
			filename => $filename, 
			schools => $schools, 
			circuit => $circuit) if $tourn->method->schemat_display eq "last_names" && $event->team == 1;

		$m->comp("/funclib/roundschemat_print.mas", 
			round_id => $round->id, 
			filename => $filename, 
			schools => $schools, 
			circuit => $circuit) if $tourn->method->schemat_display eq "codes" || not defined $tourn->method->schemat_display;

		if ($circuit->diocese_based) { 
			open (TEXOUT, ">>$filename.tex");
			print TEXOUT "\\newpage \n";
			close TEXOUT;
		}

	}

} 

	unless ($schools) { 
		open (TEXOUT, ">>$filename.tex");
		print TEXOUT "\\newpage \n";
		close TEXOUT;
	}

} 

	open (TEXOUT, ">>$filename.tex");
	print TEXOUT "\\end{document}\n";
	close TEXOUT;

	$garbage = `cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;
	$garbage = `cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;
	$garbage = `rm -f $filename.tex $filename.log $filename.dvi $filename.aux` if $debug;

	$m->redirect("$Tab::url_prefix/tmp/".$name."-".$tab."Schematics-".$session->id.".pdf");

</%init>
