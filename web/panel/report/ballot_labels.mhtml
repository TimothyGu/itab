<%args>
	$circuit
	$timeslot_id => undef
	$event_id => undef
	$tourn
	$session
</%args>
<%init>

	my $hlabel =  $tourn->setting("hlabel");
	my $vlabel = $tourn->setting("vlabel");
	my $vcorner = $tourn->setting("vcorner");
	my $hcorner = $tourn->setting("hcorner");

	$tourn->setting("hlabel", 2.73) unless $hlabel;
	$tourn->setting("vlabel", 1.00) unless $vlabel;
	$tourn->setting("vcorner", 1.85) unless $vcorner;
	$tourn->setting("hcorner", 0.50) unless $hcorner;

	$hlabel = "2.73" unless $hlabel;
	$vlabel = "1.00" unless $vlabel;
	$hcorner = "1.85" unless $hcorner;
	$vcorner = ".50" unless $vcorner;

	my $path = "/tmp/".$tourn->id."/labels-".$session->id;
	my $filepath = $Tab::file_root.$path;
    my $filename = "ballot-labels";

	`mkdir -p $filepath`;
	`rm -f $filepath/$filename.*`;

	my @timeslots;
	
	if ($timeslot_id eq "all") { 
		@timeslots = $tourn->timeslots;
	} else {
		push (@timeslots, Tab::Timeslot->retrieve($timeslot_id));
	} 

	@timeslots = sort {$a->start <=> $b->start} @timeslots;

	my @events;

	if ($event_id eq "all") { 
		@events = $m->comp("/funclib/tourn_events.mas", tourn => $tourn);
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	} 

	@events = sort {$a->name cmp $b->name} @events;

	open (LABELS, ">$filepath/labels.tex");

	print LABELS <<"EOF";

%%%%%%%%%%%%%%%%%%%%%%  USER DEFINED LENGTHS %%%%%%%%%%%%%%%%%%%%%%
% Everything else is entryuted using these 6 quantities.

\\documentstyle{article}

\\pagestyle{empty}
% \\newcount\\nrows\\newcount \\ncols

\\newcount\\nrows\\newcount\\ncols
\\nrows=10		%Number of rows
\\ncols=03		%Number of columns.	

\\newdimen\\vcorner \\newdimen\\hcorner 
\\newdimen\\vlabel \\newdimen\\hlabel

\\vcorner = $vcorner in	% vertical distance between upper left corner
		 	% of page and upper left corner of first label 
\\hcorner = $hcorner in	% Horizontal distance between page and first
			% label.

\\vlabel  = $vlabel in	% Height of label.
\\hlabel  = $hlabel in	% width of label.

\\newdimen \\vfudge \\newdimen \\hfudge
\\vfudge = -0.11 in 	% experimentally determined quantity which is
		   	% addedto vlabel to obtain physical
		   	% spacing equal to vlabel. It turns out to
		   	% equal the height of a line.
\\hfudge = -0.25in


\\newdimen \\tempp
\\tempp = \\hcorner 
\\advance\\tempp by -1.125in
\\setlength{\\oddsidemargin}{\\tempp} % physical margin = \\..sidemargin + 1.25in
\\setlength{\\evensidemargin}{\\oddsidemargin}

\\tempp = \\hlabel  \\advance \\tempp by 0.2in
\\multiply \\tempp by \\ncols 
\\setlength{\\textwidth}{\\tempp}

\\tempp=\\vcorner \\advance \\tempp by -1.60in
\\setlength{\\topmargin}{\\tempp}% Physical margin = \\topmargin +1.5 in

\\tempp = \\vlabel \\multiply\\tempp by \\nrows 

\\setlength{\\textheight}{\\tempp}
				% \\showthe \\textheight\\showthe \\textwidth
\\setlength{\\headheight}{-.6in}
\\setlength{\\footheight}{0in}
\\setlength{\\baselineskip}{0in}
\\setlength{\\fboxsep}{0in}	%% needed for boxes to come out right
			 	%% hgt
\\setlength{\\parskip}{0in}
\\setlength{\\headsep}{0in}

\\advance \\vlabel by \\vfudge
\\advance \\hlabel by \\hfudge

\\newcommand{\\lb}[1]{
\\fill 0.1in
\\mbox{		\\rule[-\\vlabel]{0in}{\\vlabel} %distance between labels is
				        %1 in+height of 1 line.
		\\begin{minipage}[t]{\\hlabel}
			\\begin{flushleft}
			{\\sf #1}
			\\end{flushleft}
		\\end{minipage}
	}
}


\\begin{document}

\\raggedbottom
\\raggedright
\\input{ballot-labels.tex}

\\end{document}

EOF

    open (TEXOUT, ">$filepath/$filename.tex");

	foreach my $ts (@timeslots) { 

		foreach my $event (@events) { 

			my @panels = $m->comp("/funclib/event_panels.mas", event => $event, timeslot => $ts);

			foreach my $panel (@panels) { 

				my @entries = $m->comp('/funclib/panel_entries.mas', panel => $panel);
				my @judges = $m->comp('/funclib/panel_judges.mas', panel => $panel);

				next unless @judges;

				my $room = $panel->room;
				my $start = $panel->round->timeslot->start;

				$start->set_time_zone($tourn->tz);

				my $round = $panel->round;

				foreach my $judge (@judges) { 
			
					print TEXOUT "\\lb{\\underline{\\textbf{".Tab::texify($judge->school->code)." ".$judge->code.": ";
					print TEXOUT Tab::texify($judge->first)." ".Tab::texify($judge->last)."}} \\\\ \n";
					print TEXOUT $event->abbr." ".$panel->letter;
					print TEXOUT " --- Rnd ";
					print TEXOUT ($round->label) ? substr($round->label,0,6) : $round->name;
					print TEXOUT " --- ".$start->hour_12.":".$start->strftime("%M")." ".$start->strftime("%p")."\\\\ \n";
					print TEXOUT "Room: ". Tab::texify($room->name) ."\\\\ \n" if $room;
						
					foreach my $entry (@entries) { 
		
						print TEXOUT Tab::texify($entry->code);
						foreach (1 .. scalar $m->comp("/funclib/entry_double.mas", entry => $entry, round => $panel->round)) {
							print TEXOUT "*";
						}
						print TEXOUT " ";

					}		
		
					print TEXOUT " } \n";	
				} #end of foreach judge		
			} #end of foreach panels
		} # end of foreach event
	} # end of foreach timeslot
	
	close TEXOUT;

	`cd $filepath; $Tab::latex_path labels.tex; $Tab::dvipdfm_path labels.dvi`;
	
	`rm -f *.tex *.log *.dvi *.aux`;

	$m->redirect("$Tab::url_prefix/$path/labels.pdf");

</%init>
