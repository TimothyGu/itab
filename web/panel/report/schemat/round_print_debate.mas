<%args>
	$round_id
	$filename
	$schools => undef
</%args>
<%init>
	
	my $round = Tab::Round->retrieve($round_id);
	my $tourn = $round->event->tourn;

	Tab::Panel->columns(TEMP => "roomname");

	Tab::Panel->set_sql( schemat => "
		select panel.*, room.name as roomname
		from panel, room
		where panel.round = ? 
		and panel.room = room.id
		order by panel.letter");

	Tab::Panel->set_sql( schemat_roomless => "
		select panel.*, \"None\" as roomname
		from panel
		where panel.round = ? 
		and panel.room = 0
		order by panel.letter");

	my @panels = Tab::Panel->search_schemat($round->id);
	push (@panels, Tab::Panel->search_schemat_roomless($round->id));

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $start = $round->timeslot->start->set_time_zone($tz);

	my $flighted++ if $round->flighted > 1;

	my $filepath = $Tab::file_root."tmp/".$filename;

	open (TEXOUT, ">>$filepath.tex");

	my $tabular = "\\begin{tabular}{p{1.5in}p{1.5in}p{2in}p{1.5in}}\n";
	$tabular = "\\begin{tabular}{p{.075in}p{.6in}p{.6in}p{.725in}p{.85in}}\n" if $flighted;

	print TEXOUT "\\begin{tabular}{p{2in}p{3in}p{1.5in}}\n";
	print TEXOUT " & & \\\\ \n";
	print TEXOUT "\\Large ". Tab::texify($round->realname);
	print TEXOUT " & \\Large ". Tab::texify($round->event->name);
	print TEXOUT " & \\Large Start: ".$start->hour_12.":".$start->strftime("%M")." ".$start->strftime("%p");
	print TEXOUT "\\\\ \n";
	print TEXOUT "\\hline \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\small\n";

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1.0,.95,.94}\[6pt\]\[6pt\]\n";

	if ($round->event->type eq "pf" || $round->type eq "elim" ) { 
		print TEXOUT "Fl & Teams &  & Room & Judge \\\\ \n" if $flighted;
		print TEXOUT "Teams & & Room  & Judge \\\\ \n" unless $flighted;
	} else { 
		print TEXOUT "Fl & Aff & Neg & Room & Judge \\\\ \n" if $flighted;
		print TEXOUT "Aff & Neg & Room & Judge \\\\ \n" unless $flighted;
	}

	print TEXOUT "\\end{tabular}\n";

	if ($flighted) { 
		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{1.0,.95,.94}\[6pt\]\[6pt\]\n";
		if ($round->event->type eq "pf" || $round->type eq "elim" ) { 
			print TEXOUT "Fl & Teams &  & Room & Judge \\\\ \n";
		} else { 
			print TEXOUT "Fl & Aff & Neg & Room & Judge \\\\ \n";
		}

		print TEXOUT "\\end{tabular}\n";
	}

	print TEXOUT "\\newline\n";
	print TEXOUT "\\footnotesize\n";
	print TEXOUT "\\scriptsize\n" if scalar @panels > 48 && not defined $flighted;

	my $event = $round->event;
	my $codes = $tourn->setting("schemat_display");

	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);
	my @judges = $m->comp("/funclib/round_judges.mas", round => $round);
	my @ballots = $m->comp("/funclib/round_ballots.mas", round => $round);

	my %judge_by_id = ();
	foreach my $judge (@judges) { 
		$judge_by_id{$judge->id} = $judge;
	}

	my %entries_by_panel = ();

	foreach my $entry (@entries) { 
		next if $entry->dropped;
		next if $entry->dq;
		push (@{$entries_by_panel{$entry->panelid}}, $entry);
	}

	my %ballots_by_entry = ();
	my %panel_undone = ();
	my %judges_by_panel = ();

	foreach my $ballot (@ballots) { 
		push @{$ballots_by_entry{$ballot->entry->id}}, $ballot if $ballot->entry;
		$panel_undone{$ballot->panel->id}++ unless $ballot->audit;
		push @{$judges_by_panel{$ballot->panel->id}}, $judge_by_id{$ballot->judge->id} if  $judge_by_id{$ballot->judge->id};
	}


	@panels = sort {$a->flight cmp $b->flight} @panels if $flighted;
	@panels = sort {$a->roomname cmp $b->roomname} @panels;
	@panels = sort {$a->bye cmp $b->bye} @panels;

	my $switch;
	my $last_room;
	my $last_flight;

	foreach my $panel (@panels) { 
	
		unless ($last_room == $panel->room->id) { 
			print TEXOUT "\\newline\n";
			$switch++;

			if ($flighted && $panel->flight == 2) { 
				print TEXOUT $tabular."\n";
				print TEXOUT "\\rowcolor[rgb]{.95,.95,.94}\[5.5pt\]\[5.5pt\]\n" if $switch % 2;
				print TEXOUT "& & & & \\\\ \n \\end{tabular}\n" if $panel->flight == 2;
			}
			$last_room = $panel->room->id;
		}

		next unless $entries_by_panel{$panel->id};
	
		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.95,.95,.94}\[5.5pt\]\[5.5pt\]\n" if $switch % 2;

		print TEXOUT $panel->flight." & " if $flighted;

		my $aff;
		my $neg;
		my $bye;

		foreach my $pc (@{$entries_by_panel{$panel->id}}) { 

			if ($ballots_by_entry{$pc->id}) { 
				$bye = $pc if $panel->bye;
				$aff = $pc if ${$ballots_by_entry{$pc->id}}[0]->side == "1";
				$neg = $pc if ${$ballots_by_entry{$pc->id}}[0]->side == "2";
			}

		}

		if ($panel->bye) { 
			print TEXOUT Tab::texify($bye->code)." & ";  
		} elsif ($aff) { 
			print TEXOUT Tab::texify($aff->code)." & ";  
		} 

		if ($panel->bye) { 
			print TEXOUT "BYE & & ";  
		} elsif ($neg) { 
			print TEXOUT Tab::texify($neg->code);  
		}

		print TEXOUT " & \\scriptsize \\truncate[]{.72in}{".$panel->roomname."} & " if $flighted && $panel->bye < 1;
		print TEXOUT " & \\scriptsize \\truncate[]{1.9in}{".$panel->roomname."} & " unless $flighted || $panel->bye;

		my $notfirst;
		my %used = ();
		foreach my $judge (@{$judges_by_panel{$panel->id}}) {

			next if $used{$judge->id};
			$used{$judge->id}++;

			if ($notfirst) { 
				print TEXOUT "\\\\ \n";
				print TEXOUT "\\rowcolor[rgb]{.95,.95,.94}\[5.5pt\]\[5.5pt\]\n" if $switch % 2;
				print TEXOUT "& & & " unless $flighted;
				print TEXOUT "& & & & " if $flighted;
			}

			print TEXOUT " * " if $judge->chair;
			print TEXOUT "\\truncate[]{.78in}{".Tab::texify($judge->last.", ".$judge->first)." }" if $flighted;
			print TEXOUT "\\truncate[]{1.90in}{".Tab::texify($judge->last.", ".$judge->first)." }" unless $flighted;
			$notfirst++;
		} 


		print TEXOUT "\\\\ \n\\end{tabular}\n";


	} 

</%init>


