<%args>
	$tourn
	$account
	$name => undef
	$circuit_id => undef
	$start => undef
	$end => undef
	$reg_start => undef
	$reg_starttime => undef
	$reg_end => undef
	$reg_endtime => undef
	$drop_deadline => undef
	$drop_deadlinetime => undef
	$judge_deadline => undef
	$judge_deadlinetime => undef
	$freeze_deadline => undef
	$freeze_deadlinetime => undef
	$fine_deadline => undef
	$fine_deadlinetime => undef
	$tz => undef
</%args>
<%init>

	$tz = $tourn->tz unless $tz;

	my $startdt = Tab::dateme($start);
	my $enddt = Tab::dateme($end);
	my $reg_startdt = Tab::dtme($reg_start,$reg_starttime);
	my $reg_enddt = Tab::dtme($reg_end,$reg_endtime);
	my $drop_deadlinedt = Tab::dtme($drop_deadline,$drop_deadlinetime);
	my $judge_deadlinedt = Tab::dtme($judge_deadline,$judge_deadlinetime);
	my $freeze_deadlinedt = Tab::dtme($freeze_deadline,$freeze_deadlinetime);
	my $fine_deadlinedt = Tab::dtme($fine_deadline,$fine_deadlinetime);

	$drop_deadlinedt = $reg_enddt->clone unless $drop_deadlinedt;
	$judge_deadlinedt = $reg_enddt->clone unless $judge_deadlinedt;
	$freeze_deadlinedt = $reg_enddt->clone unless $freeze_deadlinedt;
	$fine_deadlinedt = $reg_enddt->clone unless $fine_deadlinedt;

	$tourn->end($enddt->set_time_zone($tz));
	$tourn->start($startdt->set_time_zone($tz));
	$tourn->reg_end($reg_enddt->set_time_zone($tz));
	$tourn->reg_start($reg_startdt->set_time_zone($tz));

	$tourn->setting("drop_deadline", "date", $drop_deadlinedt->set_time_zone($tz));
	$tourn->setting("judge_deadline", "date", $judge_deadlinedt->set_time_zone($tz));
	$tourn->setting("freeze_deadline", "date", $freeze_deadlinedt->set_time_zone($tz));
	$tourn->setting("fine_deadline", "date", $fine_deadlinedt->set_time_zone($tz));

	$tourn->update;

	my $msg = "Date changes have been saved";

	$m->redirect("/setup/date/date.mhtml?msg=$msg");

</%init>
