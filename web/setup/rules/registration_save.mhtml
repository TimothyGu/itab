<%args>
	$tourn
	$from => undef
	$require_adult_contact => 0
	$hidden => 0
	$track_reg_changes => 0
	$publish_schools => 0
	$hide_codes => 0
	$incremental_school_codes => 0
	$first_school_code => 0
	$ask_qualifying_tournament => 0
	$ask_two_quals => 0
	$must_pay_dues => 0
	$judge_cells => 0
	$track_first_year => 0
	$publish_paradigms => 0
</%args>
<%init> 

	if ($tourn->method) { 

	
		my $method = $tourn->method;

		$method->require_adult_contact($require_adult_contact);
		$method->track_reg_changes($track_reg_changes);
		$method->publish_schools($publish_schools);
		$method->hide_codes($hide_codes);
		$method->incremental_school_codes($incremental_school_codes);
		$method->first_school_code($first_school_code);
		$method->ask_qualifying_tournament($ask_qualifying_tournament);
		$method->ask_two_quals($ask_two_quals);
		$method->must_pay_dues($must_pay_dues);
		$method->judge_cells($judge_cells);
		$method->track_first_year($track_first_year);
		$method->publish_paradigms($publish_paradigms);

		$method->update;

	} else { 

		my $method = Tab::Method->create({ 
			first_school_code => $first_school_code,
			incremental_school_codes => $incremental_school_codes,
			double_entry => "none",
			must_pay_dues => $must_pay_dues,
			hide_codes => $hide_codes,
			publish_schools => $publish_schools,
			ask_qualifying_tournament => $ask_qualifying_tournament,
			ask_two_quals => $ask_two_quals,
			require_adult_contact => $require_adult_contact,
			publish_paradigms => $publish_paradigms,
			judge_cells => $judge_cells,
			track_first_year => $track_first_year,
			track_reg_changes => $track_reg_changes,
		});

	}

	if ($tourn) { 
		$tourn->hidden($hidden);
		$tourn->update;
	}

	if ($from eq "Save Settings & Go To Paneling Setup") { 
		$m->redirect("paneling.mhtml");
	} else { 
		$m->redirect("registration.mhtml");
	}

</%init> 

