<%args>
	$circuit
	$tourn
	$event_id
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);
	my $err;

	TIMESLOT:
	foreach my $timeslot ($tourn->timeslots) { 

		my @existing_rounds = Tab::Round->search( timeslot => $timeslot->id, event => $event->id);

		my $round;

		if (@existing_rounds) { 
			$round = shift @existing_rounds;
			#KILL THE SPARE, WORMTAIL
			foreach (@existing_rounds) { $_->delete; }
		}

		unless ($ARGS{$timeslot->id} > 0) { 
			$round->delete if $round;
			next TIMESLOT;
		}

		my $label = $ARGS{$timeslot->id."_label"};
		my $abbr = $event->abbr;
		my $name = $event->name;

		if ( index(uc($label),uc($event->abbr)) != -1) { 
			$err = "Do not include the abbreviation of the event in the round label.  The system does this for you already, so if you include it too then it doubles up and everything looks stupid.";
			$label =~ s/$abbr." "//egi;
			$label =~ s/$abbr//egi;
		}

		if ( index(uc($label),uc($event->name)) != -1) { 
			$err = "Do not include the name of the event in the round label.  The system does this for you already, so if you include it too then it doubles up and everything looks stupid.";
			$label =~ s/$name." "//egi;
			$label =~ s/$name//egi;
		}

		$label =~ s/^\s+//;
		$label =~ s/\s+$//;

		if ($round && $label eq $round->name) { 
			undef $label;
			$err .= "<br /><br />There is no need to label rounds with their number. Labels are only to call rounds things like Semi or Finals";
		}

		if($round) { 
			$round->label($label);
			$round->type($ARGS{$timeslot->id."_type"});
			$round->tb_set($ARGS{$timeslot->id."_tb_set"});
			$round->site($ARGS{$timeslot->id."_site"});
			$round->pool($ARGS{$timeslot->id."_pool"});
			$round->update;

		} else { 

			$round = Tab::Round->create({ 
				event => $event->id,
				timeslot => $timeslot->id,
				judges => 1,
				label => $label,
				type => $ARGS{$timeslot->id."_type"},
				tb_set => $ARGS{$timeslot->id."_tb_set"},
				site => $ARGS{$timeslot->id."_site"},
				pool => $ARGS{$timeslot->id."_pool"}
			});

		}

	}

	$m->comp("/funclib/renumber_rounds.mas", event_id => $event->id);

	my $msg = "Round assignments saved";

	$m->redirect("/setup/schedule/event.mhtml?event_id=".$event->id."&msg=$msg&err=$err");


</%init>
