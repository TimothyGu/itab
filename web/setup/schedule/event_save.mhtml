<%args>
	$circuit
	$tourn
	$event_id
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);

	TIMESLOT:
	foreach my $timeslot ($tourn->timeslots) { 

		my @existing_rounds = Tab::Round->search( timeslot => $timeslot->id, event => $event->id);

		my $round;

		if (@existing_rounds) { 
			$round = shift @existing_rounds;
			#KILL THE SPARE, WORMTAIL
			foreach (@existing_rounds) { $_->delete; }
		}

		unless ($ARGS{$timeslot->id} > 0) { 
			$round->delete if $round;
			next TIMESLOT;
		}

		if($round) { 

			$round->label($ARGS{$timeslot->id."_label"});
			$round->type($ARGS{$timeslot->id."_type"});
			$round->site($ARGS{$timeslot->id."_site"});
			$round->pool($ARGS{$timeslot->id."_pool"});
			$round->update;

		} else { 

			$round = Tab::Round->create({ 
				event => $event->id,
				timeslot => $timeslot->id,
				label => $ARGS{$timeslot->id."_label"},
				type => $ARGS{$timeslot->id."_type"},
				site => $ARGS{$timeslot->id."_site"},
				pool => $ARGS{$timeslot->id."_pool"}
			});

		}

	}

	$m->comp("/funclib/renumber_rounds.mas", event_id => $event->id);

	my $msg = "Round assignments saved";

	$m->redirect("/setup/schedule/event.mhtml?event_id=".$event->id."&msg=$msg");


</%init>
