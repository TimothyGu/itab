<%args>
	$username => undef
	$password => undef
</%args>
<%init>

	use Crypt::PasswdMD5;

	my $now = DateTime->now;

	#ACCOUNT
	my ($account) = Tab::Account->search( email => lc($username) );
	unless ($account) { 
		$m->print("NO_SUCH_ACCOUNT");
		$m->abort;
	}

	$password =~ s/\s+$//g;
	my $db_password = $account->passhash;
   	my $verify_password = unix_md5_crypt($password,$db_password);
   
   	unless ($verify_password eq $db_password) { 
	   	$m->print("PASSWORD_WRONG");
		$m->abort;
	}

	my @panels = $m->comp("/funclib/account_student_panels.mas", account => $account, student => 1);

	use XML::Simple;
	my $xs = new XML::Simple();

	my @rounds;

	$r->content_type("application/xml");
	$m->print("<?xml version='1.0' standalone='yes'?>\r\n");
	$m->print("<ACCOUNT_ROUNDS>\r\n");

	foreach my $panel (@panels) { 

		my $tz = $panel->round->event->tourn->tz;
		$tz = "UTC" unless $tz;
		my $tzname = Tab::tzname($tz);

		my $room_name = $panel->room->name if $panel->room;
		my $opp_code;
		my $opp_name;
		my $opp_school;
		my $side;

		foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) { 
			my $moi;
			foreach my $student ($entry->students) { 
				$moi++ if $student->account && $student->account->id == $account->id;
			}
			if ($moi) { 
				$side = "Aff" if $entry->side == 1;
				$side = "Neg" if $entry->side == 2;
			} else { 
				$opp_code = $entry->code;
				$opp_name = $entry->name;
				$opp_school = $entry->school->short_name;
			}
		}

		my $judge_string;

		foreach my $judge ($m->comp("/funclib/panel_judges.mas", panel => $panel)) { 
			$judge_string .= "; " if $judge_string;
			$judge_string .= $judge->first." ".$judge->last;
		}

	    my $xml_round = { 
			ROUND_NAME => $panel->round->realname,
			START => Tab::niceshortdt($panel->round->timeslot->start)." ".$tzname,
			BYE => $panel->bye,
			ROOM =>  $room_name,
			SIDE => $side,
			OPPONENT_CODE => $opp_code,
			OPPONENT_NAME => $opp_name,
			OPPONENT_SCHOOL => $opp_school,
			JUDGING => $judge_string
		};  

		$m->print($xs->XMLout($xml_round, RootName => "", NoAttr => 1, XMLDecl => 0));
	}

	$m->print("</ACCOUNT_ROUNDS>");

</%init>

