<%args> 
	$league
	$school_id
</%args>

<%init> 
	use POSIX;
	my $school = Tab::School->retrieve($school_id); 
	my $tourn = $school->tournament;
	my @comps = $school->comps(waitlist => 0);
	my @fines = Tab::Fine->search( school => $school_id ); 

	my $total; 

	foreach my $comp (@comps) { 
		my $event = $comp->event;
		$total = $total + $event->fee;
	}

	foreach my $fine (@fines) { 
		$total = $total + $fine->amount; 
	} 

	foreach my $group ($tourn->groups) { 
		my @comps;
		my @classes = $group->classes;
		my @judges = Tab::Judge->search( school => $school_id, judge_group => $group->id);

		
    if ($tourn->method->judge_quality_system == 1) {
        my @usable_judges;

        JUDGE:
        foreach my $judge (@judges) {

            foreach my $qual ($judge->quals) {
                push (@usable_judges, $judge) if $qual->useme;
                next JUDGE if $qual->useme;
            }

        }

        @judges = @usable_judges;
    }



		foreach (@classes) { 
			my @events = $_->events;
			foreach my $event (@events) { 
				push (@comps, Tab::Comp->search( event => $event->id, school => $school_id, waitlist => 0 ));
			}
		}

		my $num_comps = scalar @comps;
		my $num_judges = scalar @judges;
		my @hires = Tab::JudgeHire->search( school => $school->id, judge_group => $group->id);
		my $num_hires;
		# $num_hires = $hires[0]->amount if @hires;
		$num_judges = $num_judges + $num_hires;

		$total = $total + $num_hires * $group->hired_fee;

		my $judge_per = $group->judge_per if ($group->judge_per != 0);
		$judge_per = $group->dio_min if ($group->dio_min != 0);


		if ($league->apda_seeds) { 

	        my $judge_obl = ($num_comps - 2) / $judge_per;
    	    $judge_obl = ceil ($judge_obl);

        	if ($judge_obl > $num_judges) {
        	    $total = $total + (($judge_obl - $num_judges) * $group->missing_judge_fee);
        	}

		} else { 

		if ($judge_per != 0) {

				my $judge_obl = $num_comps / $judge_per;
				$judge_obl = ceil($judge_obl);
		
				if ($judge_obl > $num_judges) { 
					$total = $total + (($judge_obl - $num_judges) * $group->missing_judge_fee);
				}		

				my $covered_entries = $num_judges * $judge_per;

				if ($covered_entries < $num_comps) { 
					my $uncovered_entries = $num_comps - $covered_entries;
					$total = $total + ($uncovered_entries * $group->uncovered_entry_fee);
				}		
		}

		}
	
	}

	return $total;

</%init> 
