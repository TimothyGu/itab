<%args>
	$entry_id
	$school_id
</%args>
<%init>

	my $msg;

	my $entry = Tab::Entry->retrieve($entry_id);

	if ($school_id && $school_id != $entry->school->id) { 
		$entry->school($school_id);
		$entry->update;
		$msg .= "Entry school changed <br />";
	}


	foreach my $student ($entry->students) { 

		if ($ARGS{$student->id} && $ARGS{$student->id} != $student->id) { 
			$entry->rm_student($student->id);
			$entry->add_student($ARGS{$student->id});
			$msg .= $student->first." ".$student->last." swapped out <br />";
		}

	}

	if ($ARGS{"new"}) { 
		$entry->add_student($ARGS{"new"});
	}

	my @students = $entry->students;
	my $event = $entry->event;
	my $school = $entry->school;
	my $tourn = $school->tourn;
	my $err;
	my $codes = $event->setting("code_style");
	my $code;
	my $name;

	if ($entry->tba || $entry->code eq "TBA" || not defined $entry->code) { 

		if ($codes eq "numbers") { 

			$code = $m->comp("/funclib/event_code.mas", event => $event);

		} elsif ($codes eq "school_number") { 

			$code = $school->code." ".$m->comp("/funclib/event_code.mas", event => $event);
		}
	}

	if ($codes eq "initials" || $codes eq "full_initials" || ($codes eq "register" && $entry->tba) ) { 

		if ($codes eq "full_initials") { 
			$code = $school->short_name;
		} else { 
			$code = $school->code;
			$code = $m->comp("/funclib/school_codename.mas", school => $school) unless $code;
			$code = $m->comp("/funclib/school_codename.mas", school => $school) if $tourn->setting('school_codes') eq "incremental";
		} 

		$code.= " ";

		my $initials;

		if (scalar @students == 1) { 

			$initials .= ucfirst substr($students[0]->first, 0, 1). ucfirst substr($students[0]->last, 0, 1);

		} else {

			foreach my $student (@students) {
				$initials .= ucfirst substr ($student->last, 0, 1);
			}

		}
		
		my $other = Tab::Entry->search( code => $code.$initials, school => $school->id, event => $event->id )->first;

		my $counter;

		while ($other) {
			$counter++;	
			undef $other;
			$other = Tab::Entry->search( code => $code.$initials.$counter, school => $school->id, event => $event->id )->first;
		}

		$err .= "Code $initials already existed. You can choose another or keep $code$initials$counter as the code" if $counter;
		$code .= $initials.$counter;

	} elsif ($codes eq "names") { 

		$code = $school->short_name." ";

		if (scalar @students == 1) { 
			$code .= $students[0]->first." ".$students[0]->last;
		} else {
			foreach my $student (@students) {
				$code .= $students->last;
			}
		}
	}

    if (scalar @students > 2) { 

        $name = $school->short_name." ";
        foreach my $stud (@students) { 
            $name .= ucfirst substr($stud->last,0,1);
        }

    } else { 
        $name = $students[0]->first." ".$students[0]->last if scalar @students == 1;
        $name = $students[0]->last." & ".$students[1]->last if scalar @students == 2;
    }   

	$entry->name($name);
	$entry->tba("");
	$entry->code($code) if $code;
	$entry->update;

	$m->redirect("$Tab::url_prefix/register/entry/edit.mhtml?entry_id=$entry_id&msg=$msg");
		
</%init>
