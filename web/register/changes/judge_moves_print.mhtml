<%args>
	$tourn
	$startdate => undef
	$starttime => undef
	$enddate => undef
	$endtime => undef
	$session
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	my $start = Tab::dtme($startdate,$starttime,$tz) if $startdate;
	my $end = Tab::dtme($enddate,$endtime,$tz) if $enddate;

	unless ($start) { 
		$start = $now->clone;
		$start->subtract( hours => 24 );
	}

	unless ($end) { 
		$end = $now->clone;
	}

	$start->set_time_zone($tz);
	$end->set_time_zone($tz);

	Tab::TournChange->set_sql( moves_by_date => "
		select distinct tourn_change.*
		from tourn_change
		where tourn = ?
		and type = \"judge\"
		and timestamp > ?
		and timestamp < ? 
		order by timestamp DESC");

	my $search_start = $start->clone;
	my $search_end = $end->clone;
	$search_start->set_time_zone("UTC");
	$search_end->set_time_zone("UTC");

	my @moved_judges = Tab::TournChange->search_moves_by_date($tourn->id, DateTime::Format::MySQL->format_datetime($search_start), DateTime::Format::MySQL->format_datetime($search_end));

	my %sortpanels = ();
	
	foreach my $mj (@moved_judges) { 
		$sortpanels{$mj->id} = $mj->old_panel if $mj->old_panel;
		$sortpanels{$mj->id} = $mj->new_panel if $mj->new_panel;
	}

	@moved_judges = sort {eval{$a->new_panel->id} <=> eval{$b->new_panel->id}} @moved_judges;

	@moved_judges = sort {$sortpanels{$a->id}->letter cmp $sortpanels{$b->id}->letter} @moved_judges;

	@moved_judges = sort {$b->timestamp->epoch <=> $a->timestamp->epoch} @moved_judges;

	my $switch; 

	my $name = $tourn->name;
	$name =~ s/[\W_]//g;

	my $ncfl++ if $tourn->setting("ncfl");

    my $filename = "JudgeMoves-".$name."-".$session->id;
    my $filepath = $Tab::file_root."/tmp/";
    my $garbage = `rm -f $filepath"."$filename.*`;

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, no_header => 1, taller => 1);

	open (TEXOUT, ">>$filepath"."$filename.tex");

	print TEXOUT "{\\LARGE \\bf ".Tab::texify($tourn->name)." \\hfill Judge Moves } \n ";
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";

	my $tabular = "\\begin{tabular}{ p{.5in} p{1.25in} p{.5in} p{.5in} p{1.25in} p{.5in} p{1.25in}}\n";

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
	print TEXOUT " Judge & Name & Event & Round & Room & Fine & Made \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	foreach my $move (@moved_judges) { 

		next unless $move->judge->id;
		my $timestamp = $move->timestamp->set_time_zone($tz);

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

		print TEXOUT $move->judge->school->region->code." ".$move->judge->code." & " if $ncfl && $move->judge->school;
		print TEXOUT Tab::texify($move->judge->first." ".$move->judge->last)." & ";
		
		if ($move->new_panel) { 

			print TEXOUT $move->new_panel->round->event->abbr if $move->new_panel->round;
			print TEXOUT " & TO ";
			print TEXOUT $move->new_panel->round->name  if $move->new_panel->round;
			print TEXOUT " & ";
			print TEXOUT $move->new_panel->room->name if $move->new_panel->room;
			print TEXOUT " & ";

		} elsif ($move->old_panel) { 
			print TEXOUT $move->old_panel->round->event->abbr if $move->old_panel->round;
			print TEXOUT " & FROM ";
			print TEXOUT $move->old_panel->round->name  if $move->old_panel->round;
			print TEXOUT " & ";
			print TEXOUT $move->old_panel->room->name if $move->old_panel->room;
			print TEXOUT " & ";
		}

		print TEXOUT $move->fine->amount if $move->fine;
		print TEXOUT " & ";
		print TEXOUT Tab::niceshortdt($timestamp->set_time_zone($tourn->tz));
		print TEXOUT "\n\\end{tabular}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>

