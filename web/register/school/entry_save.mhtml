<%args>
	$tourn
	$event_id
	$school_id
	$account
	$title => undef
	$seed => undef
	$code => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);
	my $school = Tab::School->retrieve($school_id);
	
    my $now = DateTime->now;
    $now->set_time_zone($tourn->tz);

    my $fine_deadline = $tourn->setting("fine_deadline");
    $fine_deadline->set_time_zone($tourn->tz) if $fine_deadline;
	my $fine_amount = $tourn->setting("add_fine") if $now > $fine_deadline;

	my $minimum = $event->setting("min_entry");

	my @students;
	my %already;
	
	foreach my $slot (1 .. $event->setting("max_entry")) { 

		if ($slot < $minimum && not defined $ARGS{$slot}) { 
			my $err = "You did not enter enough students for a valid entry";
			$m->redirect("entries.mhtml?school_id=$school_id&event_id=$event_id&err=$err");
		}

		if ($already{$ARGS{$slot}}) { 
			my $err = "You entered the same student twice.  Please try again";
			$m->redirect("entries.mhtml?school_id=$school_id&event_id=$event_id&err=$err");
		}

		$already{$ARGS{$slot}}++;

	}

	my $entry = Tab::Entry->create({ 
		tourn         => $tourn->id,
		school        => $school_id,
		event         => $event_id,
		code		  => $code,
		title		  => $title,
		reg_time 	  => $now,
		dropped       => 0
	});

	foreach my $student_id (keys %already) { 
		$entry->add_student($student_id);
	}

	if ($now > $fine_deadline) { 

		my $add_reason = "Late Add in ". $entry->event->abbr;

		my $fine = Tab::SchoolFine->create({ 
			school => $school_id,
			amount => $fine_amount,
			reason => $add_reason,
			levied_on => $now,
			levied_by => $account->id
		}) if $fine_amount > 0;
		
	}

	my $code_setting = $event->setting("code_style");
	$code_setting = "numbers" unless $code_setting;

	if ($code_setting eq "numbers" || $code_setting eq "school_number") { 

		$code = $m->comp("/funclib/event_code.mas", event => $event);

	} elsif ($code_setting eq "initials" || $code_setting eq "names") { 

		foreach my $student_id (keys %already) { 
			my $student = Tab::Student->retrieve($student_id);
			if (scalar (keys %already) == 1) { 
				$code = ucfirst(substr($student->first, 0,1)).ucfirst(substr($student->last, 0,1));
			} else { 
				$code .= ucfirst(substr($student->last, 0,1));
			}
		}


	}

	$entry->code($code);
	$entry->update;
	
	my $msg = "Competitor entered late in ". $event->name." with code $code";
	$m->redirect("code_duplicate.mhtml?school_id=$school_id&event_id=$event_id&savemsg=$msg");

</%init>


