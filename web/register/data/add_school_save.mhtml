<%args>
	$tourn
	$chapter_id => undef
</%args>
<%init>

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my @already = Tab::School->search( chapter => $chapter_id, tourn => $tourn->id);

	if (@already) { 
		my $err = $chapter->name." is already entered in your tournament.  Try again";
		$m->redirect("add_school.mhtml?err=$err");
	}

	unless ($chapter) { 
		my $err = "That chapter was not found for some reason.  Please try again";
		$m->redirect("add_school.mhtml?err=$err");
	}

	my @circuits = $m->comp("/funclib/tourn_circuits.mas", tourn => $tourn);

	my $msg;
	my $code;
	my $region_id;
	my $school;

	if (scalar @circuits == 1) { 

		my ($cm) = Tab::ChapterCircuit->search( chapter => $chapter->id, circuit => $circuits[0]->id );
		
		if ($cm) { 
			$code = $cm->code;
			$region_id = $cm->region->id if $cm->region;
		}

	}

	unless (@already) { 

		my $school_code;

		if ($tourn->setting("incremental_school_codes")) {

			Tab::School->set_sql(highest_code => " select max(code) from school where tourn = ?");
           	my $highest_code = Tab::School->sql_highest_code->select_val($tourn->id);

			if ($highest_code) { 
				$highest_code++;
			} else { 
           		$highest_code = $tourn->setting("first_school_code") 
			}

			$code = $highest_code;
		} 

		$school = Tab::School->create({
			chapter => $chapter->id,
			tourn => $tourn->id,
			name => $chapter->name,
			region => $region_id,
			code => $code,
		});

		$m->comp('/funclib/chapter_conflicts.mas', school => $school);
		 
		$msg = "School ".$chapter->name." has been added to your tournament entry";

	}

	$m->redirect("$Tab::url_prefix/register/data/add_school.mhtml?msg=$msg");


</%init>
