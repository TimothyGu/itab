<%args>
	$judge_id
	$school_id
	$tourn_id
	$day
</%args>
<%perl>

	my $now = DateTime->now();

	my $judge = Tab::Judge->retrieve($judge_id);
	my $school = Tab::School->retrieve($school_id);
	my $tourn = Tab::Tourn->retrieve($tourn_id);
	my $night = DateTime::Format::MySQL->parse_date($day);

	#Does the judge have gender?	
	unless ($judge->gender) { 
		my $err = "You must fill in the judge's gender before you can request housing";
		$m->redirect("$Tab::url_prefix/register/housing_school.mhtml?hijud=$judge_id&err=$err&school_id=$school_id");
	}

	# How many slots do we have tonight? 
	my @slots = Tab::HousingSlots->search( night => $night->ymd, tournament => $tourn->id );
	my $num_slots = $slots[0]->slots;

	# Are we over that number of requests already?
	my @requests =  Tab::Housing->search( night => $night->ymd, tournament => $tourn->id );
	my $waitlist = 0;
	$waitlist++ if $num_slots < scalar @requests;

	my $existing_request = $judge->housing($night);
	
	my $housing_request = Tab::Housing->create({
		tournament => $tourn->id,
		night => $night,
		judge => $judge_id,
		waitlist => $waitlist,
		requested => $now,
		type => "judge"
	}) unless $existing_request;

	my $err = "Housing for ".$judge->first." ".$judge->last." on ".$night->day_name." confirmed.";
	$err = "The housing for this tournament is currently full on ".$night->day_name.".  ".$judge->first." ".$judge->last." has been placed on the waitlist." if $waitlist;

    my $target = "judge".$judge->id if $judge;
	$m->redirect("$Tab::url_prefix/register/housing_school.mhtml?err=$err&school_id=$school_id#$target");

</%perl>
