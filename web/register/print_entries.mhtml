<%args>
	$circuit
	$tourn
	$account
	$session
	$event_id => 0
	$sort_by => "code"
	$debug => undef
</%args>
<%init>

	my @events = $m->comp("/funclib/tourn_events.mas", tourn => $tourn) unless $event_id;
	push (@events, Tab::Event->retrieve($event_id)) if $event_id;

	@events = sort {$a->name cmp $b->name} @events;

    my $string = $events[0]->name if $event_id;
	$string = "all-events" unless $event_id;
	$string =~ s/\s+//g;
	$string =~ s/\'//g; #'
	$string =~ s/\)//g; #'
	$string =~ s/\(//g; #'

my $filename = $Tab::file_root."/tmp/entries-".$string."-".$session->id;
my $garbage = `rm -f $filename.*`;
	
open (TEXOUT, ">$filename.tex");

print TEXOUT <<"EOF";

\\documentclass[10pt]{letter}
\\usepackage{fullpage}
\\usepackage{helvet}
\\usepackage{colortbl}
\\usepackage{fancyhdr,lastpage}
\\usepackage[hmargin=.8in,vmargin=1in]{geometry}
\\pagestyle{fancy}
\\fancyhf{} % clear all header and footer fields
\\fancyfoot[R]{\\footnotesize Page \\thepage\\ of \\pageref{LastPage}}
\\fancyfoot[L]{\\footnotesize Printed by the Tabroom.com free online tournament management system}

EOF
    print TEXOUT "\\fancyhead[CO]{\\large ".&Tab::texify($tourn->name)." entry in ". &Tab::texify($events[0]->name) ."} \n" if $event_id;
    print TEXOUT "\\fancyhead[CO]{\\large ".&Tab::texify($tourn->name)." entry listing }\n" unless $event_id;
	print TEXOUT <<"EOF";

\\renewcommand{\\headrulewidth}{0pt}
\\renewcommand{\\footrulewidth}{0pt}

\\renewcommand{\\familydefault}{\\sfdefault}
\\renewcommand{\\arraystretch}{1.4}

\\setlength{\\headsep}{0.25in}      

\\addtolength{\\textwidth}{1in}
\\addtolength{\\hoffset}{-.2in}

\\begin{document}

EOF

foreach my $event (@events) { 

	my @comps = sort {$a->code <=> $b->code} $event->comps;

	if ($sort_by eq "name") { 
		@comps = sort {$a->student->last cmp $b->student->last} @comps;
	}

	if ($sort_by eq "partname") { 
		@comps = sort {$a->partner->last cmp $b->partner->last} @comps;
	}

	if ($sort_by eq "team") { 
		@comps = sort {$a->name cmp $b->name} @comps;
	}

	if ($sort_by eq "schname") { 
		@comps = sort {$a->school->name cmp $b->school->name} @comps;
	}

	if ($sort_by eq "schcode") { 
		@comps = sort {$a->school->code cmp $b->school->code} @comps;
	}

	if ($sort_by eq "regname" || $sort_by eq "dioname") { 
		@comps = sort {$a->school->region->name cmp $b->school->region->name} @comps;
	}

	if ($sort_by eq "regcode" || $sort_by eq "diocode") { 
		@comps = sort {$a->school->region->code cmp $b->school->region->code} @comps;
		@comps = sort {length($a->school->region->code) cmp length($b->school->region->code)} @comps;
	}

	@comps = sort {$a->dropped <=> $b->dropped} @comps;
	@comps = sort {$a->waitlist <=> $b->waitlist} @comps;


	unless ($event->id) { 
		print TEXOUT "\\begin{center}\n";
		print TEXOUT "\\large{ ".$event->name."}\n";
		print TEXOUT "\\end{center}\n";
	}

	print TEXOUT "\\normalsize\n";

	my $tabular_string;

	if ($circuit->region_based || $circuit->diocese_based) { 

		$tabular_string = "\\begin{tabular}{p{.3in}p{.5in}p{1.35in}p{1.35in}p{.5in}p{1.5in}p{.5in}}\n";

	} elsif ($event->ask_for_titles) {

		$tabular_string = "\\begin{tabular}{p{.25in}p{.3in}p{.75in}p{.75in}p{1.45in}p{.20in}p{2.5in}}\n";

	} else { 

		$tabular_string =  "\\begin{tabular}{p{.3in}p{.3in}p{1.5in}p{1.5in}p{2.0in}p{.35in}}\n";
	}

	print TEXOUT $tabular_string;

	print TEXOUT "Code & ";
	print TEXOUT "Dio & "  if $circuit->diocese_based;
	print TEXOUT "Sch & "  unless $circuit->diocese_based;
	print TEXOUT "Name & & ";
	print TEXOUT "Diocese & " if $circuit->diocese_based;
	print TEXOUT "Region  & " if $circuit->region_based;
	print TEXOUT "School & State";
	print TEXOUT "& Title " if $event->ask_for_titles;
	print TEXOUT "\\\\ \n";
	print TEXOUT "\\hline \n";
	print TEXOUT "\\end{tabular}\n\\\\ \n";
	print TEXOUT "\\small\n" if $event->ask_for_titles;

	my $switch; 

foreach my $comp (@comps) { 

	next if $comp->waitlist;

	print TEXOUT $tabular_string;

	if ($comp->dropped) { 

		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n";
		print TEXOUT &Tab::texify("DROP")." & ";

	} elsif ($comp->waitlist) { 

		print TEXOUT "\\rowcolor[rgb]{.95,.95,.95}\n";
		print TEXOUT &Tab::texify("WL")." & ";

	} else { 

		if ($comp->ada) { 
			print TEXOUT "\\rowcolor[rgb]{.9,.9,.9}\n";
		} else { 
			print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\n" if ($switch++ % 2);
		}

		print TEXOUT "ADA " if $comp->ada;
		print TEXOUT &Tab::texify($comp->code)." & ";

	}

	if ($circuit->diocese_based) { 
		print TEXOUT &Tab::texify($comp->school->region->code)." & ";
	} else { 
		print TEXOUT &Tab::texify($comp->school->code)." & ";
	}

	if ($event->team == 1) { 

		print TEXOUT &Tab::texify($comp->student->first)." & ".&Tab::texify($comp->student->last)." & ";

	} elsif ($event->team == 2) { 

		print TEXOUT &Tab::texify($comp->student->first)." ".&Tab::texify($comp->student->last)." & ";
		print TEXOUT &Tab::texify($comp->partner->first)." ".&Tab::texify($comp->partner->last)." & " if $comp->partner;

	} else {
		print TEXOUT "\\multicolumn{2}{l}{".&Tab::texify($comp->name)."}  & ";
	}

	if ($circuit->diocese_based) { 
		print TEXOUT &Tab::texify($comp->school->region->name)." & ";
	}

	if ($circuit->region_based) { 
		print TEXOUT &Tab::texify($comp->school->region->code) if $comp->school && $comp->school->region;
		print TEXOUT " & ";
	}

	print TEXOUT &Tab::texify(substr($comp->school->name,0,23));
	print TEXOUT " & ". &Tab::texify($comp->school->chapter->state);

	print TEXOUT " & \\footnotesize ". &Tab::texify($comp->title) if $event->ask_for_titles;

	print TEXOUT "\\\\ \n";
	print TEXOUT "\\end{tabular}\n \\newline \n";
}

}

print TEXOUT "\\end{document}\n";
close TEXOUT;

$garbage = `cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;

`rm -f $filename.tex $filename.log $filename.dvi $filename.aux` unless $debug;

$m->redirect("$Tab::url_prefix/tmp/entries-".$string."-".$session->id.".pdf");

</%init>

<div id="content">

<p><% $filename %></p>
