<%args>
	$circuit
	$round_id
	$filename
	$schools => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	my @panels = sort {$a->letter cmp $b->letter} $round->panels;
	@panels = sort {length($a->letter) <=> length($b->letter)} @panels;
	my $event = $round->event;

    $schools = 1 if $event->tournament->method->schemat_school_code;

	open (TEXOUT, ">>$filename.tex");

	if ($event->type eq "speech") { 
	my $start = $round->timeslot->start;

	$start->set_time_zone($tourn->tz);

	print TEXOUT "\\nopagebreak\n";
	print TEXOUT "\\normalsize\n";
	print TEXOUT "\\begin{tabular}{p{1in}p{2in}p{3.5in}}\n";
	print TEXOUT " & & \\\\ \n";
	print TEXOUT ($round->label) ? "\\Large ". Tab::texify($round->label) : "\\Large Round ". Tab::texify($round->name);

	print TEXOUT " & \\Large Start: ".$start->hour_12.":".$start->strftime("%M")." ".$start->strftime("%p");
	print TEXOUT " & \\Large ". Tab::texify($round->event->name);
	print TEXOUT "\\\\ \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	if ($circuit->diocese_based) { 
		print TEXOUT "\\begin{tabular}{p{.25in}p{1.75in}p{1.25in}p{3.75in}}\n" if $schools;
		print TEXOUT "\\begin{tabular}{p{.25in}p{2in}p{1.5in}p{3.5in}}\n" unless $schools;
	} else { 
		print TEXOUT "\\begin{tabular}{p{.25in}p{1.0in}p{1.5in}p{4.25in}}\n";
	}

	print TEXOUT "\\rowcolor[rgb]{1.0,.95,.94}\[5.5pt\]\[5.5pt\]\n";
	print TEXOUT "\\large Pan & \\large Judge(s) & \\large Room & \\large Entrys \\\\ \n"; 
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	my $switch;

	foreach my $panel (@panels) {

		my @judges = $panel->judges;
		my @entries  = $panel->entries;
		my $room_name = $panel->room->name if $panel->room;

		if ($circuit->diocese_based) { 
			print TEXOUT "\\begin{tabular}{p{.25in}p{1.75in}p{1.25in}p{3.75in}}\n" if $schools;
			print TEXOUT "\\begin{tabular}{p{.25in}p{2in}p{1.5in}p{3.5in}}\n" unless $schools;
		} else { 
			print TEXOUT "\\begin{tabular}{p{.25in}p{1.0in}p{1.5in}p{4.25in}}\n";
		}

		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

		print TEXOUT "\\large ". Tab::texify($panel->letter) ." & ";
		print TEXOUT "\\large " unless $schools;
		print TEXOUT "\\normalsize " if $schools;

		my $notfirst;
		foreach my $judge (@judges) { 

			print TEXOUT " \\newline " if $notfirst;

			if ($circuit->diocese_based) { 
				print TEXOUT Tab::texify($judge->region->code) if $judge->region;
			} else { 
				print TEXOUT Tab::texify($judge->school->code)."-" if $judge->school && $judge->school->id;
			}

			print TEXOUT " XX-" unless $judge->school->id;
			print TEXOUT Tab::texify($judge->code); 
			$notfirst++;

		}

		print TEXOUT "& \\large " unless $schools;
		print TEXOUT "& \\normalsize " if $schools;
		print TEXOUT Tab::texify($room_name) ." & ";
		print TEXOUT "\\large " unless $schools;
		print TEXOUT "\\normalsize " if $schools;

		if ($schools) { 

			foreach my $entry (@entries) { 

				print TEXOUT sprintf("%05s", $entry->region->code."".$entry->code) 
								if $circuit->diocese_based;
				print TEXOUT sprintf("%05s", $entry->school->code."".$entry->code) 
								if $entry->school->code && $circuit->diocese_based != 1;

				foreach (1 .. $entry->how_doubled($panel)) {
					print TEXOUT "*";
				}
				print TEXOUT " ";
			}

		} else { 

			foreach my $entry (@entries) { 
				print TEXOUT "\\large ";
				print TEXOUT sprintf("%02d", $entry->code);
				foreach (1 .. $entry->how_doubled($panel)) {
					print TEXOUT "*";
				}
				print TEXOUT " ";
			}
		}

		print TEXOUT " \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

	}

}#end of if event type is speech

	if ($event->type eq "congress") { 

		print TEXOUT "\\begin{center}";

		foreach my $panel (@panels) { 

			my @entries = $panel->entries;

			@entries = sort {$a->student->last cmp $b->student->last} @entries;

			my @judges = $panel->judges;

			print TEXOUT "\\normalsize\n";
			print TEXOUT "\\begin{tabular}{ll}\n";

			my $start = $panel->timeslot->start;
			$start->set_time_zone($tourn->tz);

			print TEXOUT "\\multicolumn{2}{c}{\\large Chamber ". $panel->letter."  Room: ";
			print TEXOUT Tab::texify($panel->room->name);
			print TEXOUT " Start ";
			print TEXOUT $start->hour_12.":".$start->strftime('%M')." ".$start->strftime('%p');
			print TEXOUT " }\\\\\n";
			print TEXOUT "\\multicolumn{2}{c}{ Judges: ";
		
			my $jc;

			foreach my $judge (@judges) { 
				print TEXOUT ", " if $jc;
				print TEXOUT Tab::texify($judge->last);
				$jc++;
			}

			print TEXOUT "}\\\\\n";
			print TEXOUT "\\hline \n";

			my $cc;

			foreach my $entry (@entries) { 

				print TEXOUT Tab::texify($entry->code." ".$entry->student->first." ".$entry->student->last);
				print TEXOUT ", ";
				print TEXOUT substr($entry->school->name,0,20);

# (".$entry->student->chapter->code.") ";

				if ($cc == 1) {
					
					print TEXOUT " \\\\ \n";
					$cc = 0;

				} else {

					print TEXOUT " & ";
					$cc++;
				}
	
			}
	
		print TEXOUT "\\\\ \n ";
		print TEXOUT "\\multicolumn{2}{l}{\\large}\\\\\n";
		print TEXOUT "\\end{tabular}\n";

	}

		print TEXOUT "\\end{center}\n";
	close TEXOUT;

	}

	return;

</%init>
