<%args>
	$circuit
	$round_id
	$filename
	$schools => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	my @panels = $round->panels;
	@panels = sort { $a->letter cmp $b->letter } @panels;
	my $event = $round->event;

	$schools = 1 if $event->tournament->method->schemat_school_code;

	open (TEXOUT, ">>$filename.tex");

	if ($event->type eq "speech") { 
	my $start = $round->timeslot->start;

	$start->set_time_zone($circuit->timezone);

	print TEXOUT "\\nopagebreak\n";
	print TEXOUT "\\normalsize\n";
	print TEXOUT "\\begin{tabular}{p{2.0in}p{2.0in}p{2.5in}}\n";
	print TEXOUT " & & \\\\ \n";
	print TEXOUT ($round->label) ? "\\Large ". Tab::texify($round->label) : "\\Large Round ". Tab::texify($round->name) ;

	print TEXOUT " & \\Large ". Tab::texify($event->name);
	print TEXOUT " & \\Large Start: ".$start->hour_12.":".$start->strftime("%M")." ".$start->strftime("%p");
	print TEXOUT "\\\\ \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	my $count;

	foreach my $panel (@panels) {


		$count++;
		if ($count == 4) {
			print TEXOUT "\\newline\n";
			$count = 1;
		}

		my @judges = $panel->judges;
		my @comps  = $panel->comps;

		print TEXOUT "\\begin{tabular}{|p{2.0in}|}\n";
		print TEXOUT "\\multicolumn{1}{c}{\\large}\\\\ \n";
		print TEXOUT "\\hline\n";

		print TEXOUT "{\\bf Section ".$panel->letter." } \\\\ \n";
		print TEXOUT "Room ".Tab::texify($panel->room->name)." \\\\ \n" if $panel->room;

		if ($schools) { 

			foreach my $judge (@judges) { 
				print TEXOUT "Judge: ";
				print TEXOUT Tab::texify($judge->school->code)." " if $judge->school;
				print TEXOUT $judge->school->chapter->id if $judge->school && not defined $judge->school->code;
				print TEXOUT "HIRE " unless $judge->school;
				print TEXOUT Tab::texify(substr($judge->first,0,1).". ".$judge->last." "); 
				print TEXOUT "\\\\ \n";
			}

			print TEXOUT "\\hline\n";
			my $count; 

			foreach my $comp (@comps) { 
				print TEXOUT $comp->school->region->code."/" if $circuit->region_based || $circuit->diocese_based;
				print TEXOUT $comp->school->code." " unless $circuit->region_based || $circuit->diocese_based;
				print TEXOUT $comp->school->chapter->id."/" unless $comp->school->code;
				print TEXOUT $comp->student->first." ".$comp->student->last." " if $event->team == 1; 
				print TEXOUT ucfirst($comp->student->last)."/".ucfirst($comp->partner->last)." " if $event->team == 2; 
				print TEXOUT $comp->name." " if $event->team == 3; 

				foreach (1 .. $comp->how_doubled($panel)) {
					print TEXOUT "*";
				}

				print TEXOUT "\\\\ \n";
				$count++;
			}

			while ($count < $event->largest_panel) { 
				print TEXOUT "\\\\ \n";
				$count++;
			}

			print TEXOUT "\\hline\n";

		} else { 

			foreach my $judge (@judges) { 
				print TEXOUT "Judge: ";
				print TEXOUT $judge->school->code." " if $judge->school;
				print TEXOUT $judge->school->chapter->id if $judge->school && not defined $judge->school->code;
				print TEXOUT "HIRE " unless $judge->school;
				print TEXOUT substr($judge->first,0,1).". ".$judge->last." "; 
				print TEXOUT "\\\\ \n";
			}

			print TEXOUT "\\hline\n";
			my $count;

			foreach my $comp (@comps) { 

				print TEXOUT $comp->student->first." ".$comp->student->last if $event->team == 1;
				print TEXOUT ucfirst($comp->student->last)."/".ucfirst($comp->partner->last)." " if $event->team == 2; 
				print TEXOUT $comp->name if $event->team == 3;

				foreach (1 .. $comp->how_doubled($panel)) {
					print TEXOUT "*";
				}

				print TEXOUT "\\\\ \n";

				$count++;

			}

			while ($count < $event->largest_panel) { 
				print TEXOUT "\\\\ \n";
				$count++;
			}

			print TEXOUT "\\hline\n";

		}

		print TEXOUT "\\end{tabular}\n";

	}

	print TEXOUT "\\newline\n";


}#end of if event type is speech

	if ($event->type eq "congress") { 

		print TEXOUT "\\begin{center}";


		foreach my $panel (@panels) { 


			my @comps = $panel->comps;

			@comps = sort {$a->student->last cmp $b->student->last} @comps;

			my @judges = $panel->judges;

			print TEXOUT "\\normalsize\n";
			print TEXOUT "\\begin{tabular}{lll}\n";

			my $start = $panel->timeslot->start;
			$start->set_time_zone($circuit->timezone);

			print TEXOUT "\\multicolumn{3}{c}{\\large Chamber ". $panel->letter."  Room: ". Tab::texify($panel->room->name) ." Start ";
			print TEXOUT $start->hour_12.":".$start->strftime('%M')." ".$start->strftime('%p');
			print TEXOUT " }\\\\\n";
			print TEXOUT "\\multicolumn{3}{c}{ Judges: ";
		
			my $jc;

			foreach my $judge (@judges) { 
				print TEXOUT ", " if $jc;
				print TEXOUT substr($judge->first,0,1).". ".$judge->last." "; 
				$jc++;
			}

			print TEXOUT "}\\\\\n";
			print TEXOUT "\\hline \n";

			my $cc;

			foreach my $comp (@comps) { 

				print TEXOUT $comp->code." ".$comp->student->first." ".$comp->student->last;
# (".$comp->student->chapter->code.") ";

				if ($cc == 2) {
					
					print TEXOUT " \\\\ \n";
					$cc = 0;

				} else {

					print TEXOUT " & ";
					$cc++;
				}
	
			}
	
		print TEXOUT "\\\\ \n ";
		print TEXOUT "\\multicolumn{3}{l}{\\large}\\\\\n";
		print TEXOUT "\\end{tabular}\n";

	}

		print TEXOUT "\\end{center}\n";
	close TEXOUT;

	}

	return;

</%init>
