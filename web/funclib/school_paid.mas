<%args>
	$circuit
	$school_id
	$tourn_id => undef
</%args>
<%init>


	my $school = Tab::School->retrieve($school_id);
	my $chapter = $school->chapter;

	my $now;

	# Now is relative... 

	my $after_date;	
	my $tourn_date;
	
	$now = DateTime->now(time_zone => $circuit->timezone);

	my $school_year;

	if ($now->month < 7) {
		$school_year = $now->year - 1;
	} else { 
		$school_year = $now->year;
	}

	$after_date = "$school_year-07-01 00:00:00";

	my $due_date = DateTime->new (
		year => $school_year,
		month => 11,
		day => 01,
		time_zone => $circuit->timezone);

	if ($tourn_id) { 
		my $tourn = Tab::Tourn->retrieve($tourn_id); 
		return 1 if $due_date > $tourn->start;
# 	We often record dues late.  Give it a week:
		my $tourndate = $tourn->start->clone->add( days => 7);	
		$tourn_date = DateTime::Format::MySQL->format_datetime($tourndate);

	} 

	
	my @dues;

	@dues = Tab::Dues->search_where( paid_on => {">=", $after_date}, paid_on => {"<=", $tourn_date}, chapter => $chapter->id) if $tourn_id;
	@dues = Tab::Dues->search_where( paid_on => {">=", $after_date}, chapter => $chapter->id) unless $tourn_id;



	return 1 if @dues;
	return;

</%init>
