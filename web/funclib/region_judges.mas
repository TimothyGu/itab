<%args>
	$region
	$pool => undef
	$tourn => undef
	$alt => undef
	$group => undef
	$elim => undef
	$covers => undef
</%args>
<%init>

	if ($group && $group->setting("tab_room")) { 

		Tab::Judge->set_sql(by_region_and_group => "
			select distinct judge.*
			from judge, school
			where judge.school = school.id
			and school.region = ? 
			and judge.judge_group = ? 
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_group($region->id, $group->id);

	} elsif ($group && $covers) { 

		Tab::Judge->set_sql(covers_by_region_and_group => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and judge.covers = ?
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_covers_by_region_and_group($region->id, $group->id);

	} elsif ($group && $alt) { 

		Tab::Judge->set_sql(alt_by_region_and_group => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and judge.alt_group = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_alt_by_region_and_group($region->id, $group->id);

	} elsif ($group) { 

		Tab::Judge->set_sql(by_region_and_group => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and judge.judge_group = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_group($region->id, $group->id);

	} elsif ($pool) { 

		Tab::Judge->set_sql(by_region_and_pool => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier, pool_judge
			where judge.school = school.id
			and school.region = ? 
			and pool_judge.judge = judge.id
			and pool_judge.pool = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.id
		");

		return Tab::Judge->search_by_region_and_pool($region->id, $pool->id);

	} elsif ($elim) { 

		Tab::Judge->set_sql(by_region_and_elim => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and school.tourn = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			and not exists (
				select pool_judge.id
				from pool_judge, pool
				where pool_judge.pool = pool.id
				and pool.judge_group != ?
				and pool_judge.judge = judge.id
				and pool_judge.type != \"prelim\"
			)
			group by judge.id
			order by judge.id
		");

		return Tab::Judge->search_by_region_and_elim($region->id, $tourn->id, $elim->id);

	} elsif ($tourn) { 
	} elsif ($tourn) { 

		Tab::Judge->set_sql(by_region_and_tourn => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and school.tourn = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.id
		");

		return Tab::Judge->search_by_region_and_tourn($region->id, $tourn->id);

	}


</%init>

