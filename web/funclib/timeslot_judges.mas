<%args>
	$timeslot
	$status => undef
	$limit => undef
	$site => undef
	$audit => undef
</%args>
<%init>

	my $type = 'and ballot_value.tag = "points" ' if $audit eq "Points";
	$type = 'and ballot_value.tag = "rank" ' if $audit eq "Rank";
	my $audit_line = " and ballot.audit != 1 " if $audit ne "Points";


	if ($limit) {  

		if ($status eq "half") { 

			Tab::Judge->set_sql( half_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = ? 
				".$audit_line."
				and ballot.entry = entry.id
				and entry.dropped = 0
				and event.type != \"wudc\"
				and round.event = event.id
				and exists ( 
					select id from ballot_value 
					where ballot_value.ballot = ballot.id
					".$type."
					and ballot_value.value is not null)
			");

			Tab::Judge->set_sql( wudc_half_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = ? 
				".$audit_line."
				and ballot.entry = entry.id
				and entry.dropped = 0
				and event.type = \"wudc\"
				and round.event = event.id
				and ballot.chair = 1
				and exists ( select id from ballot_value where ballot_value.ballot = ballot.id ".$type.")
			");

			return (Tab::Judge->search_half_by_timeslot($timeslot->id, $limit->id), Tab::Judge->search_wudc_half_by_timeslot($timeslot->id, $limit->id));

		} elsif ($status eq "full") { 
		
			Tab::Judge->set_sql( full_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and event.type != \"wudc\"
				and round.event = event.id
				".$audit_line."
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = ? 
				and not exists ( 
					select id from ballot_value 
					where ballot_value.ballot = ballot.id 
					and ballot_value.value is not null
					".$type."  
				)
			");

			Tab::Judge->set_sql( wudc_full_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = ? 
				".$audit_line."
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type = \"wudc\"
				and ballot.chair = 1
				and not exists ( 
					select id from ballot_value where ballot_value.ballot = ballot.id
					".$type." 
				)
			");

			return (Tab::Judge->search_full_by_timeslot($timeslot->id, $limit->id), Tab::Judge->search_wudc_full_by_timeslot($timeslot->id, $limit->id));

		} elsif ($status eq "done") { 
		
			Tab::Judge->set_sql( done_by_timeslot => "
				select distinct judge.*
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and ballot.audit = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and event.type != \"wudc\"
				and round.event = event.id
				and round.event = ? 
				and not exists ( select id from ballot_value where ballot_value.ballot = ballot.id
					".$type." 
				)
			");

			Tab::Judge->set_sql( wudc_done_by_timeslot => "
				select distinct judge.*
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = ? 
				and round.event = event.id
				and event.type = \"wudc\"
				and ballot.audit = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and ballot.chair = 1
				and not exists ( select id from ballot_value where ballot_value.ballot = ballot.id 
					".$type." 
				)
			");

			return (Tab::Judge->search_done_by_timeslot($timeslot->id, $limit->id), Tab::Judge->search_wudc_done_by_timeslot($timeslot->id, $limit->id));

		} else { 

			Tab::Judge->set_sql( by_timeslot => "
				select distinct judge.*, ballot.audit as avg
				from panel, round, judge, ballot, entry
				where panel.round = round.id
				and round.timeslot = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = ? 
				order by panel.letter
			");

			return Tab::Judge->search_by_timeslot($timeslot->id, $limit->id);
		}

	} elsif ($site) { 

		Tab::Judge->set_sql( by_timeslot => "
			select distinct judge.* 
			from panel, round, judge, ballot, entry
			where panel.round = round.id
			and round.timeslot = ? 
			and round.site = ? 
			and panel.id = ballot.panel
			and ballot.judge = judge.id
			and ballot.entry = entry.id
			and entry.dropped = 0
			and round.event = ? 
			order by panel.letter
		");

		return Tab::Judge->search_by_timeslot($timeslot->id, $site->id);

	} else { 

		if ($status eq "half") { 
		
			Tab::Judge->set_sql( half_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				".$audit_line."
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type != \"wudc\"
				and exists ( select id from ballot_value where ballot_value.ballot = ballot.id 
					".$type." 
				)
			");

			Tab::Judge->set_sql( wudc_half_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				".$audit_line."
				and ballot.chair = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type = \"wudc\"
				and exists ( select id from ballot_value where ballot_value.ballot = ballot.id 
					".$type." 
				)
			");

			return (Tab::Judge->search_half_by_timeslot($timeslot->id), Tab::Judge->search_wudc_half_by_timeslot($timeslot->id));

		} elsif ($status eq "full") { 
		
			Tab::Judge->set_sql( full_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				".$audit_line."
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type != \"wudc\"
				and not exists ( select id from ballot_value where ballot_value.ballot = ballot.id
					".$type." 
				)
			");

			Tab::Judge->set_sql( wudc_full_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				".$audit_line."
				and ballot.chair = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type = \"wudc\"
				and not exists ( select id from ballot_value where ballot_value.ballot = ballot.id 
					".$type." 
				)
			");

			return (Tab::Judge->search_full_by_timeslot($timeslot->id), Tab::Judge->search_wudc_full_by_timeslot($timeslot->id));

		} elsif ($status eq "uncollected") { 
		
			Tab::Judge->set_sql( uncollected_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and ballot.collected_by = 0
				and ballot.entry = entry.id
				and entry.dropped = 0
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = event.id
				and event.type != \"wudc\"
				order by judge.code, judge.last
			");

			Tab::Judge->set_sql( wudc_uncollected_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and ballot.collected_by = 0
				and ballot.chair = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = event.id
				and event.type = \"wudc\"
				order by judge.code, judge.last
			");

			return (Tab::Judge->search_uncollected_by_timeslot($timeslot->id),Tab::Judge->search_wudc_uncollected_by_timeslot($timeslot->id));

		} elsif ($status eq "collected") { 
		
			Tab::Judge->set_sql( collected_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and ballot.collected_by != 0
				and ballot.entry = entry.id
				and entry.dropped = 0
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = event.id
				and event.type != \"wudc\"
				order by judge.code, judge.last
			");

			Tab::Judge->set_sql( wudc_collected_by_timeslot => "
				select distinct judge.*, panel.id as panelid
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and ballot.collected_by != 0
				and ballot.chair = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and panel.round = round.id
				and round.timeslot = ? 
				and round.event = event.id
				and event.type = \"wudc\"
				order by judge.code, judge.last
			");

			return (Tab::Judge->search_collected_by_timeslot($timeslot->id), Tab::Judge->search_wudc_collected_by_timeslot($timeslot->id));

		} elsif ($status eq "done") { 
		
			Tab::Judge->set_sql( done_by_timeslot => "
				select distinct judge.*
				from panel, round, ballot, judge, event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and ballot.audit = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type != \"wudc\"
				and not exists ( select id from ballot_value where ballot_value.ballot = ballot.id 
					".$type." 
				)
			");

			Tab::Judge->set_sql( wudc_done_by_timeslot => "
				select distinct judge.*
				from panel, round, ballot, judge,event, entry
				where judge.id = ballot.judge
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.timeslot = ? 
				and ballot.audit = 1
				and ballot.chair = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type = \"wudc\"
				and not exists ( select id from ballot_value where ballot_value.ballot = ballot.id
					".$type." 
				)
			");

			return (Tab::Judge->search_done_by_timeslot($timeslot->id), Tab::Judge->search_wudc_done_by_timeslot($timeslot->id));

		} else { 

			Tab::Judge->set_sql( by_timeslot => "
				select distinct judge.* 
				from panel, round, judge, ballot, event, entry
				where panel.round = round.id
				and round.timeslot = ? 
				and round.event = event.id
				and event.type != \"wudc\"
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.entry = entry.id
				and entry.dropped = 0
				order by panel.letter
			");

			Tab::Judge->set_sql( wudc_by_timeslot => "
				select distinct judge.* 
				from panel, round, judge, ballot, event, entry
				where panel.round = round.id
				and round.timeslot = ? 
				and ballot.chair = 1
				and ballot.entry = entry.id
				and entry.dropped = 0
				and round.event = event.id
				and event.type = \"wudc\"
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				order by judge.last, panel.letter
			");

			return (Tab::Judge->search_by_timeslot($timeslot->id), Tab::Judge->search_wudc_by_timeslot($timeslot->id));

		}

	}

</%init>

