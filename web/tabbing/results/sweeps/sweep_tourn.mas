<%args>
	$tourn
</%args>
<%init>

	my @schools = $tourn->schools;

	my @entries = $m->comp('/funclib/tourn_entries.mas', tourn => $tourn);
	my @ballots = $m->comp('/funclib/tourn_ballots.mas', tourn => $tourn);
	my @values = $m->comp('/funclib/tourn_values.mas', tourn => $tourn);
	my @panels = $m->comp('/funclib/tourn_panels.mas', tourn => $tourn);
	my @rounds = $m->comp('/funclib/tourn_rounds.mas', tourn => $tourn);

	my %entry_points;

	my %entry_by_id = ();
	my %entries_by_event = ();
	foreach my $entry (@entries) { 
		$entry_by_id{$entry->id} = $entry;
		push @{$entries_by_event{$entry->event->id}}, $entry;
	}

	my %round_type = ();
	foreach my $round (@rounds) { 
		$round_type{$round->id} = $round->type;
	}

	my %panel_type = ();
	my %panel_by_id = ();
	my %panels_by_round = ();
	foreach my $panel (@panels) { 
		$panel_by_id{$panel->id} = $panel;
		$panel_type{$panel->id} = $round_type{$panel->round->id};
		push @{$panels_by_round{$panel->round->id}}, $panel;
	}

	my %ballot_type = ();
	my %ballot_by_id = ();
	my %ballots_by_entry = ();
	my %ballots_by_panel = ();

	my %entry_panel = ();

	foreach my $ballot (@ballots) { 
		$ballot_by_id{$ballot->id} = $ballot;
		push @{$ballots_by_entry{$ballot->entry->id}}, $ballot;
		push @{$ballots_by_panel{$ballot->panel->id}}, $ballot;
		$ballot_type{$ballot->id} = $panel_type{$ballot->panel->id};
		$entry_panel{$ballot->entry->id." ".$panel_by_id{$ballot->panel->id}->round->id} = $panel_by_id{$ballot->panel->id};
	}

	my %values_by_ballot = ();
	foreach my $value (@values) { 
		push @{$values_by_ballot{$value->ballot->id}}, $value;
	}

	my %entry_score;
	my %school_score;

	foreach my $set ($tourn->sweep_sets) { 

		my @events = $set->events;

		my %places = ();
		foreach my $rule ($set->rules) { 
			$places{$rule->place} = $rule->value if $rule->place;
		}

		my $places_done;

		foreach my $rule ($set->rules) { 
				
			if ($rule->tag eq "points_per_prelim") {

				my $points = $rule->value;
				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 
						my @ballots = @{$ballots_by_entry{$entry->id}};
						my %panels = ();
						foreach my $ballot (@ballots) { 
							next if $ballot_type{$ballot->id} eq "elim" || $ballot_type{$ballot->id} eq "final";
							$panels{$ballot->panel->id}++;
						}
						$entry_points{$entry->id} += $points * scalar keys %panels;
					}
				}
			}

			if ($rule->tag eq "points_per_elim") {

				my $points = $rule->value;
				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 

						next unless $ballots_by_entry{$entry->id};

						my @ballots = @{$ballots_by_entry{$entry->id}};
						my %panels = ();
						foreach my $ballot (@ballots) { 
							next if $ballot_type{$ballot->id} ne "elim";
							$panels{$ballot->panel->id}++;
						}
						$entry_points{$entry->id} += $points * scalar keys %panels;
					}
				}
			}

			if ($rule->tag eq "points_per_final" ) {

				my $points = $rule->value;
				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 
						next unless $ballots_by_entry{$entry->id};
						my @ballots = @{$ballots_by_entry{$entry->id}};
						my %panels = ();
						foreach my $ballot (@ballots) { 
							next if $ballot_type{$ballot->id} ne "final";
							$panels{$ballot->panel->id}++;
						}
						$entry_points{$entry->id} += $points * scalar keys %panels;
					}
				}
			}

			if ($rule->tag eq "rev_per_prelim_rank" ) {

				my $points = $rule->value;
				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 

						next unless $ballots_by_entry{$entry->id};
						my @ballots = @{$ballots_by_entry{$entry->id}};
						my $total;

						foreach my $ballot (@ballots) { 
							next if $ballot_type{$ballot->id} eq "elim" || $ballot_type{$ballot->id} eq "final";
							foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
								next unless $value->tag eq "rank";
								my $pts = 6 - $value->value;
								$pts = 1 if $pts < 1;
								$total += $pts;
							}
						}

						$entry_points{$entry->id} += $total;

					}
				}

			}

			if ($rule->tag eq "rev_per_elim_rank" ) {

				my $points = $rule->value;
				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 

						next unless $ballots_by_entry{$entry->id};
						my @ballots = @{$ballots_by_entry{$entry->id}};
						my $total;

						foreach my $ballot (@ballots) { 
							next if $ballot_type{$ballot->id} ne "elim";
							foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
								next unless $value->tag eq "rank";
								my $pts = 6 - $value->value;
								$pts = 1 if $pts < 1;
								$total += $pts;
							}
						}

						$entry_points{$entry->id} += $total;

					}
				}

			}

			if ($rule->tag eq "rev_per_final_rank" ) {

				my $points = $rule->value;
				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 

						next unless $ballots_by_entry{$entry->id};
						my @ballots = @{$ballots_by_entry{$entry->id}};
						my $total;

						foreach my $ballot (@ballots) { 
							next if $ballot_type{$ballot->id} ne "final";
							foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
								next unless $value->tag eq "rank";
								my $pts = 6 - $value->value;
								$pts = 1 if $pts < 1;
								$total += $pts;
							}
						}
						$entry_points{$entry->id} += $total;
					}
				}
			}

			if ($rule->tag eq "rev_per_elim_place" || $rule->tag eq "rev_per_final_place" ) {

				my $type = "elim" if $rule->tag eq "rev_per_elim_place";
				$type = "final" if $rule->tag eq "rev_per_final_place";

				foreach my $event (@events) { 

					foreach my $round ($event->rounds( type => $type)) { 

						foreach my $panel (@{$panels_by_round{$round->id}}) { 

							my @ballots = @{$ballots_by_panel{$panel->id}};

							my %entry_cume = ();
							my %entry_recip = ();
							my @entries;

							foreach my $ballot (@ballots) { 
			
								foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
									next unless $value->tag eq "rank";
									$entry_cume{$ballot->entry->id} += $value->value;
									$entry_recip{$ballot->entry->id} += (1 / $value->value) if $value->value;
								}

								push @entries, $entry_by_id{$ballot->entry->id};

							}

							@entries = sort {$entry_recip{$b->id} <=> $entry_recip{$a->id}} @entries;
							@entries = sort {$entry_cume{$a->id} <=> $entry_cume{$b->id}} @entries;

							my $rank = 1;
							foreach my $entry (@entries) { 
								my $pts = 6 - $rank;
								$pts = 1 if $pts < 1;
								$entry_points{$entry->id} += $pts;
								$rank++;
							}
						}
					}
				}
			}

			if ($rule->tag eq "rev_per_overall_place" || $rule->tag eq "place" && keys %places ) {

				next if $places_done;

				my $string;
				foreach (keys %places) { 
					$string .= "place $_ rank ".$places{$_}." ";
				}

				foreach my $event (@events) { 

					foreach my $round (Tab::Round->search( type => "final", event => $event->id)) { 
				
						my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref) = $m->comp("/tabbing/results/speech/order_entries.mas", round => $round); 

						my $rank = 1;

						foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) {
						
							foreach my $entry (@{${$entries_ref}{$key}}) {
						
								if ($rule->tag eq "rev_per_overall_place") { 
									my $pts = 6 - $rank;
									$pts = 1 if $pts < 1;
									$entry_points{$entry->id} += $pts;
								}

								if ($places{$rank}) { 
									$entry_points{$entry->id} += $places{$rank};
								}

								$rank++;

							}
						}
					}
				}
				$places_done++;
			}

			if ($rule->tag eq "debate_win" ) {

				my $points = $rule->value;

				foreach my $event (@events) { 

					foreach my $entry (@{$entries_by_event{$event->id}}) { 

						next unless $ballots_by_entry{$entry->id};
						my @ballots = @{$ballots_by_entry{$entry->id}};
						my $total;

						foreach my $ballot (@ballots) { 

							next if $ballot_type{$ballot->id} eq "elim" || $ballot_type{$ballot->id} eq "final";

							foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
								next unless $value->tag eq "ballot";
								$entry_points{$entry->id} += $points if $value->value == 1;
							}
						}
					}
				}
			}

			if ($rule->tag eq "manual" ) {

				foreach my $event (@events) { 
					foreach my $entry (@{$entries_by_event{$event->id}}) { 
						$entry_points{$entry->id} += $entry->sweeps;
					}
				}
			}
		}
	}

	return \%entry_points, \@entries;

</%init>
