<%args>
	$tourn
	$event_id => undef
	$round_id => undef
	$type => undef
</%args>
<%init>

	use POSIX;

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my $round = Tab::Round->retrieve($round_id) if $round_id;

	my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes")  if $event;

	if ($event && not defined $round) { 
		$round = shift @rounds;
		push @rounds, $round;
	} 

	my $novice = $event->setting("top_novice");
	my %is_novice = (); 

	if ($novice && $event) { 
		foreach my $novice ($m->comp("/funclib/event_novii.mas", event => $event)) { 
			$is_novice{$novice->id}++;
		}   
	}   

	my %entry_ballots = ();

	my $codes = $event->setting("code_style") if $event;

	if ($round) { 

		my $points;
		my $ranks;
		my $wins;

		foreach my $tb ($round->tb_set->tiebreaks) { 
			$ranks++ if ($tb->name eq "ranks" || $tb->name eq "reciprocals");
			$wins++ if ($tb->name eq "opp_wins" || $tb->name eq "winloss");
			$points++ if ($tb->name eq "points" || $tb->name eq "competition" || $tb->name eq "opp_points");
		}

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select value.id, value.tag, value.value, ballot.entry, ballot.judge, ballot.bye, ballot.chair, round.name
			from ballot_value value, ballot, panel, round
			where value.ballot = ballot.id
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.name <= ".$round->name."
			and round.event = ".$event->id."
			order by round.name, ballot.entry, ballot.chair, ballot.judge, CASE value.tag WHEN ".' "ballot" then 1 when "rank" then 2 when "points" then 3 end'."
		");

		$sth->execute(); 

		my %entry_round;

		while (my ($id, $tag, $value, $entryid, $judge, $bye, $chair, $roundname) = $sth->fetchrow_array() ) { 

			next if $tag eq "rank" && not defined $ranks;
			next if $tag eq "points" && not defined $points;
			next if $tag eq "ballot" && not defined $wins;

			$entry_ballots{$entryid} .= ' ' if $entry_ballots{$entryid} && $tag eq "rank" && ($type eq "speech" || $type eq "wudc" || $type eq "congress");
			$entry_ballots{$entryid} .= ' ' if $entry_ballots{$entryid} && $tag eq "ballot" && $type ne "speech" && $type ne "wudc" && $type ne "congress";

			if ($entry_ballots{$entryid}) { 
				$entry_ballots{$entryid} .= " ";
				$entry_ballots{$entryid} .= "\n\n" if $roundname != $entry_round{$entryid};
			}

			$entry_round{$entryid} = $roundname;

			if ($tag eq "ballot") { 

				if ($bye) { 
					$entry_ballots{$entryid} .= "BYE" 
				} else { 
					$entry_ballots{$entryid} .= "W" if $value > 0;
					$entry_ballots{$entryid} .= "L" if $value < 1;
				}

			} else { 
				$entry_ballots{$entryid} .= $value;
			}

		}

	}

</%init>

	<div class="right small">

%		if ($event && @rounds) { 

			<div class="sidenote">

				<h4>As of round</h4>

				<span class="block padless bluenohover">

					<form action="index.mhtml" method="post">
					<input type="hidden" name="event_id" value="<% $event->id %>">

					<select name="round_id" onchange='this.form.submit()' class="fixedsmall">
						<option value="" <% $type eq "Speakers" ? "selected" : "" %>></option>
%						foreach my $oround (sort {$b->name <=> $a->name} @rounds) {
%							next unless $oround && $oround->id;
%							next unless $round && $round->id;
							<option value="<% $oround->id %>" <% $round && $oround->id == $round->id ? "selected" : "" %>>
								<% $oround->realname %>
							</option>
%						}

					</select>
					</form>
				</span>
			</div>
%		}

%		if ($event && $event->type ne "speech" && $event->type ne "congress") { 

			<div class="sidenote">

				<h4>Speakers</h4>

				<span class="block padless bluenohover">
					<form action="index.mhtml" method="post">
					<input type="hidden" name="event_id" value="<% $event->id %>">
					<input type="hidden" name="type" value="Speakers">
					<select name="round_id" onchange='this.form.submit()' class="fixedsmall">
						<option value="" <% $type ne "Speakers" ? "selected" : "" %>></option>
%						foreach my $oround (sort {$b->name <=> $a->name} @rounds) {
%							next unless $oround && $oround->id;
							<option value="<% $oround->id %>" <% $round && $oround->id == $round_id ? "selected" : "" %>>
								<% $oround->realname %>
							</option>
%						}
					</select>
					</form>
				</span>

			</div>
%		}

		<div class="sidenote">
			<h4>Events:</h4>
%			my $last_type;
%			my @events = sort {$a->name cmp $b->name} $tourn->events;
%			foreach my $oevent (sort {$a->type cmp $b->type} @events) { 
%				$last_type = $oevent->type unless $last_type;
%				my $class = "martop" if $oevent->type ne $last_type;
%				$last_type = $oevent->type;

				<a class="<% $event && $oevent->id == $event->id? "dk" : ""%>blue nowrap <% $class %> block" href="index.mhtml?event_id=<% $oevent->id %>">
					<% $oevent->name %>
				</a>
%			}
		</div>

	</div>

	<div class="left huge">

		<& /funclib/tablesorter.mas, table => "sortme" &>

%		if ($round) { 

%			my $equal_elims++ if $round->tb_set->setting("equal_elims");

%			my $students_ref;
%			my $entries_ref;
%			my $tbs_ref;
%			my $desc_ref; 
%			my $noshow_ref;
%			my $panrank_ref;
%			my $panletter_ref;
%			my $long_desc_ref; 
%			my $meh;

%			($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $panrank_ref, $panletter_ref, $long_desc_ref) = $m->comp("order_entries.mas", long_names => 1, round => $round) if $type ne "Speakers";
%			($students_ref, $tbs_ref, $desc_ref) = $m->comp("order_speakers.mas", round => $round) if $type eq "Speakers";

%			my %id_entry = map {$_->id => $_ } $event->entries;

			<div>	
				<span class="bigspan">
					<h2><% $type eq "Speakers" ? "Speakers" : "Results" %> as of <% $round->realname %> of <% $event->abbr %></h2>
				</span>
				<span class="biggishspan wrap padno rightalign">
					<p class="explain padno">Hover mouse over code to see raw scores</p>
				</span>
			</div>

			<table cellpadding="4" cellspacing="1" id="sortme">

				<thead>
					<tr class="yellowrow">

						<th class="smallish">
						</th>

						<th class="smaller center">
							Code
						</th>

%						unless ($codes eq "names" || $codes eq "last_names" || $codes eq "names_lastfirst") { 
							<th class="smaller center">
								Name
							</th>
%						} 

						<th class="smaller center">
							School
						</th>

%						if ($equal_elims) { 
							<th class="smallish">
								<span title="Rank within Section or Chamber">
									ScRk
								</span>
							</th>
							<th class="smallish">
								<span class="Section or Chamber">
									Sec
								</span>
							</th>
%						}

%						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
							<th class="smallish">
								<span title="<% ${$long_desc_ref}{$key} %>">
									<% ${$desc_ref}{$key} %>
								</span>
							</th>
%						}

					</tr>

				</thead>

				<tbody>

%					my $count = 1;

%					if ($entries_ref) { 

%						my $last_tied;

%						foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 

%							my $tie++ if scalar @{${$entries_ref}{$key}} > 1;

%							foreach my $entry_id (@{${$entries_ref}{$key}}) { 

%								my $entry = $id_entry{$entry_id};

								<tr class="<% $tie ? "lirdrow " : "" %> <% $tie && $last_tied ? "libordertop" : "" %>">

%									undef $last_tied;

									<td class="centeralign smallish nowrap padno" style="width: 25px;">
										<% $key %>
									</td>

									<td class="smaller nowrap">
										<span title="<% $entry_ballots{$entry_id} %> <% ${$noshow_ref}{$entry_id} ? "\n(No Show)" : "" %>">
											<% $entry->code %>
										</span>
									</td>

%									unless ($codes eq "names" || $codes eq "last_names" || $codes eq "names_lastfirst") { 
										<td class="smaller">
											<% $entry->name %> 
											<% $is_novice{$entry_id} ? " (N) " : "" %>
										</td>
%									}

									<td class="nowrap smaller">
										<span class="nowrap eighty">
											<% $entry->school->short_name %>
										</span>
									</td>

%									if ($equal_elims) { 
										<td class="smallish">
											<% ${$panrank_ref}{$entry_id} %> 
										</td>
										<td class="smallish">
											<% ${$panletter_ref}{$entry_id} %>
										</td>
%									}

%									foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 

%										my $value = ${$tbs_ref}{$entry_id."-".$key};
%										$value = sprintf("%.2f", $value);
%										$value =~ s/\.(?:|.*[^0]\K)0*\z//;

										<td class="smallish nowrap">
											<% $value %>
										</td>
%									}

								</tr>

%							}

%							$last_tied++ if $tie;

%						} 

%					} elsif ($students_ref) { 

%						foreach my $key (sort {$a <=> $b} keys %{$students_ref}) { 

%						my $tie++ if scalar @{${$students_ref}{$key}} > 1;

%						foreach my $student (@{${$students_ref}{$key}}) { 

							<tr <% $tie ? 'class="lirdrow"' : "" %>>

								<td class="centeralign smallish nowrap" style="width: 25px;">
									<% $key %><% $tie ? "-T" : "" %>
								</td>

								<td class="smallish nowrap" style="width: 50px;">
									<% $student->code %>
								</td>

								<td class="smallish nowrap" style="width: 100px;">
									<% $student->first." ".$student->last %>
								</td>

								<td class="smallish nowrap">
									<% substr($student->school,0,8) %>
								</td>

%								foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
									<td class="smallish nowrap">
										<% ${$tbs_ref}{$student->id."-".$key} %>
									</td>
%								}

								<td class="centeralign smallish nowrap" style="width: 25px;">
									<% $count++ %>
								</td>

							</tr>

%						}
%					}
%				}

				</tbody>

			</table>

%			if ($novice) { 
				<p class="explain">(N) desginates all-novice teams</p>
%			} 

%		}
	
	</div>


