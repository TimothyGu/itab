<%args>
	$tourn
	$account
	$from_id => undef
	$event_id => undef
	$preset_id => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id) if $event_id;

	my $round = Tab::Round->retrieve($from_id) if $from_id;

	$event = $round->event if $round &! $event;

	if ($event && not defined $round) { 
		my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes")  if $event;
		$round = shift @rounds if @rounds;
	}

	my $preset = Tab::Round->retrieve($preset_id) if $preset_id;

	if ($event && not defined $preset) { 
		my @empties_rounds = $m->comp("/funclib/event_rounds.mas", event => $event, empties => "yes");
		$preset = shift @empties_rounds if @empties_rounds;
	}


</%init>

	<& menu.mas, tourn => $tourn, event => $event, round => $round, preset => $preset &>

	<div class="left huge">

		<& /funclib/tablesorter.mas, table => "sortme" &>

%		if ($round) { 

%			my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $panrank_ref, $panletter_ref) = $m->comp("/tabbing/results/speech/order_entries.mas", round => $round) if ($round->event->type eq "speech");
%			($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $panrank_ref, $panletter_ref) = $m->comp("/tabbing/results/congress/order_entries.mas", round => $round) if $round->event->type eq "congress";

%           my $equal_elims++ if $round->tb_set->elim && $round->type eq "elim";

			<h2>Break from <% $round->realname %> of <% $round->event->abbr %></h2>

			<div class="noscroll">

			<table cellpadding="4" cellspacing="1" id="sortme">

				<thead>

					<tr class="yellowrow">

						<th class="smallish">
							#
						</th>

						<th class="smallish">
							Code
						</th>

%                       if ($equal_elims) { 
                            <th class="smaller">
                                SectRk
                            </th>
                            <th class="smaller">
                                Sect
                            </th>
%                       }

%						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
							<th class="smallish">
								<% ${$desc_ref}{$key} %>
							</th>
%						}

						<th>
						</th>

					</tr>

				</thead>

				<tbody>

%					my $count = 1;

%					foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 

%						my $tie++ if scalar @{${$entries_ref}{$key}} > 1;

%						foreach my $entry (@{${$entries_ref}{$key}}) { 

							<tr class="<% $tie ? "lirdrow" : "" %> <% $tie == 1 ? "libordertop" : "" %>">

%								$tie++ if $tie;

								<td class="centeralign smallish nowrap" style="width: 25px;">
									<% $key %><% $tie ? "-T" : "" %>
								</td>

								<td class="centeralign smallish nowrap" style="width: 50px;">
									<% $entry->code %>
								</td>

%                               if ($equal_elims) {
									<td class="smallish">
										<% ${$panrank_ref}{$entry->id} %>
									</td>
									<td class="smallish">
										<% ${$panletter_ref}{$entry->id} %>
									</td>
%                               }

%								foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
									<td class="smallish nowrap">
										<% ${$tbs_ref}{$entry->id."-".$key} %>
									</td>
%								}

								<td class="centeralign smallish nowrap" style="width: 25px;">
									<% ${$noshow_ref}{$entry->id} ? "NS" : $count++ %>
								</td>

							</tr>

%						}

%					}

				</tbody>

			</table>

			</div>

%		}
	
	</div>

