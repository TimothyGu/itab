<%args>
	$tourn
	$session
	$timeslot_id
	$event_id
</%args>
<%init>

	my $session_group = $session->judge_group;
	my $no_codes++ if $session_group->setting("hide_codes");

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id);

	my @ballots = $m->comp("/funclib/timeslot_ballots.mas", timeslot => $timeslot);

	my %panel_ballots;

	foreach my $ballot (@ballots) { 
		push @{$panel_ballots{$ballot->panel->id."-".$ballot->judge->id}}, $ballot;
	}

	my $event = Tab::Event->retrieve($event_id);
	my $limit = "and round.event = ".$event->id."\n";

	my @judges = sort {$a->last cmp $b->last} $m->comp("/funclib/timeslot_judges.mas", timeslot => $timeslot, limit => $limit);
		
	my $tabular;

	my $aff_string = "Aff";
	my $neg_string = "Neg";

	if ($event->type eq "pf") {
		$aff_string = "Pro";
		$neg_string = "Con";
	} elsif ($event->type eq "parli") {
		$aff_string = "Gov";
		$neg_string = "Opp";
	}   

	foreach my $judge (@judges) {  

		my @panels = $m->comp("/funclib/judge_panels.mas", judge => $judge, timeslot => $timeslot);

		foreach my $panel (@panels) { 
			
			next if $panel->round->event->id != $event->id;

			my @ballots = sort {$a->side <=> $b->side} @{$panel_ballots{$panel->id."-".$judge->id}} if $panel_ballots{$panel->id."-".$judge->id};

			foreach my $ballot (@ballots) { 
				$ballot->audit($ARGS{$panel->id."-".$judge->id});
				$ballot->update;
			}
		}
	}

	my $msg = "Audit status saved";

	$m->redirect("screen_audit.mhtml?timeslot_id=".$timeslot->id."&msg=$msg");

</%init>
