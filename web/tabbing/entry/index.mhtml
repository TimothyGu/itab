<%args>
	$session
	$account
	$tourn
	$judge_id    => undef
	$timeslot_id => undef
	$judge_code  => undef
	$audit       => "Rank"
	$all         => undef
	$redo        => undef
	$rank_err    => undef
	$rank_string => undef
	$entered     => undef
</%args>
<%init>

    my $judge;

    if ($judge_id) { 
        $judge = Tab::Judge->retrieve($judge_id);
    } elsif ($judge_code) { 
        my @code_judges = $m->comp("/funclib/tourn_judges.mas", tourn => $tourn, code => $judge_code);
        $judge = shift @code_judges if @code_judges;
    }   

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id) if $timeslot_id;

    my @panels = $m->comp("/funclib/judge_panels.mas", judge => $judge, timeslot => $timeslot) if $judge && $timeslot;

	my $panel = shift @panels if @panels;

	my $type = $panel->round->event->judge_group->setting("audit_method") if $panel;

	$type = "ncfl_congress" if $panel && $tourn->setting("ncfl") && $panel->round->event->type eq "congress";
	$type = "wudc" if $panel && $panel->round->event->type eq "wudc";

</%init>

%	if ($type eq "ncfl") { 

		<&	"ncfl_congress.mas",
			all         => $all,
			tourn       => $tourn,
			audit       => $audit,
			session     => $session,
			account     => $account,
			judge       => $judge,
			timeslot    => $timeslot,
			rank_err    => $rank_err,
			rank_string => $rank_string,
			entered     => $entered &>


%	} elsif ($type eq "wudc") { 

		<&	"wudc_rank.mas",
			all         => $all,
			tourn       => $tourn,
			audit       => $audit,
			session     => $session,
			account     => $account,
			judge       => $judge,
			timeslot    => $timeslot,
			rank_err    => $rank_err,
			rank_string => $rank_string,
			entered     => $entered &>

%	} elsif ($type eq "visual") { 

		<&	"visual_rank.mas",
			session     => $session,
			account     => $account,
			tourn       => $tourn,
			judge       => $judge,
			timeslot    => $timeslot,
			audit       => $audit,
			all         => $all,
			redo        => $redo,
			rank_err    => $rank_err,
			rank_string => $rank_string,
			entered     => $entered &>

%	} elsif ($type eq "none") { 

		<&	"noaudit_rank.mas",
			session     => $session,
			account     => $account,
			tourn       => $tourn,
			judge       => $judge,
			timeslot    => $timeslot,
			audit       => $audit,
			all         => $all,
			rank_err    => $rank_err,
			rank_string => $rank_string,
			entered     => $entered &>

%	} else { 

		<&	"twice_rank.mas",
			session     => $session,
			account     => $account,
			tourn       => $tourn,
			judge       => $judge,
			timeslot    => $timeslot,
			audit       => $audit,
			all         => $all,
			rank_err    => $rank_err,
			rank_string => $rank_string,
			entered     => $entered &>

%	}
