<%args>
	$judge_id
	$panel_id
</%args>
<%init>

	my $panel = Tab::Panel->retrieve($panel_id);

	my $judge = Tab::Judge->retrieve($judge_id);

	foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) { 
	
		my @ballots = Tab::Ballot->search( judge => $judge->id, panel => $panel->id, entry => $entry->id );
		next unless @ballots;
		my $ballot = shift @ballots;
		foreach my $spare (@ballots) { $spare->delete; }

		my $rank;
		my $points;

		foreach my $value ($ballot->ballot_values) { 
			$value->value($ARGS{"rank_".$ballot->id}) if $value->tag eq "rank";
			$value->value($ARGS{"points_".$ballot->id}) if $value->tag eq "points";
			$value->update;
			$rank++ if $value->tag eq "rank";
			$points++ if $value->tag eq "points";
		}

		if ($ARGS{"rank_".$ballot->id} > 0 && not defined $rank) { 
			
			Tab::BallotValue->create({
				ballot => $ballot->id,
				tag => "rank",
				value => $ARGS{"rank_".$ballot->id},
			});
		}

		if ($ARGS{"points_".$ballot->id} > 0 && not defined $points) { 

			Tab::BallotValue->create({
				ballot => $ballot->id,
				tag => "points",
				value => $ARGS{"points_".$ballot->id},
			});
		}

		$ballot->tv($ARGS{"tv_".$ballot->id});
		$ballot->noshow($ARGS{"noshow_".$ballot->id});
		$ballot->audit($ARGS{"audit_".$judge->id});
		$ballot->update;

	}

	my $msg = "Panel scores saved forcibly.  I hope you know what you are doing";

	$m->redirect("panel.mhtml?panel_id=".$panel_id."&msg=$msg");

</%init>


