<%args>
	$tourn
	$judge_id
	$panel_id
	$check => undef
	$next  => undef
	$debug => undef
</%args>
<%init>

	my $err;
	my $big_err;
	my $entered;

	my $second_entry;
	my $alert_points;

	my $judge = Tab::Judge->retrieve($judge_id);
	my $panel = Tab::Panel->retrieve($panel_id);

	my $judge_code = $judge->code;
	$next = $judge_code unless $next;

	foreach my $comp ($panel->entries) {

		foreach my $key (1 .. 5) { 

			next if $comp->dropped == 1;

			my @low_ballot = Tab::Ballot->search({ 
					comp => $comp->id,
					panel => $panel->id,
					judge => $judge->id,
					speechnumber => 1 });

			my $low_ballot = shift @low_ballot if @low_ballot;
			my $ballot_key = $low_ballot->id;

			my $ballot;

			if ($key > 1) { 

				system "/usr/bin/logger Our key is bigger.  The key is $key." if $debug;
	
				my @ballots = Tab::Ballot->search( 
					panel => $panel->id, 
					comp => $comp->id, 
					judge => $judge->id, 
					speechnumber => $key);

				system "/usr/bin/logger We found ".scalar @ballots." ballots. " if $debug;

				if (@ballots) { 

					$ballot = shift @ballots;

				} else { 

					if ($ARGS{"points_".$ballot_key."_".$key} && not @ballots) { 

						$ballot = Tab::Ballot->create({
							panel => $panel->id,
							speechnumber => $key,
							comp => $comp->id,
							judge => $judge->id,
							speakerorder => 0,
							audit => 1 });

						system "/usr/bin/logger Created ballot ".$ballot->id if $debug;

					}
				}
			} else {
				$ballot = $low_ballot;
			}

			if ($ballot) { 

				system "/usr/bin/logger Saving changes to ballot ".$ballot->id if $debug;

				$ballot->real_points($ARGS{"points_".$ballot_key."_".$key});
				$ballot->points($ARGS{"points_".$ballot_key."_".$key});
				$ballot->rank(1);
				$ballot->real_rank(1);
				$ballot->audit(1);
				$ballot->update;
			
			}
		}
	}

	$entered = "Entered judge $judge_code";

	my @next_judges = Tab::Judge->search( tournament => $tourn->id, code => $next) if $next;
	my $next_judge = $next_judges[0]->id if @next_judges;

	$entered = "(J$judge_code scores saved)" if @next_judges;

	$err = $err." <p>Next judge J$next does not exist in this tournament</p>" 
			if ($next && not @next_judges);

	$m->redirect("$Tab::url_prefix/tabbing/rank.mhtml?timeslot_id=".$panel->round->timeslot->id."&judge_id=$next_judge&big_err=$big_err&err=$err&check=$check&entered=$entered");


</%init>

