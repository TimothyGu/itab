<%args>
	$tourn
	$session
	$event_id
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);

    my $name = $event->name;
    $name =~ s/[\W_]//g;

    my $filename = "Elim-ReadingCopy-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, linespace => 1.3 );

	my @rounds = $event->rounds;

    open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\noindent\n";
	print TEXOUT "\\hfill \\huge \\textbf{".Tab::texify($tourn->name)."}\n\n";
	print TEXOUT "\\hfill \\LARGE ".Tab::texify($event->name)." Division\n";
	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";

	Tab::Ballot->set_sql( i_win => "
		select distinct ballot.id, concat_ws(\" \",judge.first, judge.last) as judgename
		from ballot, ballot_value, judge
		where ballot.panel = ? 
		and ballot.entry = ? 
		and ballot.id = ballot_value.ballot
		and ballot_value.tag = \"ballot\"
		and ballot_value.value = 1
		and ballot.judge = judge.id
	");


	my $affstring = "affirmative";
	my $negstring = "negatve";

	if ($event->type eq "parli") { 
		$affstring = "government";
		$negstring = "opposition";
	}

	if ($event->type eq "pf") { 
		$affstring = "Pro";
		$negstring = "Con";
	}

	foreach my $round (@rounds) { 

		my %ballots_won;

		my @entries = $m->comp("/funclib/round_entries.mas", round => $round);

		my %entries_by_panel;

		foreach my $entry (@entries) { 
			push @{$entries_by_panel{$entry->panelid}}, $entry;
		}

		next unless $round->type eq "elim" || $round->type eq "final";

		print TEXOUT "\\noindent\n";
		print TEXOUT "\\LARGE \\textbf{".$round->realname." results }\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\large\n";

		foreach my $panel ($round->panels) {

			foreach my $entry (@{$entries_by_panel{$panel->id}}) { 
				@{$ballots_won{$entry->id}} = Tab::Ballot->search_i_win($panel->id, $entry->id);
			}

			my @entries = sort {scalar (@{$ballots_won{$b->id}}) <=> scalar (@{$ballots_won{$a->id}})} @{$entries_by_panel{$panel->id}};

			if ($panel->bye) { 

				my $winner = shift @entries;
				my $loser = shift @entries;
				print TEXOUT Tab::texify($winner->code);
				print TEXOUT " advances over ".Tab::texify($loser->code);
				print TEXOUT " (".Tab::texify($loser->name).")\n";
				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";

				undef $winner;
				undef $loser;

			} else { 

				my $winner = shift @entries;
				my $loser = shift @entries;
				my $winner_count = scalar @{$ballots_won{$winner->id}} ;
				my $loser_count = scalar @{$ballots_won{$loser->id}} ;

				my $winner_side;
				my $loser_side;

				if ($winner->side == 1) { 
					$winner_side = $affstring;
					$loser_side = $negstring;
				} else { 
					$winner_side = $negstring;
					$loser_side = $affstring;
				}

				print TEXOUT "\\textbf{".Tab::texify($winner->code)."} on the ".Tab::texify($winner_side)." defeated ";
				print TEXOUT "\\textbf{".Tab::texify($loser->code)."} ";
				print TEXOUT " on a ".$winner_count."--".$loser_count." decision \n\n";

				print TEXOUT $round->realname." award to ".Tab::texify($loser->school->short_name."'s ").Tab::texify($m->comp("/funclib/entry_name.mas", entry => $loser, full => 1))." \n\n";
				print TEXOUT "Judges: ";
				foreach my $ballot (@{$ballots_won{$winner->id}}) { 
					print TEXOUT Tab::texify($ballot->judgename).", ";
				}

				foreach my $ballot (@{$ballots_won{$loser->id}}) { 
					print TEXOUT Tab::texify($ballot->judgename)."\\textbf{*} ";
				}
				print TEXOUT "\n \\medskip\n";
				print TEXOUT "\\newline\n";

				undef $winner;
				undef $loser;

			}

		}

		print TEXOUT "\\vspace{.1in}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>

