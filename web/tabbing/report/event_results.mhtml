<%args>
	$tourn
	$session
	$event_id => undef
	$report => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id) if $event_id && $event_id ne "all";

	my $novice++ if $tourn->setting("novices");

	my $switch = 1;
    my $now = DateTime->now;    
    $now->set_time_zone($tourn->tz);

	my $name = $tourn->name if $event_id eq "all";
    $name = $event->name if $event && not defined $name;
    $name =~ s/[\W_]//g;

	my @events;
	push @events, $event;
	@events = sort {$a->name cmp $b->name} $tourn->events if $event_id eq "all";

    my $filename = "Results-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", filename => $filename, head => 1 );

    open (TEXOUT, ">>$filepath.tex");

	foreach my $event (@events) { 

		my $top_novice = $m->comp("/tabbing/results/speech/top_novice.mas", event => $event) if $novice;

		my @values = $m->comp("/funclib/event_values.mas", event => $event);
		my %values_by_entry = ();
		my %values_by_student = ();

		foreach my $value (@values) { 
			push @{$values_by_entry{$value->entryid}}, $value;
			push @{$values_by_student{$value->student->id}}, $value if $value->tag eq "points" and $value->student;
		}
	
		my @rounds = sort {$b->name <=> $a->name} $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");

		my $final;
		my @elims;
		my $last_prelim;

		foreach my $round (@rounds) { 
			$final = $round if $round->type eq "final";
			push (@elims, $round) if $round->type eq "elim";
			$last_prelim = $round if $round->type ne "elim" && $round->type ne "final" && not defined $last_prelim;
		}

		my @print_rounds;

		if ($report eq "all" || $report eq "elims" || $report eq "final") { 
			push (@print_rounds, $final) if $final;
		}

		if ($report eq "all" || $report eq "elims") { 
			push (@print_rounds, @elims) if @elims;
		}

		if ($report eq "all" || $report eq "prelims" || $report eq "speakers") { 
			push (@print_rounds, $last_prelim) if $last_prelim;
		}

		my %used;

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\hfill {\\huge ". Tab::texify($tourn->name.": ".$event->name)."} \\\\ \n";
		print TEXOUT "\\newline\n";

		foreach my $round (@print_rounds) { 

			my $type = $round->type;
			my $label = substr($round->label, 0, 3);
			my $event_type = $round->event->type;
			
			my $entries_ref;
			my $students_ref;
			my $tbs_ref;
			my $noshow_ref;
			my $desc_ref;

			if ($event_type eq "speech") { 
				($entries_ref, $tbs_ref, $desc_ref, $noshow_ref) = $m->comp("/tabbing/results/speech/order_entries.mas", round => $round) 
			} elsif ($event_type eq "wudc") {
				($entries_ref, $tbs_ref, $desc_ref) = $m->comp("/tabbing/results/wudc/order_entries.mas", round => $round) if $report ne "speakers";
				($students_ref, $tbs_ref, $desc_ref) = $m->comp("../results/wudc/order_speakers.mas", round => $round) if $report eq "speakers";
			}

			print TEXOUT "\\medskip\n";
			print TEXOUT "{\\Large Results after ". Tab::texify($round->realname)."} \\\\ \n" unless $report eq "speakers";
			print TEXOUT "{\\Large Top Speakers after ". Tab::texify($round->realname)."} \\\\ \n" if $report eq "speakers";
			print TEXOUT "\\newline\n";

			my $ballot_space = 3.5;
			$ballot_space = 2.5 if $report eq "speakers";
			my $tabular = "\\begin{tabular}{p{.35in}p{1.25in}p{1.25in}";
			$tabular = "\\begin{tabular}{p{.5in}p{2.0in}p{1.25in}" if $report eq "speakers";

			foreach my $key (keys %{$desc_ref}) {
				$tabular .= "p{.35in}";
				$ballot_space -= .5;
			}

			$tabular .= "p{".$ballot_space."in}}\n";

			print TEXOUT $tabular;
			print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
			print TEXOUT "  & Name & Team & ";

			foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) {
				print TEXOUT "\\scriptsize ".Tab::texify(${$desc_ref}{$key})." & ";
			}
			print TEXOUT "  Ballots \\\\ \n";

			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

			if ($students_ref) { 

				foreach my $key (sort {$a <=> $b} keys %{$students_ref}) {
				
					my $tie++ if scalar @{${$students_ref}{$key}} > 1;

					foreach my $student (@{${$students_ref}{$key}}) {

						next unless $values_by_student{$student->id} && @{$values_by_student{$student->id}};

						print TEXOUT $tabular;
						print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

						print TEXOUT Tab::texify($key);
						print TEXOUT " -T " if $tie;

						print TEXOUT " & ". Tab::texify($student->first." ".$student->last)." & ";
						print TEXOUT " ".Tab::texify($student->code)." & ";

						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) {
							print TEXOUT Tab::texify(${$tbs_ref}{$student->id."-".$key}." ");
							print TEXOUT " & ";
						}

						my $last_tag;

						foreach my $value (@{$values_by_student{$student->id}}) { 
							print TEXOUT $value->value." ";
						}

						print TEXOUT "\\\\ \n";
						print TEXOUT "\\end{tabular}\n";
						print TEXOUT "\\newline\n";
					}

				}

			} else {

				foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) {
					
					my $tie++ if scalar @{${$entries_ref}{$key}} > 1;

					foreach my $entry (@{${$entries_ref}{$key}}) {

						next if $used{$entry->id};
						$used{$entry->id}++;

						print TEXOUT $tabular;
						print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

						print TEXOUT Tab::texify($key) if $type eq "final" || $event_type eq "wudc";
						print TEXOUT Tab::texify($label) if $type eq "elim";
						print TEXOUT Tab::texify("-T") if $tie && $type eq "final";
						print TEXOUT "\\footnotesize{TopNov} " if $top_novice && top_novice->id == $entry->id;

						my $name = $entry->name;
						$name =~ s/amp;//g;

						print TEXOUT " & ". Tab::texify($name)." & ";
						print TEXOUT " ".substr(Tab::texify($entry->school->short_name), 0, 20)." & ";

						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) {
							print TEXOUT Tab::texify(${$tbs_ref}{$entry->id."-".$key}." ");
							print TEXOUT " & ";
						}

						my $last_tag;

						foreach my $value (@{$values_by_entry{$entry->id}}) { 

							if ($value->tag eq "rank") { 
								print TEXOUT " ";
							} else { 
								print TEXOUT "/" if $last_tag eq "ballot";
								print TEXOUT "/" if $last_tag eq "rank";
								print TEXOUT " " if $last_tag eq "points";
							}
							print TEXOUT $value->value;
							$last_tag = $value->tag;
						}

						print TEXOUT "\\\\ \n";
						print TEXOUT "\\end{tabular}\n";
						print TEXOUT "\\newline\n";
					}
				}

				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";
			}

		}

	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas", filename => $filename, tail => 1 );

</%init>

