<%args>
	$session
	$tourn
</%args>
<%init>

	my ($pointsref, $entref) = $m->comp("/tabbing/results/sweeps/sweep_tourn.mas", tourn => $tourn);

	my %event_by_id = ();
	foreach my $event ($tourn->events) {
		$event_by_id{$event->id} = $event->abbr;
	}

	my %points_by_school = ();
	my %count_by_school = ();
	my %entries_by_school = ();
	
	my %school_events_used = ();

	my @entries = sort { ${$pointsref}{$b->id} <=> ${$pointsref}{$a->id}} @{$entref};

	foreach my $set ($tourn->sweep_sets) {

		my $events = $set->rule("events");
		my $entries = $set->rule("entries");
		my $wildcards = $set->rule("wildcards");
		my $event_entries = $set->rule("event_entries");

		my %school_entries = ();
		my %school_event_entries = ();
		my %school_events = ();
		my %school_wildcards = ();

		my @events = $set->events;
		my %use_event = ();

		foreach (@events) { $use_event{$_->id}++;  }

		foreach my $ent (@entries) { 

			my $school_id = $ent->school->id;
			$entries_by_school{$school_id}++;

			next unless ${$pointsref}{$ent->id};

			my $event_id = $ent->event->id;
			next unless $use_event{$event_id};

			next if $entries && $school_entries{$school_id} >= $entries && ( $wildcards < 1 || $school_wildcards{$school_id} >= $wildcards );
			next if ( ( ($events && $school_events{$school_id} >= $events) || ($event_entries && $school_event_entries{$school_id."-".$event_id} >= $event_entries) )
						&& ( $wildcards < 1 || $school_wildcards{$school_id} >= $wildcards )  );

			if ( 	($entries < 1 || $school_entries{$school_id} >= $entries) && 
				 	( ($events < 1 || $school_events{$school_id} >= $events ) || 
				 	  ($event_entries < 1 || $school_event_entries{$school_id."-".$event_id} >= $event_entries )
					) 
				) {

				 		$school_wildcards{$school_id}++;

			} else { 
				$school_entries{$school_id}++;
				$school_events{$school_id}++ unless $school_events_used{$school_id."-".$event_id};
				$school_event_entries{$school_id."-".$event_id}++;
				$school_events_used{$school_id."-".$event_id}++;
			}
			
			$count_by_school{$school_id}++;
			$points_by_school{$school_id} += ${$pointsref}{$ent->id};

		}
	}

	my $name = $tourn->name;
    $name =~ s/[\W_]//g;

	my $filename = "Sweeps-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`; 

	$m->comp("/funclib/printout.mas", filename => $filename, head => 1, array => "1.8" );
	open (TEXOUT, ">>$filepath.tex");

    print TEXOUT "\\bigskip\n";
	print TEXOUT "{\\huge ". Tab::texify($tourn->name) ." Sweepstakes } \\\\ \n";
	print TEXOUT "\\newline\n";


	my $tabular = "\\begin{tabular}{p{.25in}p{2.75in}p{.5in}p{.75in}p{.75in}p{1.0in}}\n";
	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
	print TEXOUT "  & Name & State & Entries & Counted & Points \\\\ \n ";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	my $switch;

	foreach my $school (sort {$points_by_school{$b->id} <=> $points_by_school{$a->id}} $tourn->schools) { 

		next unless $points_by_school{$school->id};

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

		print TEXOUT Tab::texify($switch)." & ";
		print TEXOUT Tab::texify($school->short_name)." & ";
		print TEXOUT Tab::texify($school->chapter->state) if $school->chapter;
		print TEXOUT " & ";
		print TEXOUT Tab::texify($entries_by_school{$school->id})." & "; 
		print TEXOUT Tab::texify($count_by_school{$school->id})." & "; 
		print TEXOUT Tab::texify($points_by_school{$school->id})." \\\\ \n "; 
	
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;
	$m->comp("/funclib/printout.mas", filename => $filename, tail => 1 );

</%init>

