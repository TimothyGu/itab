<%args>
	$tourn
        $account
        $session
</%args>

<%init>
	#Import the XML
        use XML::Simple;

        my $now = DateTime->now;
        my $tz = $account->tz if $account->tz;
        $tz = "UTC" unless $tz;

        $now->set_time_zone($tz);

        my $req = Apache2::Request->new($r);
        my $xml_file = $req->upload("xml");
        my $xml_filename = $xml_file->tempname;
	my $webname=$xml_file->filename;

        `/bin/cp $xml_filename /tmp/keeper.xml`;
        `perl -pi -e s/'&'/'&amp;'/g  $xml_filename`;

        my $xml = new XML::Simple ( SuppressEmpty => 1,  ForceArray => [ qw(TOURN ENTRY SCHOOL) ]);
        my $data = $xml->XMLin($xml_filename);

	#Show tourn values
	my $tournname; my $startdate; my $location; my $weight;
	print "first try<br>";
	foreach my $xml_tourn (@{$data->{TOURN}})
		{
		$tournname=$xml_tourn->{TOURNNAME};
		$location=$xml_tourn->{LOCATION};
		$startdate=$xml_tourn->{STARTDATE};
		$weight=$xml_tourn->{WEIGHT};
		}

	print "As variable:".$tournname."<br>";
	#$tournname="WUDC World Championship";
	print "Straight from data object=".$data->{TOURN}[0]."<br>";
	my $tourn_id = SaveTourney($tournname, $startdate, $location, $tz, $webname, $account);
        print "Tourney id=".$tourn_id."<Br>";
        print "Tourney is saved.<br>";

#CREATE AN EVENT

my $event_id = CreateEvent($tourn_id);
print "Event ID=".$event_id;

#DO SCHOOLS

	#Loop each school and put into an array; save to iTab as you go
	my @schoolrec; #=0 name, 1=XML ID, 2=new iTab ID
	my $x; $x=0;
        foreach my $xml_school (@{$data->{SCHOOL}}) 
                {
		$schoolrec[$x][0]=$xml_school->{SCHOOLNAME};
		$schoolrec[$x][1]=$xml_school->{ID};
                $schoolrec[$x][2]=SaveSchool($schoolrec[$x][0], $tourn_id);
		$x++;
                }

	print "N schools".$#schoolrec."<br>";
        #print "School 1=".$schoolrec[1][0]."<br>";
        #print "School 100=".$schoolrec[100][0]."<br>";
	#Schools are now added to the database and the array has stored iTab number

#DO ENTRIES

        #Loop each ENTRY and put into an array; save to iTab as you go
        my @entry; #=0 name, 0=XML ID, 2=xml school, 3=points, 4=rank, 5=iTab ID, 6=iTab School
        $x=0;
        foreach my $xml_entry (@{$data->{ENTRY}})
                {
                $entry[$x][0]=$xml_entry->{FULLNAME};
                $entry[$x][1]=$xml_entry->{ID};
		$entry[$x][2]=$xml_entry->{SCHOOLID};
		$entry[$x][3]=$xml_entry->{POINTS};
		$entry[$x][4]=$xml_entry->{RANK};
		#print $x." name=".$entry[$x][0]." id=".$entry[$x][1]." school=".$entry[$x][2];
		#print " points=".$entry[$x][3]." rank=".$entry[$x][4]."<br>";
                $x++;
                }

	#Match up school; now entry(x)(6)=itab school id#
        for ($x = 0; $x <=$#entry; $x++)
 	{   
 	 for (my $i = 0; $i <= $#schoolrec; $i++)
  	 {
	  if ($entry[$x][2]==$schoolrec[$i][1]) {$entry[$x][6]=$schoolrec[$i][2];}
	 }
	}

#  for ($x = 0; $x <=$#entry; $x++)
#        {
#		print $x."-".$entry[$x][0]." xml school=".$entry[$x][2]." iTab school=".$entry[$x][6]."<br>";
#        }

 	#Write all the entries to iTab and stick iTab Id in entry(x)(5)
        for ($x = 0; $x <=$#entry; $x++)
	{
	  $entry[$x][5]=SaveEntry($tourn_id, $event_id, $entry[$x][6], $entry[$x][0]);
	}
	#tourn, entries, schools, events are now saved in iTab

#Create Result_set
my $result_set=CreateResultSet($tourn_id, $event_id);

#Create result field for each entry and populate result_value
my $result;

  for ($x = 0; $x <=$#entry; $x++)
        {
          $result=CreateResult($entry[$x][5], $entry[$x][$6], $result_set);
	  SaveResultSet($result, $entry[$x][3], 1, 0, "Rank"); 
	  SaveResultSet($result, $entry[$x][4], 2, 1, "WUDC Points");
        }

#all done; go match up chapters to schools
$m->redirect("/user/circuit/chapter_by_tourn.mhtml?tourn_id=$tourn_id&circuit_id=50");	

##NOW ALL THE SUBROUTINES
sub SaveResultSet
{
 my ($result, $value, $priority, $sort_desc, $tag) = @_;

       my $object = Tab::ResultValue->create( {
                result => $result,
                value => $value,
                priority => $priority,
		sort_desc => $sort_desc,
                tag => $tag
        });

}

sub CreateResult
{
 my ($entry_id, $entry_school, $result_set) = @_;

       my $object = Tab::Result->create( {
                entry => $entry_id,
                result_set => $result_set,
                school => $entry_school
        });

 return $object->id;
}

sub CreateResultSet
{
 #creates a standard results set to store the WUDC points

 my ($tourn_id, $event_id) = @_;

       my $RSobject = Tab::ResultSet->create( {
                tourn => $tourn_id,
                event => $event_id,
                label => "WUDC Points",
                bracket => 0
        });

 return $RSobject->id;
}

sub SaveEntry
{
    my ($tourn_id, $event_id, $school_id, $entry_name) = @_;

    my $entryobject = Tab::Entry->create( {
                tourn => $tourn_id,
                school => $school_id,
                event => $event_id,
                code => $entry_name,
                name => $entry_name
        });

 return $entryobject->id;

}

sub CreateEvent
{
 my ($tourn_id) = @_;

       my $eventobject = Tab::Event->create( {
                tourn => $tourn_id,
                name => "Open",
                type => "WUDC (BP)",
                abbr => "Open"
        });

 return $eventobject->id;

}

sub GetChapterID
{
 my ($schoolname) = @_;
 my @chapters = Tab::Chapter->search( name => $schoolname);
 my $chapter; $chapter=0;
 foreach my $candidate (@chapters) 
   {
	next if $chapter;
   	$chapter=$candidate->id;	
   }
 return $chapter;
}

sub SaveSchool
#Adds the school to the database and returns new iTab record ID
{
    my ($schoolname, $tourn_id) = @_;

    my $newschool = Tab::School->create({
                        chapter => GetChapterID($schoolname),
                        name => $schoolname,
                        tourn => $tourn_id,
                        code => $schoolname
                 });
   
 return $newschool->id;
}

sub SaveTourney
{
 #you're in strict mode, so must these values must be read in for local variables
 my ($tournname, $startdate, $location, $tz, $webname, $account) = @_;

 my $judge=$startdate;
 my $drops=$startdate;
 my $fines=$startdate;
 my $circuit_string="WUDC";
 my $site_id=883;
 my $site_name="Kapriz Issyk-Kul";
 my $state="WALES";
 my $country="UK";

        my $tourn = Tab::Tourn->create( {
                name => $tournname,
                webname => $webname,
                start => $startdate,
                end => $startdate,
                reg_start => $startdate,
                reg_end => $startdate,
                hidden => 0,
                state => $state,
                country => $country,
                tz => $tz
        });

	$tourn->setting("freeze_deadline", "date", $startdate);
        $tourn->setting("fine_deadline", "date", $startdate);
        $tourn->setting("judge_deadline", "date", $startdate);
        $tourn->setting("drops_deadline", "date", $startdate);
        $tourn->setting("school_codes", "shortname");

	#set up tourney site
        my $join = Tab::TournSite->create ({
                tourn => $tourn->id,
                site => $site_id
        });

	#set up admin
	$join = Tab::TournAdmin->create ({
                tourn => $tourn->id,
                account => $account,
                contact => '1'
        });

	#link to circuit
        $join = Tab::TournCircuit->create ({
        	tourn => $tourn->id,
                circuit => 50
        });

return $tourn->id;
}

</%init>
