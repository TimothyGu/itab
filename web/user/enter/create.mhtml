<%args>
	$tourn_id
	$chapter_id
	$account
	$session
</%args>
<%init>

	my $tourn = Tab::Tourn->retrieve($tourn_id);
	my $chapter = Tab::Chapter->retrieve($chapter_id);

	$m->comp("/user/chapter/auth.mas", chapter => $chapter, account => $account, session => $session);

	my ($existing_school) = $chapter->schools( tourn => $tourn->id);

	if ($existing_school) {
		$m->redirect("/user/enter/entry.mhtml?school_id=".$existing_school->id);
	}

	my $now = DateTime->now();

	$m->abort if $tourn->reg_start > $now;
	$m->abort if $tourn->reg_end < $now;

	my $school_code;
	my $school_region;

	my $codes = $tourn->setting("school_codes");

	if ($codes eq "incremental") { 

		Tab::School->set_sql(highest_code => "select max(code) from school where tourn = ? and code not in (\"BJ\", \"DQ\")");
		my $value = Tab::School->sql_highest_code->select_val($tourn->id);

		$value++ if $value;
		$value = $tourn->setting("first_school_code") unless $value;
		$value = "AA" unless $value; 

		$value++ if $value eq "DQ";
		$value++ if $value eq "BJ"; 

		$value++ if $value eq 69;
		$value++ if $value eq 666; 
		
		$school_code = $value;
		$school_code = "DQ" if $chapter->id == 2660;
		$school_code = "BJ" if $chapter->id == 330;

	} elsif ($codes eq "circuit") { 

		my $circuit = $tourn->circuits->first;

		my ($cl) = Tab::ChapterCircuit->search( circuit => $circuit->id, chapter => $chapter->id ) if $circuit;
		$school_code = $cl->code if $cl;
		$school_region = $cl->region->id if $cl->region;

	} elsif ($codes eq "shortname") { 

		$school_code = $chapter->short_name;
		$school_code =~ s/ington$/ton/;

		if ($school_code =~ m/\s/) { 
			my @bits = split (/\ /, $school_code);
			$school_code = substr($bits[0], 0, 3).substr($bits[1],0,3);
		} else {
			$school_code = substr($school_code, 0, 6);
		}

		$school_code =~ s/\s//g;

	}

	my $school = Tab::School->create({
		tourn => $tourn->id,
		chapter => $chapter->id,
		name => $chapter->name,
		code => $school_code,
		region => $school_region,
		contact_name => $account->first." ".$account->last,
		contact_number => $account->phone,
		entered_on => $now
	});


	if ($tourn->setting("track_reg_changes")) {

		my $regline = "School registered by ".$account->first." ".$account->last;

		my $change = Tab::TournChange->create({
			tourn => $tourn->id,
			school => $school->id,
			type => "registration",
			text => $regline,
			account => $account->id
		});

	}

	foreach my $fine ($tourn->tourn_fees) {

		next unless $fine->amount > 0;

		next if $fine->start && $fine->start > $now;
		next if $fine->end && $fine->end < $now;

		my $fee = Tab::SchoolFine->create({
			school => $school->id,
			amount => $fine->amount,
			reason => $fine->reason,
			tourn => $tourn->id,
			levied_on => $now
		});

	}

	$m->redirect("disclaimer.mhtml?school_id=".$school->id) if $tourn->setting("disclaimer");
	$m->redirect("entry.mhtml?school_id=".$school->id);

</%init>
