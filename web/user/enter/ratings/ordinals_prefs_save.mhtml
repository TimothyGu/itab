<%args>
	$entry_id
	$group_id
	$account
	$fill => undef
</%args>
<%init>

	my $now = DateTime->now();
	my $err;

	my $entry = Tab::Entry->retrieve($entry_id);
	$m->abort unless $entry;
	my $group = Tab::JudgeGroup->retrieve($group_id);

	Tab::Entry->set_sql(wipe_prefs => "delete from rating where entry = ? and rating_tier = 0");
	Tab::Entry->sql_wipe_prefs->execute($entry->id);

	my @conflicts = $m->comp("/funclib/entry_conflicts.mas", entry => $entry);
	my %conflicts_by_id = ();
	foreach (@conflicts) { $conflicts_by_id{$_->judge->id} = $_; }

	my @school_conflicts = $m->comp("/funclib/school_conflicts.mas", school => $entry->school, group => $group);

	my %school_conflicts_by_id = ();

	foreach (@school_conflicts) { $school_conflicts_by_id{$_->judge->id} = $_; }

    my @judges;
	my @all_judges = Tab::Judge->search_where({ active => 1, judge_group => $group->id });

	my %rating_by_judge = ();
	my %ordinal_by_judge = ();
	my %judges_at_rating = ();

	my $total_rounds;

    foreach my $judge (@all_judges) {

		next unless $ARGS{"rating_".$judge->id};
        next if $judge->school->id == $entry->school->id;
        next if $conflicts_by_id{$judge->id};
        next if $school_conflicts_by_id{$judge->id};

		unless ($ARGS{"rating_".$judge->id} == 999) { 
			$total_rounds += $judge->obligation;
			$total_rounds += $judge->hired;
		}

		my $rating = Tab::Rating->create({
			type => "entry",
			tourn => $group->tourn->id,
			judge => $judge->id,
			entry => $entry->id,
			ordinal => $ARGS{"rating_".$judge->id},
			entered => $now
		});

		$rating_by_judge{$judge->id} = $rating;
		$ordinal_by_judge{$judge->id} = $ARGS{"rating_".$judge->id};
		push (@{$judges_at_rating{$ARGS{"rating_".$judge->id}}}, $judge );

	}	

	my $rounds_before;
	$total_rounds = scalar @all_judges unless $total_rounds;

	my $count;

	foreach my $ordinal (sort {$a <=> $b} keys %judges_at_rating ) {

		next unless $ordinal > 0;

		my $rounds_add;
		my $judge_count;
	
		foreach my $judge (@{$judges_at_rating{$ordinal}}) { 

			$judge_count++;
			$count++;

			my $percentile = ( ($rounds_before + 1) / $total_rounds) * 100;
	
			$rounds_add += $judge->obligation;
			$rounds_add += $judge->hired;

			my $rating = $rating_by_judge{$judge->id};

			$rating->ordinal($count) if $fill && $rating->ordinal != 999;
			$rating->percentile($percentile);
			$rating->update;

		}

		$rounds_before += $rounds_add;
		$rounds_before += $judge_count unless $rounds_add;

	}

	my $msg = $entry->code." prefs saved in ".$group->abbr." to $rounds_before rounds";
	$m->redirect("ordinals_prefs.mhtml?school_id=".$entry->school->id."&entry_id=".$entry_id."&group_id=".$group->id."&style=entry_ratings&msg=".$msg."&err=".$err);

</%init>
