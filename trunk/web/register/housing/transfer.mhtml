<%args>
	$housing_id
	$school_id
	$student_id => undef
	$judge_id => undef
	$err => undef
	$account
</%args>
<%init>

	my $housing = Tab::Housing->retrieve($housing_id);
	my $tourn = $housing->tournament;
	my $school = Tab::School->retrieve($school_id);

	#Check permissions
	$account->can_alter($school_id);

	if ($student_id && $judge_id) { 

		$err = "Oh, hey now.  You can only transfer a housing request to a
			judge OR a student, not both!  Try again, and make sure one slot blank."; 

		$m->redirect("$Tab::url_prefix/register/housing_transfer.mhtml?err=$err&housing_id=$housing_id&$school_id=$school_id");

	}

	if ($student_id) { 

		my $student = Tab::Student->retrieve($student_id);

		# Get rid of existing request if one exists
		my $ex = $student->housing($tourn, $housing->night);
		$ex->delete if $ex;

		$housing->student($student_id);
		$housing->judge("");
		$housing->type("student");
		$housing->update;
		$m->redirect("$Tab::url_prefix/register/housing_school.mhtml?school_id=$school_id");
	}

	if ($judge_id) {

		my $judge = Tab::Judge->retrieve($judge_id);

		my $ex = $judge->housing($housing->night);
		$ex->delete if $ex;

		$housing->judge($judge_id);
		$housing->student("");
		$housing->type("judge");
		$housing->update;
		$m->redirect("$Tab::url_prefix/register/housing_school.mhtml?school_id=$school_id");
	}


	my @students_without_housing;
	my @judges_without_housing;

	foreach my $student ($school->students) { 
		my $hs = $student->housing($tourn, $housing->night);
		next if ($hs && $housing->waitlist > 1);
		push (@students_without_housing, $student);
	}

	foreach my $judge ($school->judges) {
		my $hs = $judge->housing($housing->night);
		next if ($hs && $housing->waitlist > 1);
		push (@judges_without_housing, $judge);
	}

	my $person = $housing->judge if $housing->type eq "judge";
	$person = $housing->student if $housing->type eq "student";

</%init>

	<h3>Transfer <% $person->first." ".$person->last %>'s housing slot:</h3>

	<center>

	<table cellpadding="7" cellspacing="1" width="65%">

		<tr>
			<th>To a Student:</th>

			<td>
				<form action="housing_transfer.mhtml" method="post">
				<input type="hidden" name="housing_id" value="<% $housing->id %>">
				<input type="hidden" name="school_id" value="<% $school->id %>">
				<select name="student_id">
					<option value="">Select one (OR a judge:)</option>
%					foreach my $student (sort {$a->last cmp $b->last} @students_without_housing) {
						<option value="<% $student->id %>"><% $student->last." ".$student->first %></option>
%					}
				</select>
			</td>

		</tr>

		<tr class="oddrow">
			<th>Or, to a judge*</td>

			<td>
				<select name="judge_id">
					<option value="">Select one (OR a student:)</option>
%					foreach my $judge (sort {$a->last cmp $b->last} @judges_without_housing) {
						<option value="<% $judge->id %>"><% $judge->last." ".$judge->first %></option>
%					}
				</select>
			</td>
		</tr>

		<tr class="evenrow">
			<td colspan="2" style="line-height: 24px;">
				*Remember, typically tournaments only provide housing for judges who are still
				in high school, not adults or college students.  Please consult the tournament's
				invitation before requesting housing for a judge.
			</td>
		</tr>

		<tr>
			<td colspan="2" align="center">
			<input type="submit" value="   Transfer Housing Request   ">
			</form>
		</tr>

	</table>
