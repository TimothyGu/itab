<%args>
	$league
	$tourn
	$account
	$session
	$group_id => 0
</%args>
<%init>

	my @groups = $tourn->groups unless $group_id;
	push (@groups, Tab::JudgeGroup->retrieve($group_id)) if $group_id;

	@groups = sort {$a->abbr cmp $b->abbr} @groups;

	my $string = $groups[0]->abbr if $group_id;
	$string = "all-groups" unless $group_id;

	my $filename = $Tab::file_root."/tmp/judges-".$string."-".$session->id;
	my $garbage = `rm -f $filename.*`;

	open (CSVOUT, ">$filename.csv");

	print CSVOUT "Group,";
	print CSVOUT "Code,";
	print CSVOUT "Group," unless $group_id;
	print CSVOUT "DioCode," if $league->diocese_based;
	print CSVOUT "Diocese," if $league->diocese_based; 
	print CSVOUT "RegCode," if $league->region_based;
	print CSVOUT "Region," if $league->region_based;
	print CSVOUT "Schcode," unless $league->diocese_based;
	print CSVOUT "School,";
	print CSVOUT "First,Last,";
	print CSVOUT "Rating," if $tourn->method->judge_quality_system;

	if ($league->diocese_based) { 
		print CSVOUT "PrelimPool,";
		print CSVOUT "ElimPool,";
		print CSVOUT "Doubles,";
		print CSVOUT "Octos,";
		print CSVOUT "Quarters,";
		print CSVOUT "Semis,";
		print CSVOUT "Finals,";
	}

	print CSVOUT "Active,";
	print CSVOUT "Notes,";
	print CSVOUT "Special Duty\n";

	foreach my $group (@groups) { 

	my @elim_pools = sort {$b->id <=> $a->id} $group->elim_pools;

	my @judges = sort {$a->code <=> $b->code} $group->judges;
	@judges = sort {$a->active <=> $b->active} @judges;

foreach my $judge (@judges) { 

	print CSVOUT &Tab::texify($judge->judge_group->abbr).",";
	print CSVOUT &Tab::texify($judge->code).",";
	print CSVOUT &Tab::texify($group->abbr)."," unless $group_id;

	if ($league->region_based && $judge->school && $judge->school->region) { 
		print CSVOUT &Tab::texify($judge->school->region->name).",";
		print CSVOUT &Tab::texify($judge->school->region->code).",";
	}

	if ($league->diocese_based) { 
		print CSVOUT &Tab::texify($judge->school->region->code).",";
		print CSVOUT &Tab::texify($judge->school->region->name).",";
	} else { 
		print CSVOUT &Tab::texify($judge->school->code).",";
	}

	print CSVOUT "\"".&Tab::texify($judge->school->name)."\",";
	print CSVOUT &Tab::texify($judge->first).",";
	print CSVOUT &Tab::texify($judge->last).",";


	if ($tourn->method->judge_quality_system) { 

		print CSVOUT "\"";
		my $notfirst;
		foreach my $qual ($judge->quals) {
			print CSVOUT "-" if $notfirst;
			print CSVOUT $qual->name;
			$notfirst++;
		}
		print CSVOUT "\",";
	}

	if ($league->diocese_based) { 

		print CSVOUT "\"";
        print CSVOUT &Tab::texify($judge->prelim_pool->name)."\", " if $judge->prelim_pool;
		print CSVOUT &Tab::texify($judge->judge_group->abbr)."\", " unless $judge->prelim_pool;

		foreach my $elim_group ($judge->elim_group) {
             print CSVOUT &Tab::texify($elim_group->abbr)
		}
		print CSVOUT ",";

		my $count = 1;
		my $elim_string;

		foreach my $elim_pool (@elim_pools) {

			$elim_string =  "Y,".$elim_string if $judge->in_pool($elim_pool);
			$elim_string =  "N,".$elim_string unless $judge->in_pool($elim_pool);
			$count++;

		}

		foreach ($count .. 5) {   #Pad the remainder so things line up right.
			print CSVOUT ",";
		}

		print CSVOUT $elim_string;

	}

	print CSVOUT "Y," if $judge->active;
	print CSVOUT "N," unless $judge->active;
	
	print CSVOUT &Tab::texify($judge->notes).",";
	print CSVOUT &Tab::texify($judge->special),"\n";

	}

}

	close CSVOUT;

	$m->redirect("$Tab::url_prefix/tmp/judges-".$string."-".$session->id.".csv");

</%init>

<div id="content">

<p><% $filename %></p>
