<%args>
	$entry_id
	$tourn
</%args>
<%perl>

	my $entry = Tab::Entry->retrieve($entry_id);
	my $now = DateTime->now();

	my @students = $m->comp("/funclib/entry_students.mas", entry => $entry);

	my $msg;
	
	foreach my $student (@students) { 

		my $gender = $ARGS{"gender_".$student->id};
		$student->gender($gender);
		$student->update;

		my @days = $m->comp("/funclib/tourn_days.mas", tourn => $tourn);
		my $day_before = $days[0]->clone;
   		$day_before->subtract( days => 1);
   		push (@days, $day_before);

   		foreach my $day (sort {$a->epoch <=> $b->epoch} @days) {
	
			my $request = $ARGS{"request_".$student->id."_".$day->ymd};
			my $waitlist = $ARGS{"waitlist_".$student->id."_".$day->ymd};

			my $existing_req = $m->comp("/funclib/student_housing.mas", student => $student, tourn => $tourn, day=> $day);

			if ($request) {
		
				$existing_req = Tab::Housing->create({
					tourn => $tourn->id,
					student => $student->id,
					school => $entry->school->id,
					type => "student",
					requested => $now,
					night => $day
				}) unless $existing_req;

				$existing_req->waitlist($waitlist);
				$existing_req->update;

				$msg .= "Housing for ".$student->last." requested ".Tab::niceshortdate($day)."<br />";

			} else { 

				$existing_req->delete if $existing_req;
				$msg .= "Housing for ".$student->last." not requested ".Tab::niceshortdate($day)."<br />";

			}
		}
	}


	$m->redirect("$Tab::url_prefix/register/entry/edit.mhtml?entry_id=$entry_id&msg=$msg");

</%perl>
