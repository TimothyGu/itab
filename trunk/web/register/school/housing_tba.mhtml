<%args>
	$school_id
	$tourn
	$day
</%args>
<%init>

	my $school = Tab::School->retrieve($school_id);
	my $now = DateTime->now;

	my @days = $m->comp("/funclib/tourn_days.mas", tourn => $tourn);
  	my $day_before = $days[0]->clone;
	$day_before->subtract( days => 1);
	push (@days, $day_before);

	foreach my $night (@days) { 

		next unless $day eq $night->ymd;

		my @tbas = Tab::Housing->search( school => $school->id, tba => 1, night => $night); 

		my $nights = $ARGS{"tba"};

		next if $nights == scalar @tbas;

		if ($nights > scalar @tbas) { 

		    # How many slots do we have tonight? 
    		my @slots = Tab::HousingSlots->search( night => $night->ymd, tourn => $tourn->id );
    		my $num_slots = $slots[0]->slots;

   		 	# Are we over that number of requests already?
   			my @requests =  Tab::Housing->search( night => $night->ymd, tourn => $tourn->id );
   	 		my $waitlist = 0;

			foreach (scalar @tbas + 1 .. $nights) { 
    		
				$waitlist++ if $num_slots <= scalar @requests;

				next if $waitlist;

				my $reqs = Tab::Housing->create({
					school => $school->id,
					tba => 1,
					tourn => $tourn->id,
					night => $night,
					requested => $now
				});

				push (@requests, $reqs);

			}
					
		} elsif ($nights < scalar @tbas) { 

			while (scalar @tbas > $nights) { 
				my $tba = shift @tbas;
				$tba->delete;
			}
		 
		}

	}

	my $msg = "TBA housing slots adjusted ";

	$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg");

</%init>
