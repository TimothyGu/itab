<%args> 
	$session
	$league
	$tourn
	$account
</%args>
<%init>

	use POSIX;

	my $filename = "room-needs-".$league->short_name."-tourn".$tourn->id."-".$session->id;
	my $filepath = $Tab::file_root."/tmp/".$filename;

	my $now = DateTime->now;	
	$now->set_time_zone($league->timezone);
	
	my $garbage = `rm -f $filepath.*`;
	open (TEXOUT, ">$filepath.tex");

	my $texheader = "
			\\documentclass[11pt]{letter}
			\\usepackage{fullpage}
			\\usepackage{multirow}
			\\usepackage{colortbl}
			\\usepackage[hmargin=1in,vmargin=1.25in]{geometry}
			\\usepackage{helvet}
			\\renewcommand{\\familydefault}{\\sfdefault}
			\\renewcommand{\\arraystretch}{1.5}
			\\begin{document}
			\\addtolength{\\textwidth}{1in}
			\\addtolength{\\voffset}{-.5in}";

	print TEXOUT $texheader;

	
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\begin{tabular}{p{1.0in}p{2.0in}p{1.0in}p{2.0in}}\n";
	print TEXOUT "\\multicolumn{4}{c}{\\Large Room Requirements }\\\\ \n";
	print TEXOUT "\\small {\\bf Tournament}: & \\small ".&Tab::texify($tourn->name)." & ";
	print TEXOUT "\\small {\\bf Printed}: & \\small ". $now->day_abbr." ".$now->month_name." ".$now->day.", ".$now->year." ".$now->hour_12.":".$now->strftime('%M')." ".$now->strftime('%p')." \\\\ \\hline \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\begin{tabular}{p{2.0in}p{1.25in}p{1.25in}p{1.25in}}\n";
	print TEXOUT "Event & Entries & Minimum Rooms & Maximum Rooms\\\\ \n";
	print TEXOUT "\\hline \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	my $switch;

	my $total_max;
	my $total_min;
	my $total_comps;

	my @events = sort {$a->name cmp $b->name} $tourn->events;

	foreach my $event (@events) { 

		print TEXOUT "\\begin{tabular}{p{2.0in}p{1.25in}p{1.25in}p{1.25in}}\n";
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

		print TEXOUT $event->name." & ". scalar $event->comps( dropped => 0, waitlist => 0);

	    my $max_panel_number;
		my $min_panel_number;

		if ($event->type eq "speech" &&  $tourn->method->min_panel_size &&  $tourn->method->max_panel_size) {
				$max_panel_number = ceil($event->count / $tourn->method->min_panel_size);
				$min_panel_number = ceil($event->count / $tourn->method->max_panel_size);
		}

		if ($event->type eq "congress" &&  $tourn->method->min_chamber_size &&  $tourn->method->max_chamber_size) {
				$max_panel_number = ceil($event->count / $tourn->method->min_chamber_size);
				$min_panel_number = ceil($event->count / $tourn->method->max_chamber_size);
		}

		if ($event->type eq "debate") {
			#Unflighted
			$max_panel_number = floor($event->count / 2);
			#Flighted
			$min_panel_number = ceil($max_panel_number /2);
		}

		$total_max += $max_panel_number;
		$total_min += $min_panel_number;
		$total_comps += scalar $event->comps( dropped => 0, waitlist => 0);

		print TEXOUT " & $min_panel_number & $max_panel_number \\\\ \n";

		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";
	}

	print TEXOUT "\\begin{tabular}{p{2.0in}p{1.25in}p{1.25in}p{1.25in}}\n";
	print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);
	print TEXOUT "{\\bf TOTALS:} & $total_comps & $total_min & $total_max \\\\ \n";
	print TEXOUT "\\end{tabular} \n";

	print TEXOUT "\\end{document} \n";
	close TEXOUT;

	$garbage = `cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;

#	`rm -f $filepath.tex $filepath.log $filepath.dvi $filepath.aux`;

	$m->redirect("$Tab::url_prefix/tmp/".$filename.".pdf");

</%init>
