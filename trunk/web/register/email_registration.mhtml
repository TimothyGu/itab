<%args> 
	$school_id
	$circuit
	$account
	$message = undef;
	$subject = undef;
</%args> 
<%init> 
	
#	use DateTime::Timezone;
		
my $school = Tab::School->retrieve($school_id);
my $tourn = $school->tournament;

# If no subject is supplied, use the tournament name I guess. 
$subject = $tourn->name unless $subject;

# When is it? 
my $now = DateTime->now;
$now->set_time_zone($tourn->tz);

# This creates the message including the tournament name, 
# school name, fees, and listing of kids with codes, and judges with codes.   

$message = $message."\n\n";
if ($include_registration eq "Yes") { 
	$message = $message."     ".$tourn->name ." Registration for ". $school->chapter->name ." \n";

	$message = $message."     Email generated on: ". $now->mdy('/');
	$message = $message." at ". $now->hour_12;
	$message = $message.":". $now->strftime('%M');
	$message = $message." ".$now->strftime('%p');
	#$message = $message." ". DateTime::Timezone->short_name_for_datetime( $now) ." \n";
	$message = $message."     Entries: ". scalar $school->entries(waitlist => 0, dropped => 0)."\n";
	$message = $message."     Drops: ". scalar $school->entries(waitlist => 0, dropped => 1)."\n"
		if $school->entries(waitlist => 0, dropped => 1);
	$message = $message."     Waitlist: ". scalar $school->entries(waitlist => 1, dropped => 0)."\n"
		if scalar $school->entries(waitlist => 1, dropped => 0);
	$message = $message.' Entry Fee: $'.  
		sprintf("%.2f",$m->comp("school_fee.mas", school_id=>$school_id, circuit => $circuit));

	$message = $message."\n \n";
	$message = $message." Please remember codes are subject to change and are not\n
				 final until on-site registration.\n \n";

#	Kid codes and names

	foreach my $entry (sort {$a->code <=> $b->code} $school->entries) { 
	
		$message = $message." ".$entry->code." ".$entry->event->abbr;

		$message = $message." ".$entry->student->first." ".$entry->student->last 
			unless $entry->event->team == 3;

		$message = $message." and ".$entry->partner->first." ".$entry->partner->last
			if $entry->event->team == 2; 
	
		$message = $message." ".$entry->name 
			if $entry->event->team == 3;

		$message = $message." \n";
	}

	$message = $message."\n \n Judges: \n";

#	Judge codes and names

	foreach my $judge (sort {$a->code <=> $b->code} $school->judges) { 

		$message = $message." J".$judge->code." ".$judge->judge_group->name;
		$message = $message." ".$judge->first." ".$judge->last." \n";
	}

# 	Blurb

	$message = $message." \n \n --- \n ";
	$message = $message." This message auto-generated by the Tabroom.com software\n
						  at ".$Tab::url_prefix.". on behalf of the ". $circuit->name ."\n
						  Tabroom.com: http://www.tabroom.com.  ";

#	Now send the message to all the contacts attached to the given school.

	my @accounts = $school->chapter->coaches;

	foreach my $sendto (@accounts) {

		my $mail = new Mail::Mailer 'smtp', Server => $Tab::smtp_server;
		my $from = $account->first." ".$account->last." <".$account->email.">";
		my $to = $sendto->first." ".$sendto->last." <".$sendto->email.">";

		$mail->open({   From => $from,
			To => $to,
			Bcc => $account->email,
			Subject => $subject,
		});

		print $mail $message."\n\n";
		$mail->close();
	}

	

</%init>
