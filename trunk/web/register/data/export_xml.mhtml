<%args>
	$tourn
	$session
</%args>
<%init>

	my $name = $tourn->name;
	$name =~ s/[\W_]//g;

	my $filename = "TourneyData-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`; 

	open (XML, ">$filepath.xml");
	print XML '<?xml version="1.0"?>'."\n";
	print XML "<TOURNAMENTRESULTS>\n";

	#Tournament
	print XML "<TOURN>\n";
	print XML xml("id",$tourn->id);
	print XML xml("tournname",$tourn->name);
	print XML xml("startdate", Tab::xmldt($tourn->start->set_time_zone($tourn->tz)));
	print XML xml("enddate", Tab::xmldt($tourn->end->set_time_zone($tourn->tz)));
	print XML xml("downloadsite","tabroom.com");
	print XML "</TOURN>\n";

	#Event(s)
	my @events;
	foreach my $event ($tourn->events) { 
		push (@events, $event) if $ARGS{"event_".$event->id};
	}

	@events = $tourn->events unless @events;

	my @judge_groups;
	my @schools;

	foreach my $event (@events) {

		push (@judge_groups, $event->judge_group);
		push (@schools, $m->comp("/funclib/event_schools.mas", event => $event));

		print XML "<EVENT>\n";
		print XML xml("id", $event->id);
		print XML xml("eventname", $event->name);
		print XML xml("abbr", $event->abbr);
		print XML xml("type", $event->type);
		print XML "</EVENT>\n";

		foreach my $entry ($event->entries( waitlist => 0)) { 

			print XML "<ENTRY>\n";
			print XML xml("id", $entry->id);
			print XML xml("school", $entry->school->id);
			print XML xml("event", $entry->event->id);
			print XML xml("rating", "");
			print XML xml("code", $m->comp('/funclib/entry_code.mas', entry => $entry, full => 1));
			print XML xml("fullname", $m->comp('/funclib/entry_name.mas', entry => $entry, full => 1));
			print XML xml("dropped", $entry->dropped);
			print XML xml("tubdisability", $entry->ada);
			print XML "</ENTRY>\n";

			foreach my $student ($m->comp("/funclib/entry_students.mas", entry => $entry)) { 

				print XML "<ENTRY_STUDENT>\n";
				print XML xml("id", $student->id);
				print XML xml("school", $entry->school->id);
				print XML xml("entry", $entry->id);
				print XML xml("first", $student->first);
				print XML xml("last", $student->last);
				print XML xml("downloadrec", $student->id);
				print XML "</ENTRY_STUDENT>\n";

			}

		}

	}

	#uniq
	my %seen = ();
	@schools = grep { ! $seen{$_->id} ++ } @schools;

	foreach my $school (@schools) { 
		print XML "<SCHOOL>\n";
		print XML xml("id", $school->id);
		print XML xml("region", $school->region->id) if $school->region;
		print XML xml("code", $school->code);
		print XML xml("name", $school->name);
		print XML "</SCHOOL>\n";
	}

	#uniq
	my %seen_group;
	@judge_groups = grep { ! $seen_group{$_->id} ++ } @judge_groups;

	foreach my $group (@judge_groups) {

		my $coach_ratings = $group->setting('coach_ratings');
		my $no_codes = $group->setting('no_codes');

		foreach my $judge ($group->judges(active => 1)) { 

			next if $judge->dropped;

			print XML "<JUDGE>\n";
			print XML xml("id", $judge->id);
			print XML xml("downloadrecord", $judge->id);
			print XML xml("school", $judge->school->id) if $judge->school;
			print XML xml("hired", "1") unless $judge->school;
			print XML xml("first", $judge->first);
			print XML xml("last", $judge->last);
			print XML xml("tabrating", $m->comp("/funclib/judge_rating.mas", judge => $judge, print => 1)) if $coach_ratings;
			print XML xml("avgpref",  $m->comp("/funclib/judge_avpref.mas", judge => $judge));
			print XML xml("obligation", $judge->obligation);
			print XML xml("notes", $judge->notes);
			print XML xml("code", $judge->code) unless $no_codes;
			print XML "</JUDGE>\n";

		}

	}


	print XML "</TOURNAMENTRESULTS>\n";
	close XML;

	$m->redirect("$Tab::url_prefix/tmp/$filename.xml");

	sub xml {
		my ($key, $value) = @_;
		return "  <".uc($key).">".$value."</".uc($key).">\n";
	}

</%init>
