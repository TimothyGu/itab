<%args>
	$tourn
</%args>

<%init>
#/

# Get the upload and create the file handle.

	my $upload_file = $r->upload;
	my $upload_fh = $upload_file->fh;
	my @judges;

	# Fix line breaks

	while (<$upload_fh>) {
		s/\015\012?|\r\n?|\012|\n|\015/\n/g;
		s/\n\s?\n\s?\n\s?/\n/g;
		push @judges, $_;  
	}

	my $count;
	

	foreach my $judge (@judges) { 
	
		my ( $first, $last, $school_name, $group_name, $qual_letter ) = split(/,/, $judge);
		
		chomp $qual_letter;
		chomp $group_name;
		
		my @schools = Tab::School->search( name => $school_name, tournament => $tourn->id );
		
		my $school;
		my $neutral;
		
		unless (@schools) { 
	
			my @unaff = Tab::School->search( name => "Unaffiliated", tournament => $tourn->id );
			$school = shift @unaff;
			$neutral++;
			
		} else {
		
			$school = shift @schools;
		
		}
		
		my $code;
		my @code_order = Tab::Judge->search( tournament => $tourn->id, {order_by => "code"} );

		if (@code_order) { 
			my $last_code = pop @code_order;
			$code = $last_code->code;
			$code++;
		} else { 
			$code = 1;
		}
	
		my @judge_groups = Tab::JudgeGroup->search(name => $group_name, tournament => $tourn->id);
		next unless (@judge_groups);
		my $group = shift @judge_groups;

		my $judge = Tab::Judge->create({ 
		
			tournament => $tourn->id,
			school => $school->id,
			first => $first,
			last => $last,
			code => $code,
			active => 1,
			judge_group => $group->id,
			neutral => $neutral
	
		});
		
		$count++;
		
		if ($tourn->method->judge_quality_system) { 
		
			my @quals = Tab::Qual->search( name => $qual_letter, tournament => $tourn->id );
			my $qual;
		
			unless (@quals) { 
				$qual = $tourn->method->default_qualification;
			} else { 
				$qual = shift @quals;
			}

			
			my @group_classes = $group->classes;
			foreach my $g_c (@group_classes) {		
			
				my $judge_class = Tab::JudgeClass->create({
					
					class => $g_c->id,
					tournament => $tourn->id,
					judge => $judge->id,
					qual => $qual->id				
				});		
		
			}
	
		}
	}
	
	my $err = "$count judges imported into the tournament";
	$m->redirect("$Tab::url_prefix/register/import.mhtml?err=$err");
	
</%init>
