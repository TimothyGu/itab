<%args> 
	$circuit
	$comp_id
	$tourn
	$school_id => undef 
	$from => undef
</%args>
<%init>

	my $comp = Tab::Comp->retrieve($comp_id);
	my $c_tourn = $comp->tournament;
	my $event_id = $comp->event->id;
	$school_id = $comp->school->id;

	my $now = DateTime->now;
	$now->set_time_zone($circuit->timezone); 
	my $reg_end = $tourn->reg_end;
	$reg_end->set_time_zone($circuit->timezone); 

	my $fine = $tourn->fine_deadline;
	$fine->set_time_zone($tourn->circuit->timezone) if $fine;  

	my $fine_amount = $tourn->method->drop_fine if $reg_end < $now;
	$fine_amount = 0 if $fine && $fine > $now;

	unless ($c_tourn->id eq $tourn->id) { 

		my $err = "That competitor does not belong to your tournament";
		if ($school_id) {
			$m->redirect("$Tab::url_prefix/register/entries.mhtml?err=$err&school_id=$school_id");
		} else { 
			$m->redirect("$Tab::url_prefix/register/entry/edit.mhtml?err=$err&comp_id=$comp_id");
		}
	}

	my $school = $comp->school;
	$comp->dropped(1);
	$comp->dropped_at($now);
	$comp->update;

	if ($now > $reg_end) { 

		my $drop_reason = "Dropped ". $comp->code;

		my $fine = Tab::Fine->create({ 

			school => $school->id,
			amount => $fine_amount,
			reason => $drop_reason,
			levied => $now 

		}) if $fine_amount > 0;
		
	}

	my @ballots = $comp->ballots;

	foreach (@ballots) {
		$_->update;
	}

	my $err = "Competitor ". $comp->code ." dropped";

		$m->redirect("$Tab::url_prefix/register/comp_enter.mhtml?err=$err&school_id=$school_id&event_id=$event_id") if $from eq "comp_enter";
		$m->redirect("$Tab::url_prefix/register/entries.mhtml?err=$err&school_id=$school_id&event_id=$event_id") if $from eq "list";
		$m->redirect("$Tab::url_prefix/register/entry/edit.mhtml?err=$err&comp_id=$comp_id");
		
</%init>
