<%args>
	$tourn
	$err => undef
	$which_rooms
	$clear_old => undef
	$return => undef
	$event_id => undef
	$debug => undef
</%args>
<%init>

	my @panels;

	my $event = Tab::Event->retrieve($event_id) if $event_id;

	system "$Tab::logger Assigning rooms for $which_rooms " if $debug;
	system "$Tab::logger Using only ".$event->name if $debug && $event;

	if ($clear_old) { 

		system "$Tab::logger Clearing current assignments " if $debug;

		if ($event) { 
				
			if ($which_rooms eq "all") { 
				
				system "$Tab::logger Clearing all rounds for an event " if $debug;

				Tab::Panel->set_sql(clear_rooms => "update panel,round
														set panel.room = 0 
														where panel.round = round.id
														and round.event =  ".$event->id);
			}

			if ($which_rooms eq "prelims") { 
				
				system "$Tab::logger Clearing all prelims for an event " if $debug;

				Tab::Panel->set_sql(clear_rooms => "update panel,round
														set panel.room = 0 
														where panel.round = round.id 
														and round.event = ".$event->id."
														and panel.type = \"prelim\"");
			} 

			if ($which_rooms ne "prelims" && $which_rooms ne "all") { 
				
				system "$Tab::logger Clearing rounds in timeslot $which_rooms for an event " if $debug;

				Tab::Panel->set_sql(clear_rooms => "update panel,round set panel.room = 0
													where panel.round = round.id
													and round.event = ".$event->id."
													and round.timeslot = $which_rooms");
			}
	
			Tab::Panel->sql_clear_rooms->execute;

		} else { 
				
			if ($which_rooms eq "all") { 
				Tab::Panel->set_sql(clear_rooms => "update panel,round,event 
														set panel.room = 0 
														where panel.round = round.id
														and round.event = event.id
														and event.tournament = ".$tourn->id);	} 

			if ($which_rooms eq "prelims") { 
				Tab::Panel->set_sql(clear_rooms => "update panel,round,event 
														set panel.room = 0 
														where panel.round = round.id 
														and round.event = event.id 
														and event.tournament = ".$tourn->id." 
														and panel.type = \"prelim\"");
			}

			if ($which_rooms ne "prelims" && $which_rooms ne "all") { 
				Tab::Panel->set_sql(clear_rooms => "update panel,round set panel.room = 0
													where panel.round = round.id
													and round.timeslot = $which_rooms");
			}
	
			Tab::Panel->sql_clear_rooms->execute;
		}

	}

	if ($which_rooms eq "all") { 
		@panels = Tab::Panel->search_panels_by_tourn($tourn->id) unless $event;
		@panels = Tab::Panel->search( event => $event->id) if $event;
	}

	if ($which_rooms eq "prelims") { 
		@panels = Tab::Panel->search_prelims_by_tourn($tourn->id) unless $event;
		@panels = Tab::Panel->search( event => $event->id, type => "prelim") if $event;
	} 

	if ($which_rooms ne "prelims" && $which_rooms ne "all") { 

		my $timeslot = Tab::Timeslot->retrieve($which_rooms); 

		@panels = $timeslot->roomless_panels unless $event;
		@panels = $timeslot->roomless_panels( $event->id ) if $event;
	}

	system "$Tab::logger I have ".scalar @panels." panels." if $debug;

	@panels = sort {$a->round->event->id <=> $b->round->event->id} @panels;
	@panels = sort {$a->letter cmp $b->letter} @panels;
	@panels = sort {length($a->letter) <=> length($b->letter)} @panels;

	foreach my $panel (@panels) { 

		next if $panel->room->id;

		system "$Tab::logger Choosing a room for panel ".$panel->id if $debug;

		my @rooms = $panel->round->rooms if $panel->round;
		my $room = shift @rooms if @rooms;
		next unless $room;
		$panel->room($room->id) if ($room);
		$panel->update;
	}

	$err = "Rooms have been assigned";	

	return if $return;

	$m->redirect("$Tab::url_prefix/panel/rooms.mhtml?err=$err");

</%init>
