<%args>
	$account
	$round_id
	$pref_wt => undef
	$mut_wt => undef
	$mut_wt_panel => undef
	$pref_wt_panel => undef
	$pref_left => undef
	$max_pref_above => undef
	$max_mut_above => undef
	$max_pref_at => undef
	$max_mut_at => undef
	$max_pref_below => undef
	$max_mut_below => undef
	$break_line => undef
	
</%args>
<%init>


	use Time::HiRes qw( time );
	my $start = time(); 
	
	my $round = Tab::Round->retrieve($round_id);
	my $event_id = int($round->event); 
	my $event = Tab::Event->retrieve($event_id);

	#defaults
	$max_pref_above=50 unless $max_pref_above;
	$max_mut_above=30 unless $max_mut_above;
	$max_pref_at=50 unless $max_pref_at;
	$max_mut_at=30 unless $max_mut_at;
	$max_pref_below=50 unless $max_pref_below;
	$max_mut_below=30 unless $max_mut_below;
	$pref_wt=1.2 unless $pref_wt;
	$mut_wt=.8 unless $mut_wt;
	$pref_wt_panel=1.2 unless $pref_wt_panel;
	$mut_wt_panel=1.2 unless $mut_wt_panel;
	$break_line=3 unless $break_line;
	$pref_left=2 unless $pref_left;
	
	#assign weights to hash 
	my %max_pref; my %max_mut;
	$max_pref{'above'} = $max_pref_above;
	$max_mut{'above'} = $max_mut_above;
	$max_pref{'at'} = $max_pref_at;
	$max_mut{'at'} = $max_mut_at;
	$max_pref{'below'} = $max_pref_below;
	$max_mut{'below'} = $max_mut_below;

	#load pairings, judge, and entry ingo
	my @panels = Tab::Panel->search( round => $round_id );
	my $last_round_name = $round->name - 1;
	my $last_round = Tab::Round->search( event => $round->event->id, name => $last_round_name)->first;
	my %entry_wins = $m->comp("/funclib/entry_wins.mas", event => $round->event, round => $last_round);
	my %entry_losses = $m->comp("/funclib/entry_losses.mas", event => $round->event, round => $last_round);
	#my @judge_ref = $m->comp("/funclib/round_judges.mas", round => $round);
	my @judge_ref = Tab::Judge->search( judge_group => $event->judge_group);
	my %judge;
	foreach my $judges (@judge_ref) {
		$judge{$judges->id}{'name'} = $judges->last.", ".$judges->first;
		$judge{$judges->id}{'avg_pref'} = $m->comp("/funclib/judge_avg_rating.mas", judge => $judges, avg_field => "percentile" );
	}
	my %entry_code = map {$_->id => $_->code} $round->event->entries;
	my %pref_record = $m->comp("/funclib/round_ordinals.mas", round => $round);

	#diagnostics
	my ($paired_panels_past, $assigned_judges_past, $needed_panels_past, $needed_judges_past, $paired_panels_current, $assigned_judges_current, $needed_panels_current, $needed_judges_current, $paired_panels_future, $assigned_judges_future, $needed_panels_future, $needed_judges_future, $burned_current, $burned_total, $lost_rounds_current, $lost_rounds_total, $event_rds_left) = $m->comp("/funclib/judge_oblig_count.mas", event_id => $event_id, current_rd_id => $round->id );
	my ($avg_pref, $avg_mut, $worst_pref, $worst_mut, $deciles) = $m->comp("/funclib/mjp_diagnostics.mas", round => $round );
	my %deciles = %{$deciles};
	my @avg_pref = @{$avg_pref}; my @worst_pref = @{$worst_pref}; my @avg_mut = @{$avg_mut}; my @worst_mut = @{$worst_mut};

		#remaining pref calculation
	my $tot_pref; my $tot_rds; 
	my $judge_hash = $m->comp("/funclib/judge_use.mas", round_id => $round->id);
	foreach my $judge (@judge_ref) {
		my $key = $judge->id;
		my $dummy = ${$judge_hash}{$key}{'oblig'} - ${$judge_hash}{$key}{'judged_already'};
		$dummy = ${$judge_hash}{$key}{'future_possible'} if $dummy > ${$judge_hash}{$key}{'future_possible'};
		$dummy = 0 if $dummy < 0 ;
		$tot_rds += $dummy;
		$tot_pref += ( $dummy * $judge{$key}{'avg_pref'} ) ;
	}
	$tot_rds = 1 if $tot_rds == 0;

	my @cohort; $cohort[1]="Above"; $cohort[2]="At"; $cohort[3]="Below";
	
	sub prefdata {

		my ($pref_str) = @_;
		my $pref;
		
		my $slash_spot = index($pref_str, "/");
		my $pref_one= substr($pref_str, 0, $slash_spot);
		my $pref_two = substr($pref_str, $slash_spot+1, length($pref_str)-$slash_spot);
		return ($pref_one, $pref_two);
		
	}

</%init>

<style>
table,th,td
{
border:1px solid black;
}
</style>

	<div class="left huge" >

%				my $end = time(); 
				Total load time: <% printf("%.2f\n", $end - $start) %>
	
	<script>

		judge_diagnostics = function(n_judges) {

			//window.alert("in judge_diagnostics");
			var MasterTable = document.getElementById("current_pairing");
			var TableRows = MasterTable.getElementsByTagName("tr");
			for (var i = 1; i < TableRows.length; i++) {
				for (var j = 1; j <= n_judges; j++) {
					var judge_id = document.getElementById(TableRows[i].cells[0].textContent+"Judge"+j+"ID");
					if ( judge_id != null ) {
						var judge_use = document.getElementById(judge_id.textContent+"DisplayAssigned");
						//window.alert(judge_use.textContent);
						if ( judge_use != null ) { judge_use.textContent = 1; }
					}
				}
			}
			
			var MasterTable = document.getElementById("judge_use");
			var TableRows = MasterTable.getElementsByTagName("tr");
			//window.alert("judge use rows=" + TableRows.length);
			for (var i = 1; i < TableRows.length; i++) {
				var oblig = parseFloat(TableRows[i].cells[6].textContent);
				var SaveAssigned = parseFloat(TableRows[i].cells[8].textContent);
				var DisplayAssigned = document.getElementById(TableRows[i].cells[0].textContent+"DisplayAssigned");
				var DisplayObligLeft = document.getElementById(TableRows[i].cells[0].textContent+"DisplayObligLeft");
				DisplayObligLeft.textContent = oblig + SaveAssigned - parseFloat(DisplayAssigned.textContent);
				//window.alert(TableRows[i].cells[1].textContent + " " + oblig + " " + SaveAssigned + " " + DisplayAssigned.textContent) ;
			}
			window.alert("done");
		}
		
		current_diagnostics = function(n_judges) {

			var MasterTable = document.getElementById("current_pairing");
			var TableRows = MasterTable.getElementsByTagName("tr");
			var TotPref = [0,0,0]; var PrefCt = [0,0,0]; var Cohort_num;
			var WorstPref = [0,0,0]; 
			var TotMut = [0,0,0]; 
			var MutCt = [0,0,0];
			var WorstMut = [0,0,0];
			for (var i = 1; i < TableRows.length; i++) {
				var Cohort = document.getElementById(TableRows[i].cells[0].textContent+"Cohort");
				if ( Cohort != null ) {
					if ( Cohort.textContent == "Above" ) { Cohort_num = 0; }
					if ( Cohort.textContent == "At" ) { Cohort_num = 1; }
					if ( Cohort.textContent == "Below" ) { Cohort_num = 2; }				
				}
				for (var j = 1; j <= n_judges; j++) {
					var id_to_get = TableRows[i].cells[0].textContent+"Judge"+j+"Mut";
					var mut = document.getElementById(id_to_get);
					if ( mut != null ) {
						TotMut[Cohort_num] = TotMut[Cohort_num] + parseFloat(mut.textContent);
						MutCt[Cohort_num] = MutCt[Cohort_num] + 1;
						if ( parseFloat(mut.textContent) > WorstMut[Cohort_num] ) { WorstMut[Cohort_num] = parseFloat(mut.textContent); }
					}	
					
					for (var tm = 1; tm <= 2; tm++) {
						var id_to_get = TableRows[i].cells[0].textContent+"Judge"+j+"Pref"+tm;
						var pref = document.getElementById(id_to_get);
						if ( pref != null ) {
							TotPref[Cohort_num] = TotPref[Cohort_num] + parseFloat(pref.textContent) ; 
							PrefCt[Cohort_num] = PrefCt[Cohort_num] + 1;
							if ( parseFloat(pref.textContent) > WorstPref[Cohort_num] ) { WorstPref[Cohort_num] = parseFloat(pref.textContent) };
//							window.alert("Panel/Judge=" + id_to_get + " Pref=" + parseFloat(pref.textContent) + " TotPref=" + TotPref[Cohort_num] + " PrefCt=" + PrefCt[Cohort_num]);
						}
					}	
				}
			}
			
			var dum_str;
			for (var i = 0; i <= 2; i++) {
				if ( i == 0 ) { dum_str = "Above"; }
				if ( i == 1 ) { dum_str = "At"; }
				if ( i == 2 ) { dum_str = "Below"; }
				dummy = document.getElementById("Avg"+dum_str);
				dummy.textContent=parseFloat(TotPref[i]/PrefCt[i]).toFixed(1);
				dummy = document.getElementById("Worst"+dum_str);
				dummy.textContent=WorstPref[i].toFixed(1);
				dummy = document.getElementById("AvgMut"+dum_str);
				dummy.textContent=parseFloat(TotMut[i]/MutCt[i]).toFixed(1);
				dummy = document.getElementById("WorstMut"+dum_str);
				dummy.textContent=WorstMut[i].toFixed(1);
			}

		}
		
	</script>

		<h2>STA Judge Placement (Gary Larson) MPJ Settings for <% $event->name %> <% $round->label %> (<% $round->name %>) </h2>
		<form action="debate_judge_assign_sta.mhtml" method="post">
		<input type="hidden" value="<% $round_id %>" name="round_id">
		<table cellpadding="0" cellspacing="1" >
			<caption><h4>Weights</h4></caption>
			<tr>
				<td>
					Preference per judge
					<input type="number" step="0.1" class="smaller" min=0 max=99 size=4  name="pref_wt" value="<% $pref_wt %>">
				</td>
				<td>
					Preference per panel
					<input type="number" step="0.1" class="smaller" min=0 max=99 size=4  name="pref_wt_panel" value="<% $pref_wt_panel %>">
				</td>

			</tr>
			<tr>
				<td>
					Mutuality per judge
					<input type="number" step="0.1" class="smaller" min=0 max=99 size=4  name="mut_wt" value="<% $mut_wt %>">
				</td>
				<td>
					Mutuality per panel
					<input type="number" step="0.1" class="smaller" min=0 max=99 size=4  name="mut_wt_panel" value="<% $mut_wt_panel %>">
				</td>

			</tr>
			<tr>
				<td colspan="2">
					Remaining Pref
					<input type="number" step="0.1" class="smaller" min=0 max=99 size=4  name="pref_left" value="<% $pref_left %>">
				</td>
			</tr>
		</table>
		<table>	
			<caption>
				<h4>Constraints</h4>
			</caption>
			<tr>
				<td colspan="3">
					Max losses a team can have and still clear (break line):
					<input type="number" class="smaller" min=0 max=99 size=4  name="break_line" value="<% $break_line %>">
				</td>
			</tr>
			<tr>
				<td>
					ABOVE the break line
				</td>
				<td>
					Max Preference
					<input type="number" class="smaller" min=0 max=99 size=4  name="max_pref_above" value="<% $max_pref{'above'} %>">
				</td>
				<td>
					Max Mutuality
					<input type="number" class="smaller" min=0 max=99 size=4  name="max_mut_above" value="<% $max_mut{'above'} %>">
				</td>

			</tr>
			<tr>
				<td>
					AT the break line
				</td>
				<td>
					Max Preference
					<input type="number" class="smaller" min=0 max=99 size=4  name="max_pref_at" value="<% $max_pref{'at'} %>">
				</td>
				<td>
					Max Mutuality
					<input type="number" class="smaller" min=0 max=99 size=4  name="max_mut_at" value="<% $max_mut{'at'} %>">
				</td>

			</tr>
			<tr>
				<td>
					BELOW the break line
				</td>
				<td>
					Max Preference
					<input type="number" class="smaller" min=0 max=99 size=4  name="max_pref_below" value="<% $max_pref{'below'} %>">
				</td>
				<td>
					Max Mutuality
					<input type="number" class="smaller" min=0 max=99 size=4  name="max_mut_below" value="<% $max_mut{'below'} %>">
				</td>

			</tr>


			</tr>

		</table>
		
		<div class="liblrow rightalign">
			<input type="submit" value="Place judges with these settings">
			</form>
		</div>
		
		<table>	
			<caption>
				<h4>Diagnostics</h4>
			</caption>
			<tr>
				<td>Scheme</td>
				<td colspan="4" align="center">ABOVE break</td>
				<td colspan="4" align="center">AT break</td>
				<td colspan="4" align="center">BELOW break</td>								
				<td>Rounds Lost</td>
				<td>Avg Pref Remaining</td>
			</tr>
			<tr>
				<td></td>
				<td>Avg Pref</td>
				<td>Worst Pref</td>
				<td>Avg Mut</td>
				<td>Worst Mut</td>												
				<td>Avg Pref</td>
				<td>Worst Pref</td>
				<td>Avg Mut</td>
				<td>Worst Mut</td>												
				<td>Avg Pref</td>
				<td>Worst Pref</td>
				<td>Avg Mut</td>
				<td>Worst Mut</td>												
				<td></td><td></td>
			</tr>
			<tr>
				<td>Saved Pairings</td>
				<td><% sprintf("%.1f", $avg_pref[1]) %></td>
				<td><% sprintf("%.1f", $worst_pref[1]) %></td>
				<td><% sprintf("%.1f", $avg_mut[1]) %></td>
				<td><% sprintf("%.1f", $worst_mut[1]) %></td>
				<td><% sprintf("%.1f", $avg_pref[2]) %></td>
				<td><% sprintf("%.1f", $worst_pref[2]) %></td>
				<td><% sprintf("%.1f", $avg_mut[2]) %></td>
				<td><% sprintf("%.1f", $worst_mut[2]) %></td>
				<td><% sprintf("%.1f", $avg_pref[3]) %></td>
				<td><% sprintf("%.1f", $worst_pref[3]) %></td>
				<td><% sprintf("%.1f", $avg_mut[3]) %></td>
				<td><% sprintf("%.1f", $worst_mut[3]) %></td>
				<td><% $lost_rounds_current %></td>
				<td><% sprintf("%.1f", $tot_pref/$tot_rds) %></td>

			</tr>
			<tr>
				<td>Pairings Below</td>
				<td id="AvgAbove"></td>
				<td id="WorstAbove"></td>
				<td id="AvgMutAbove"></td>
				<td id="WorstMutAbove"></td>				
				<td id="AvgAt"></td>
				<td id="WorstAt"></td>
				<td id="AvgMutAt"></td>
				<td id="WorstMutAt"></td>				
				<td id="AvgBelow"></td>
				<td id="WorstBelow"></td>
				<td id="AvgMutBelow"></td>
				<td id="WorstMutBelow"></td>				
				<td id="NewRdsLost"></td>				
				<td id="NewPrefLeft"></td>								
			</tr>
		</table>


		<table id="current_pairing" >
			<caption>
				<span><h4>Current Pairings</h4> <a onclick='current_diagnostics(1)' >Run Diagnostics on Pairings Below</a></span>
			</caption>
		<tr>
		<td>panel</td>
		<td>aff ID</td>
		<td>aff name</td>
		<td>neg ID</td>
		<td>neg name</td>
%		my $n_judges = 1;
%		for (my $i=1; $i <= $n_judges; $i++) {
 		  <td>Judge<% $i %> ID</td>
   		  <td>Judge<% $i %> Name</td>
   		  <td>Judge<% $i %>Pref1</td>
     		  <td>Judge<% $i %>Pref2</td>
   		  <td>Judge<% $i %> Mut</td>		  
%		}
		<td>Panel Avg</td>
		<td>Panel Balance</td>
		<td>Cohort</td>
		</tr>
%		foreach my $panel (@panels) {
			<tr>
			<td><% $panel->id %></td>	
%			my $co;	my $pan_tot; my $pan_ct; my $pan_bal; my $ctr;		
%			my @ballots = Tab::Ballot->search( panel => $panel->id);
%				@ballots = sort {$a->side cmp $b->side} @ballots; 
%				foreach my $ballot (@ballots) {
%				if ( $break_line ==  $entry_losses{$ballot->entry} ) { $co = 2; }
%				if ( $break_line >  $entry_losses{$ballot->entry} and ($co == 0 or $co == 1) ) { $co = 1; }
%				if ( $break_line <  $entry_losses{$ballot->entry} and ($co == 0 or $co == 3) ) { $co = 3; }

				<td><% $ballot->entry %></td>
				<td><% $entry_code{$ballot->entry} %> <% $entry_wins{$ballot->entry} %>-<% $entry_losses{$ballot->entry} %></td>
%				}			
%				foreach my $ballot (@ballots) {
%					if ($ballot->side == 1) {
%					$ctr++;	
					<td id="<% $panel %>Judge<% $ ctr %>ID"><% $ballot->judge %></td> <td><% $judge{$ballot->judge}{'name'} %> <% $pref_record{$ballot->judge."-".$panel->id} %></td>
%					my ($pref1, $pref2) = prefdata( $pref_record{$ballot->judge."-".$panel->id} ) ;
					<td id="<% $panel %>Judge<% $ ctr %>Pref1"><% $pref1 %></td><td id="<% $panel %>Judge<% $ ctr %>Pref2"><% $pref2 %></td>
%					$pan_tot += $pref1; $pan_tot += $pref2; $pan_ct += 2;
%					my $mut = abs($pref1 - $pref2); $pan_bal = $pan_bal + ($pref1 - $pref2);
%					$mut = sprintf("%.1f", $mut);
					<td id="<% $panel %>Judge<% $ ctr %>Mut"><% $mut %></td>
%					}											
%				}
				<td>
%				if ($pan_ct) { printf("%.1f", $pan_tot/$pan_ct) ; }
				</td>
				<td>
%				printf("%.1f", $pan_bal);
				</td>
				<td id="<% $panel %>Cohort"><% $cohort[$co] %></td>			

%		}
		</table>

		<table id="judge_use">
			<caption>
			Judge Use Situation <a onclick='judge_diagnostics(1)' >Run Diagnostics on Judge Data Below</a>
			</caption>
			<tr>
				<td>ID</td>			
				<td>Judge</td>
				<td>Avg Ratingt</td>
				<td>Obligation</td>
				<td>Available for Current RD</td>
				<td>Saved: Judged so far</td>				
				<td>Saved: Oblig Left</td>								
				<td>Saved: Future Possible</td>
				<td>Saved: Assigned</td>				
				<td>Display: Assigned</td>
				<td>Display: Oblig Left</td>
				<td>Display: Lost</td>				
			</tr>
%		foreach my $judges (@judge_ref) {
%				my $key = $judges->id;
			<tr>
				<td><% $key %></td>
				<td><% $judge{$judges->id}{'name'} %></td>
				<td><% $judge{$judges->id}{'avg_pref'} %></td>				
				<td><% ${$judge_hash}{$key}{'oblig'} %></td>
				<td><% ${$judge_hash}{$key}{'avail_current'} %></td>				
				<td><% ${$judge_hash}{$key}{'judged_already'} %></td>
				<td><% ${$judge_hash}{$key}{'oblig'} - ${$judge_hash}{$key}{'judged_already'} %></td>
				<td><% ${$judge_hash}{$key}{'future_possible'} %></td>				
				<td>
%				if ( ${$judge_hash}{$key}{'in_round'} ) { print("1") } else { print("0"); }
				</td>								
				<td id="<% $key %>DisplayAssigned">0</td>
				<td id="<% $key %>DisplayObligLeft">0</td>
				<td id="<% $key %>DisplayLost">0</td>												
			</tr>
%			}

		</table>

%		$end = time(); 
		Total time after tables rendered: <% printf("%.2f\n", $end - $start) %>

	</div>

