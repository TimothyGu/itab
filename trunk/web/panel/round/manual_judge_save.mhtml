<%args>
	$judge_id
	$panel_id
	$round_id
</%args>
<%init>

	my ($judgeid, $flight) = split(/\_/, $judge_id);

	Tab::Panel->set_sql( count_judges => "
		select panel.id, count(distinct ballot.judge) as judgenum
		from ballot, ballot mine, panel
		where panel.round = ? 
		and panel.flight = ?
		and panel.id = mine.panel
		and mine.judge = ? 
		and ballot.panel = panel.id
	");

	my $panel = Tab::Panel->search_count_judges($round_id, $flight, $judgeid)->first;

	if ($panel) { 

		if ($panel->judgenum == 1) { 
			Tab::Ballot->set_sql( erase_judge => " update ballot set judge = 0 where panel = ? ");
			Tab::Ballot->sql_erase_judge->execute($panel->id);
		} else { 
			Tab::Ballot->set_sql( erase_judge => "delete from ballot where panel = ? and judge = ?");
			Tab::Ballot->sql_erase_judge->execute($panel->id, $judgeid);
		}

	}

	unless ($panel_id eq "out") { 

		my ($type, $panelid) = split(/\_/, $panel_id);

		my $panel = Tab::Panel->retrieve($panelid);

		if ($type eq "chair") { 
			$m->comp("/funclib/panel_judgeadd.mas", panel => $panel, judge_id => $judgeid, chair => 1);
		} else { 
			$m->comp("/funclib/panel_judgeadd.mas", panel => $panel, judge_id => $judgeid);
		}

	}

	$m->comp("/funclib/panel_dedupe.mas", panel => $panel);

	return;

</%init>
