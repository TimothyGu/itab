<%args>
	$round_id
	$bracket => undef
	$entries_hash_ref => undef
	$precluded_hash_ref => undef
	$team_to_pair => undef
</%args>
<%init>

	#Works off of 4 basic global hash/arrays; this allows the functions to access the information they need
	#@entries is a global array of all entries in the event; %entries is a hash with record and SOP information in it
	#%precluded stores which teams can't hit each other; %bracket are the teams in the bracket being paired
	
	use POSIX;
	use List::Util 'shuffle';
	use Time::HiRes qw( time );
	
	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;
	my $oddround=1;
	if (int($round->name/2) == $round->name/2) { $oddround= 0 };
#	print "Odd round marker:".$oddround."<br>";
	my $start = time(); 
	
#	This ALWAYS fires on page reload, so I'm bagging it for now		
#	unless ($entries_hash_ref) {
#		print "getting the hash references<br>";
#		($entries_hash_ref, $precluded_hash_ref) = $m->comp("/funclib/make_pairing_hash.mas", round_id => $round->id);			
#	}

	($entries_hash_ref, $precluded_hash_ref) = $m->comp("/funclib/make_pairing_hash.mas", round_id => $round->id);			
	my %entries = %{$entries_hash_ref};
	my %precluded = %{$precluded_hash_ref};
	
	my $end = time();
#	print "hash setup time:  "; printf("%.2f\n", $end - $start); print "<br>";
	
#	my $nteams = keys %entries;
#	print "n entries from hash:".$nteams."<br>";
#	my $dummy = keys %precluded;
#	print "n preclusions from hash:".$dummy."<br>";
		
#	$end = time();
#	print "Current round setup time:  "; printf("%.2f\n", $end - $start); print "<br>";
	
	sub hasconflict {

		my ($team1, $team2, %precluded_ref) = @_;	
		
		my $returnvalue = 0;

		if ($precluded_ref{$team1}{$team2} == 1) { $returnvalue = 1; }

		if ($precluded_ref{$team2}{$team1} == 1) { $returnvalue = 1; }
		
		return $returnvalue;

	}

#	Declare the variables to mark the number of teams in the bracket

	my $aff_teams_in_bracket = 0;
	my $neg_teams_in_bracket = 0;

#	Count paired and unpaired teams in the bracket

	my $paired_teams = 0;
	my $unpaired_teams = 0;

	foreach my $key (keys %entries) {
		if ( ($entries{$key}{'placement'} == $bracket or $bracket == -1) and $entries{$key}{'opponent'} != 0 ) { $paired_teams++; }
		if ( ($entries{$key}{'placement'} == $bracket or $bracket == -1) and $entries{$key}{'opponent'} == 0 ) { $unpaired_teams++; }
	}
			
</%init>

<div class="left huge" display="table" >

	<h4>Round <% $round->name %> PAIRING TABLE: <% $bracket %> win bracket</h4> 
%	if ($team_to_pair > 0) {
		<table><tr>
%		print "<td>Find an opponent for: <strong>".$entries{$team_to_pair}{'code'}."</strong></td>" ;
		<td><a class="plain fullblock padless" href="manual_pair_debate?round_id=<% $round_id %>&bracket=<% $bracket %>">
			Clear this team from opponent placement
		</a></td>
		</tr></table><br>
%	} else {
%		$m->print("Click the name of a team in the table below to find a match for theam.<br><br>") ;
%	}

	
	<& /funclib/tablesorter.mas, table => "affbracket" &> 
	
	<table cellpadding="3" id="affbracket" class="tablesorter">
	
		<thead>
%			if ($oddround == 0) {		
			<caption>Affirmative Bracket</caption>
%			} 		
			<tr class="dkgreen">
				<th class="smaller">Code</th>
				<th class="smaller">Wins</th>
				<th class="smaller">Seed</th>
				<th class="smaller">Oppseed</th>
				<th class="smaller">SOP</th>
				<th class="smaller">Side due</th>
				<th class="smaller">Bracket</th>
				<th class="smaller">Opponent</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
			
				<tbody style="font-size: 90%">
		
%		foreach my $key (sort {$entries{$a}->{'SOP'} <=> $entries{$b}->{'SOP'}} keys(%entries)) {
%		if ($key and $key > -1 and ($entries{$key}{'placement'} == $bracket or $bracket == -1) and ($entries{$key}{sidedue} == 1 or $oddround == 1) ) {
		<tr>
%		$aff_teams_in_bracket++;		
%		my $bgcolor = "";
%		if (hasconflict($team_to_pair, $key, %precluded) == 1 )	{ $bgcolor = "bgcolor='red'"; }		
%		if ($team_to_pair == $key )	{ $bgcolor = "bgcolor='lightskyblue'"; }		
			<td <% $bgcolor %>>
				<a class="plain fullblock padless" href="manual_pair_debate?round_id=<% $round_id %>&team_to_pair=<% $key %>&bracket=<% $bracket %>">
					<% $entries{$key}{'code'} %>
				</a>
			</td>
			<td><% $entries{$key}{'wins'} %></td>
			<td><% $entries{$key}{'seed'} %></td>		
			<td><% sprintf("%.1f", $entries{$key}{'oppseed'}) %></td>
			<td><% sprintf("%.1f", $entries{$key}{'SOP'}) %></td>		
			<td><% $entries{$key}{'sidedue'} %></td>		
			<td><% $entries{$key}{'placement'} %></td>		
%			if ( $entries{$key}{'opponent'} > 0 ) {
				<td><% $entries{$entries{$key}{'opponent'}}{'code'} %></td>		
%				; }			
%			if ( $entries{$key}{'opponent'} == 0 ) {
				<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="save_pairing.mas?round_id=<% $round_id %>&team1=<% $key %>&wins1=<% $entries{$key}{'wins'} %>&seed1=<% $entries{$key}{'wins'} %>&team2=<% $team_to_pair %>&wins2=<% $entries{$team_to_pair}{'wins'} %>&seed2=<% $entries{$team_to_pair}{'seed'} %>&bracket_to_return=<% $bracket %>">
					Pair vs. <% $entries{$team_to_pair}{'code'} %>
				</a>
				</td>		
				<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="save_pairing.mas?round_id=<% $round_id %>&team1=<% $key %>&wins1=<% $entries{$key}{'wins'} %>&seed1=<% $entries{$key}{'wins'} %>&team2=-1&wins2=0&seed2=0&bracket_to_return=<% $bracket %>">
					Assign Bye
				</a>
				</td>
%				; }
%			if ( $entries{$key}{'opponent'} == -1 ) {
				<td>BYE</td>		
%				; }				
			<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="pullup.mas?round_id=<% $round_id %>&bracket=<% $bracket %>&team=<% $key %>&todo=DOWN">
					Pull Down
				</a>
			</td>		

%			; }

		</tr>
%		}
				</tbody>
				
	</table>

%	if ($oddround != 1) {
	
	<& /funclib/tablesorter.mas, table => "negbracket" &> 
	
	<table cellpadding="3" id="negbracket" class="tablesorter">
		<caption>Negative Bracket</caption>	
		<thead>
			<tr class="dkgreen">
				<th class="smaller">Code</th>
				<th class="smaller">Wins</th>
				<th class="smaller">Seed</th>
				<th class="smaller">Oppseed</th>
				<th class="smaller">SOP</th>
				<th class="smaller">Side due</th>
				<th class="smaller">Bracket</th>
				<th class="smaller">Opponent</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
			
				<tbody style="font-size: 90%">
				
%		foreach my $key (sort {$entries{$a}->{'SOP'} <=> $entries{$b}->{'SOP'}} keys(%entries)) {
%		if ($key and $key > -1 and ($entries{$key}{'placement'} == $bracket or $bracket == -1) and $entries{$key}{sidedue} == 2 ) {

		<tr>

%		my $bgcolor = "";
%		if (hasconflict($team_to_pair, $key, %precluded) == 1 )	{ $bgcolor = "bgcolor='red'"; }		
%		if ($team_to_pair == $key )	{ $bgcolor = "bgcolor='lightskyblue'"; }		
%			$neg_teams_in_bracket++;
			<td <% $bgcolor %>>
				<a class="plain fullblock padless" href="manual_pair_debate?round_id=<% $round_id %>&team_to_pair=<% $key %>&bracket=<% $bracket %>">
					<% $entries{$key}{'code'} %>
				</a>
			</td>

			<td><% $entries{$key}{'wins'} %></td>
			<td><% $entries{$key}{'seed'} %></td>		
			<td><% sprintf("%.1f", $entries{$key}{'oppseed'}) %></td>
			<td><% sprintf("%.1f", $entries{$key}{'SOP'}) %></td>		
			<td><% $entries{$key}{'sidedue'} %></td>		
			<td><% $entries{$key}{'placement'} %></td>		
%			if ( $entries{$key}{'opponent'} > 0 ) {
				<td><% $entries{$entries{$key}{'opponent'}}{'code'} %></td>		
%				; }			
%			if ( $entries{$key}{'opponent'} == 0 ) {
				<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="save_pairing.mas?round_id=<% $round_id %>&team1=<% $key %>&wins1=<% $entries{$key}{'wins'} %>&seed1=<% $entries{$key}{'wins'} %>&team2=<% $team_to_pair %>&wins2=<% $entries{$team_to_pair}{'wins'} %>&seed2=<% $entries{$team_to_pair}{'seed'} %>&bracket_to_return=<% $bracket %>">
					Pair vs. <% $entries{$team_to_pair}{'code'} %>
				</a>
				</td>		
				<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="save_pairing.mas?round_id=<% $round_id %>&team1=<% $key %>&wins1=<% $entries{$key}{'wins'} %>&seed1=<% $entries{$key}{'wins'} %>&team2=-1&wins2=0&seed2=0&bracket_to_return=<% $bracket %>">
					Assign Bye
				</a>
				</td>
%				; }
%			if ( $entries{$key}{'opponent'} == -1 ) {
				<td>BYE</td>		
%				; }				
			<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="pullup.mas?round_id=<% $round_id %>&bracket=<% $bracket %>&team=<% $key %>&todo=DOWN">
					Pull Down
				</a>
			</td>		

%			; }

		</tr>
%		}
				</tbody>
				
	</table>

%	} #don't show neg table in an odd round
	
	<br style="clear: left;" />
	
<br>

%	if ( $bracket > -1 ) {
	<h4>UNPAIRED teams in other brackets</h4> 
	<& /funclib/tablesorter.mas, table => "unpaired" &> 
	<table cellpadding="3" width="100%" id="unpaired" class="tablesorter">
		<thead>
			<tr class="dkgreen">
				<th class="smaller">Code</th>
				<th class="smaller">Wins</th>
				<th class="smaller">Seed</th>
				<th class="smaller">Oppseed</th>
				<th class="smaller">SOP</th>
				<th class="smaller">Side due</th>
				<th class="smaller">Bracket</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
		<tbody style="font-size: 90%">
%		foreach my $key (sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}} keys(%entries)) {
%		if ($key and $key > -1 and $entries{$key}{'opponent'} == 0 and $entries{$key}{'placement'} != $bracket ) {
		<tr>
%			my $bgcolor = "";
%			if (hasconflict($team_to_pair, $key, %precluded) == 1 )	{ $bgcolor = "bgcolor='red'"; }		
			<td <% $bgcolor %>><% $entries{$key}{'code'} %></td>
			<td><% $entries{$key}{'wins'} %></td>
			<td><% $entries{$key}{'seed'} %></td>		
			<td><% sprintf("%.1f", $entries{$key}{'oppseed'}) %></td>
			<td><% sprintf("%.1f", $entries{$key}{'SOP'}) %></td>		
			<td><% $entries{$key}{'sidedue'} %></td>		
			<td><% $entries{$key}{'placement'} %></td>		
			<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="pullup.mas?round_id=<% $round_id %>&bracket=<% $bracket %>&team=<% $key %>&todo=UP">
					Pull Up
				</a>
			</td>		
		</tr>
%		}
%	}						#end team loop

		</tbody>
	</table>

% }							#end conditional table

	<h4>Current Pairings</h4> 
	
	<& /funclib/tablesorter.mas, table => "pairings" &> 
	
	<table cellpadding="3" width="100%" id="pairings" class="tablesorter">
	
		<thead>
			<tr class="dkgreen">
				<th class="smaller">Aff</th>
				<th class="smaller">Neg</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
			
		<tbody style="font-size: 90%">
			
%		foreach my $key (sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}} keys(%entries)) {
%		if ($key and $key > -1 and ($entries{$key}{'side'} == 1 or $entries{$key}{'opponent'} == -1) ) {
		<tr>
			<td><% $entries{$key}{'code'} %> (<% $entries{$key}{'wins'} %> wins)</td>
%			if ($entries{$key}{'opponent'} > 0) {			
			<td><% $entries{$entries{$key}{'opponent'}}{'code'} %> (<% $entries{$entries{$key}{'opponent'}}{'wins'} %> wins) </td>		
%			; } elsif (	$entries{$key}{'opponent'} == -1 ) {
			<td>BYE</td>
%			; }					
			<td bgcolor="PaleTurquoise">
				<a class="plain fullblock padless" href="dump_panel.mas?round_id=<% $round_id %>&team1=<% $key %>&team2=<% $entries{$key}{'opponent'} %>&bracket=<% $bracket %>">
					Unpair
				</a>
			</td>
		</tr>
%		}
%	}

			
			</tbody>
			
	</table>


%	$end = time(); print "Total time:  "; printf("%.2f\n", $end - $start); print "<br>";
	
</div>

	<div class="right small">
	
		<div class="sidenote">

			<h4>Current Bracket Info</h4>
%			unless ($bracket) { $bracket = 0; }
			Selected <strong><% $bracket %>-win bracket</strong><br>
%			if ($oddround==1) {			
			Teams in bracket: <% $aff_teams_in_bracket %><br>	
%			} else {
			Aff teams in bracket: <% $aff_teams_in_bracket %><br>	
			Neg teams in bracket: <% $neg_teams_in_bracket %><br>	
%			}
			<% $paired_teams %> paired (including any byes)<br>
			<% $unpaired_teams %> unpaired<br>
			
		</div>

		<div class="sidenote">

			<h4>Load Bracket</h4>
			<form action="manual_pair_debate.mhtml?round_id=<% $round_id %>" method="POST">
				Bracket: <input type="text" name="bracket" size="10" value=<% $bracket %>><br>
				<input type="submit" value="Load Bracket">
			</form>
			<a class="yellow block" href="manual_pair_debate.mhtml?round_id=<% $round_id %>&bracket=-1">Show all</a>
		</div>
		
		<div class="sidenote">

			<h4>Bracket-Wide Changes</h4>

			<a class="yellow block" href="dump_bracket.mas?round_id=<% $round_id %>&bracket_to_pair=<% $bracket %>&from_main=true">Erase pairings in selected bracket</a>
%			if ($bracket != -1) {	
			<a class="yellow block" href="pair_bracket.mas?round_id=<% $round_id %>&bracket_to_pair=<% $bracket %>">Auto Pair selected bracket (SAVE existing pairings)</a>
			<a class="yellow block" href="pair_bracket.mas?round_id=<% $round_id %>&bracket_to_pair=<% $bracket %>&delete_existing=Seaver">Auto Pair selected bracket (DELETE existing pairings)</a>
			<a class="yellow block" href="honors_description.mhtml">Collapse all teams up 1 bracket (inactive)</a>
			<a class="yellow block" href="honors_description.mhtml">Collapse all teams down 1 bracket (inactive)</a>
%			}			

		</div>

		<div class="sidenote">

			<h4>Round-Wide Changes</h4>

			<a class="yellow block" href="reset_bracket.mas?round_id=<% $round_id %>">Reset brackets to win totals</a>
			<a class="yellow block" href="/funclib/round_dump.mas?round=<% $round_id %>">Dump Whole Round (inactive)</a>
%			if ($oddround == 1) {			
			<a class="yellow block" href="snake_sides.mas?round_id=<% $round_id %>">Assign sides in odd-numbered round (MUST do before posting)</a>
%			}			
			<a class="yellow block" href="index.mhtml">Exit and assign rooms (inactive) </a>
			<a class="yellow block" href="index.mhtml">Exit and assign judges (inactive)</a>

		</div>

	</div>
