<%args>
	$round_id
	$bracket => undef
	$entries_hash_ref => undef
	$precluded_hash_ref => undef
	$team_to_pair => undef
</%args>
<%init>

	#Works off of 4 basic global hash/arrays; this allows the functions to access the information they need
	#@entries is a global array of all entries in the event; %entries is a hash with record and SOP information in it
	#%precluded stores which teams can't hit each other; %bracket are the teams in the bracket being paired
	
	use POSIX;
	use List::Util 'shuffle';
	use Time::HiRes qw( time );
	
	our $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;
	our $oddround=1;
	if (int($round->name/2) == $round->name/2) { $oddround= 0 };
#	print "Odd round marker:".$oddround."<br>";
	my $start = time(); 
	
#	This ALWAYS fires on page reload, so I'm bagging it for now		
#	unless ($entries_hash_ref) {
#		print "getting the hash references<br>";
#		($entries_hash_ref, $precluded_hash_ref) = $m->comp("/funclib/make_pairing_hash.mas", round_id => $round->id);			
#	}

	($entries_hash_ref, $precluded_hash_ref) = $m->comp("/funclib/make_pairing_hash.mas", round_id => $round->id);			
	our %entries = %{$entries_hash_ref};
	our %precluded = %{$precluded_hash_ref};
	
	my $end = time();
#	print "hash setup time:  "; printf("%.2f\n", $end - $start); print "<br>";
	
#	my $nteams = keys %entries;
#	print "n entries from hash:".$nteams."<br>";
#	my $dummy = keys %precluded;
#	print "n preclusions from hash:".$dummy."<br>";
		
#LOAD CURRENT PAIRINGS AND STORE THEM IN THE HASH

	Tab::Ballot->columns(TEMP => qw/bye/);
	Tab::Ballot->set_sql(pull_current_ballots => "
		select ballot.entry, ballot.panel, ballot.side, panel.bye as bye
		from ballot, panel, round
		where ballot.panel=panel.id
		and panel.round=round.id
		and round.id=$round_id
		order by panel, side, entry
	");
	
	my @pairings = Tab::Ballot->search_pull_current_ballots;

	my $team1;
	my $team2;
	my $panel;
	my $bye;
	
	foreach my $pairing (@pairings) {

		if ( $panel > 0 and $panel != $pairing->panel ) {
			if ( $bye == 1 and $team1>0 ) { $entries{$team1}{'opponent'}= -1 ; }
			if ( $bye == 1 and $team2>0 ) { $entries{$team2}{'opponent'}= -1 ; }
			if ( $bye == 0 ) { $entries{$team1}{'opponent'}=$team2; $entries{$team2}{'opponent'}=$team1; }
			$team1 = 0; $team2 = 0;	
					
		}

		if ($team1 == 0 and $team2 == 0) { 
			$team1 = $pairing->entry; 
		} elsif ( $team1 > 0 and $team2 == 0 ) {
			$team2 = $pairing->entry;
		}

		$entries{$pairing->entry}{'side'} = $pairing->side;
		$panel = $pairing->panel;
		$bye = $pairing->bye;

	}
	
	#add the last pairing too
	if ( $bye == 1 and $team1 ) { $entries{$team1}{'opponent'}= -1 ; }
	if ( $bye == 1 and $team2 ) { $entries{$team2}{'opponent'}= -1 ; }
	if ( $bye == 0 ) { $entries{$team1}{'opponent'}=$team2; $entries{$team2}{'opponent'}=$team1; }
			
#	$end = time();
#	print "Current round setup time:  "; printf("%.2f\n", $end - $start); print "<br>";
	
	sub hasconflict {

		my ($team1, $team2) = @_;	
		my $returnvalue = 0;

		if ($precluded{$team1}{$team2} == 1) { $returnvalue = 1; }

		if ($precluded{$team2}{$team1} == 1) { $returnvalue = 1; }
		
		return $returnvalue;

	}

</%init>

<div class="left huge">

	<h4>PAIRING TABLE: <% $bracket %> win bracket</h4> 
%	if ($team_to_pair > 0) {
		<table><tr>
%		print "<td>Find an opponent for: <strong>".$entries{$team_to_pair}{'code'}."</strong></td>" ;
		<td><a class="plain fullblock padless" href="manual_pair_debate?round_id=<% $round_id %>&bracket=<% $bracket %>">
			Clear this team from opponent placement
		</a></td>
		</tr></table><br>
%	} else {
%		$m->print("Click the name of a team in the table below to find a match for theam.<br><br>") ;
%	}

	  
	<& /funclib/tablesorter.mas, table => "bracket" &> 
	
	<table cellpadding="3" width="100%" id="bracket" class="tablesorter">
	
		<thead>
			<tr class="dkgreen">
				<th class="smaller">Code</th>
				<th class="smaller">Wins</th>
				<th class="smaller">Seed</th>
				<th class="smaller">Oppseed</th>
				<th class="smaller">SOP</th>
				<th class="smaller">Side due</th>
				<th class="smaller">Bracket</th>
				<th class="smaller">Opponent</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
			
				<tbody style="font-size: 90%">
				
%		foreach my $key (sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}} keys(%entries)) {
%		if ($key and $key > -1 and ($entries{$key}{'placement'} == $bracket or $bracket == -1) ) {
		<tr>
%		my $bgcolor = "";
%		if (hasconflict($team_to_pair, $key) == 1 )	{ $bgcolor = "bgcolor='red'"; }		
%		if ($team_to_pair == $key )	{ $bgcolor = "bgcolor='lightskyblue'"; }		
			<td <% $bgcolor %>>
				<a class="plain fullblock padless" href="manual_pair_debate?round_id=<% $round_id %>&team_to_pair=<% $key %>&bracket=<% $bracket %>">
					<% $entries{$key}{'code'} %>
				</a>
			</td>
			<td><% $entries{$key}{'wins'} %></td>
			<td><% $entries{$key}{'seed'} %></td>		
			<td><% sprintf("%.1f", $entries{$key}{'oppseed'}) %></td>
			<td><% sprintf("%.1f", $entries{$key}{'SOP'}) %></td>		
			<td><% $entries{$key}{'sidedue'} %></td>		
			<td><% $entries{$key}{'placement'} %></td>		
%			if ( $entries{$key}{'opponent'} > 0 ) {
				<td><% $entries{$entries{$key}{'opponent'}}{'code'} %></td>		
%				; }			
%			if ( $entries{$key}{'opponent'} == 0 ) {
				<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="save_pairing.mas?round_id=<% $round_id %>&team1=<% $key %>&wins1=<% $entries{$key}{'wins'} %>&seed1=<% $entries{$key}{'wins'} %>&team2=<% $team_to_pair %>&wins2=<% $entries{$team_to_pair}{'wins'} %>&seed2=<% $entries{$team_to_pair}{'seed'} %>">
					Pair vs. <% $entries{$team_to_pair}{'code'} %>
				</a>
				</td>		
				<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="save_pairing.mas?round_id=<% $round_id %>&team1=<% $key %>&wins1=<% $entries{$key}{'wins'} %>&seed1=<% $entries{$key}{'wins'} %>&team2=-1&wins2=0&seed2=0">
					Assign Bye
				</a>
				</td>
%				; }
%			if ( $entries{$key}{'opponent'} == -1 ) {
				<td>BYE</td>		
%				; }				
			<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="pullup.mas?round_id=<% $round_id %>&bracket=<% $bracket %>&team=<% $key %>&todo=DOWN">
					Pull Up
				</a>
			</td>		

%			; }

		</tr>
%		}
				</tbody>
				
	</table>

%	if ( $bracket > -1 ) {
	<h4>UNPAIRED teams in other brackets</h4> 
	<& /funclib/tablesorter.mas, table => "unpaired" &> 
	<table cellpadding="3" width="100%" id="unpaired" class="tablesorter">
		<thead>
			<tr class="dkgreen">
				<th class="smaller">Code</th>
				<th class="smaller">Wins</th>
				<th class="smaller">Seed</th>
				<th class="smaller">Oppseed</th>
				<th class="smaller">SOP</th>
				<th class="smaller">Side due</th>
				<th class="smaller">Bracket</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
		<tbody style="font-size: 90%">
%		foreach my $key (sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}} keys(%entries)) {
%		if ($key and $key > -1 and $entries{$key}{'opponent'} == 0 ) {
		<tr>
%			my $bgcolor = "";
%			if (hasconflict($team_to_pair, $key) == 1 )	{ $bgcolor = "bgcolor='red'"; }		
			<td <% $bgcolor %>><% $entries{$key}{'code'} %></td>
			<td><% $entries{$key}{'wins'} %></td>
			<td><% $entries{$key}{'seed'} %></td>		
			<td><% sprintf("%.1f", $entries{$key}{'oppseed'}) %></td>
			<td><% sprintf("%.1f", $entries{$key}{'SOP'}) %></td>		
			<td><% $entries{$key}{'sidedue'} %></td>		
			<td><% $entries{$key}{'placement'} %></td>		
			<td bgcolor="lawngreen">
				<a class="plain fullblock padless" href="pullup.mas?round_id=<% $round_id %>&bracket=<% $bracket %>&team=<% $key %>&todo=UP">
					Pull Up
				</a>
			</td>		
		</tr>
%		}
%	}						#end team loop

		</tbody>
	</table>

% }							#end conditional table

	<h4>Current Pairings</h4> 
	
	<& /funclib/tablesorter.mas, table => "pairings" &> 
	
	<table cellpadding="3" width="100%" id="pairings" class="tablesorter">
	
		<thead>
			<tr class="dkgreen">
				<th class="smaller">Aff</th>
				<th class="smaller">Neg</th>
				<th class="smaller">Action</th>
			</tr>
		</thead>
			
		<tbody style="font-size: 90%">
			
%		foreach my $key (sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}} keys(%entries)) {
%		if ($key and $key > -1 and ($entries{$key}{'side'} == 1 or $entries{$key}{'opponent'} == -1) ) {
		<tr>
			<td><% $entries{$key}{'code'} %> (<% $entries{$key}{'wins'} %> wins)</td>
%			if ($entries{$key}{'opponent'} > 0) {			
			<td><% $entries{$entries{$key}{'opponent'}}{'code'} %> (<% $entries{$entries{$key}{'opponent'}}{'wins'} %> wins) </td>		
%			; } elsif (	$entries{$key}{'opponent'} == -1 ) {
			<td>BYE</td>
%			; }					
			<td bgcolor="PaleTurquoise">
				<a class="plain fullblock padless" href="dump_panel.mas?round_id=<% $round_id %>&team1=<% $key %>&team2=<% $entries{$key}{'opponent'} %>">
					Unpair
				</a>
			</td>
		</tr>
%		}
%	}

			
			</tbody>
			
	</table>


%	$end = time(); print "Total time:  "; printf("%.2f\n", $end - $start); print "<br>";
	
</div>

	<div class="right small">

		<div class="sidenote">

			<h4>Load Bracket</h4>
			<form action="manual_pair_debate.mhtml?round_id=<% $round_id %>" method="POST">
				Bracket: <input type="text" name="bracket" size="10" value=<% $bracket %>><br>
				<input type="submit" value="Load Bracket">
			</form>
			<a class="yellow block" href="manual_pair_debate.mhtml?round_id=<% $round_id %>&bracket=-1">Show all</a>
		</div>
		
		<div class="sidenote">

			<h4>Havoc to Wreak</h4>

			<a class="yellow block" href="reset_bracket.mas?round_id=<% $round_id %>">Reset brackets to win totals</a>
			<a class="yellow block" href="honors_description.mhtml">Dump Whole Round</a>
			<a class="yellow block" href="index.mhtml">Assign Rooms</a>
			<a class="yellow block" href="index.mhtml">Assign Judges</a>

		</div>

	</div>
