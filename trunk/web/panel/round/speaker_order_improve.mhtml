<%args>
	$account
	$tourn
	$event_id
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);
	my @rounds = $event->rounds( type => "prelim");

	my @ballots = $m->comp('/funclib/event_ballots.mas', event => $event);

	my %panel_round = map {$_->id => $_->round->id} $m->comp('/funclib/event_panels.mas', event => $event);
	my %speaker_order = map { $_->entry->id."-".$panel_round{$_->panel->id} => $_->speakerorder} @ballots;
	my %entry_ballot = map { $_->entry->id."-".$panel_round{$_->panel->id} => $_ } @ballots;

	foreach my $entry ($event->entries( dropped => 0)) { 

		my ($status, $early, $mid, $late) = $m->comp("/funclib/ncfl_speakers.mas", entry => $entry);

		next if $status eq "OK";

		my @needs;
		my @panels = $m->comp("/funclib/entry_panels.mas", entry => $entry);

		push (@needs, "early") unless $early;
		push (@needs, "mid") unless $mid;
		push (@needs, "late") unless $late;

		NEED:
		foreach my $need (@needs) {

			foreach my $panel (@panels) { 

				next unless $panel->round->type eq "prelim";

				my $order = $speaker_order{$entry->id."-".$panel->round->id};

				# Don't move the entry if it would just create other problems
				next if ($early == 1) && $order < 3;
				next if ($mid == 1) && $order > 2 && $order < 6;
				next if ($late == 1) && $order > 5;

				my ($other, $other_order) = &find_other($entry,$panel,$need);

				if ($other) { 

					my $eb = $entry_ballot{$entry->id."-".$panel->round->id};
					my $ob = $entry_ballot{$other."-".$panel->round->id};

					$eb->speakerorder($other_order);
					$eb->update;

					$ob->speakerorder($order);
					$ob->update;
					
					next NEED;
				}
			}
		}
	}

	$m->redirect("speaker_order.mhtml?event_id=$event_id");

	sub find_other { 

		my ($entry, $panel, $need) = @_;

		my %others_speaks = map {$_->entry->id => $_->speakerorder} $panel->ballots;

		OTHER:
		foreach my $other (keys %others_speaks) { 

			next if $other == $entry->id;
		
			my $other_order = $others_speaks{$other};
		
			if ($need eq "early") {
				next OTHER if $other_order > 2;	
				my ($other_status, $other_early, $other_mid, $other_late) = $m->comp("/funclib/ncfl_speakers.mas", entry_id => $other);
				next OTHER if $other_early < 2;
			} 
			
			if ($need eq "mid") {
				next OTHER if $other_order < 2 || $other_order > 5;	
				my ($other_status, $other_early, $other_mid, $other_late) = $m->comp("/funclib/ncfl_speakers.mas", entry_id => $other);
				next OTHER if $other_mid < 2;
			} 
			
			if ($need eq "late") {
				next OTHER if $other_order < 6;	
				my ($other_status, $other_early, $other_mid, $other_late) = $m->comp("/funclib/ncfl_speakers.mas", entry_id => $other);
				next OTHER if $other_late < 2;
			}

			# If we got this far without getting bumped, then we have found
			# the candidate with which the current one should switch.

			return ($other, $other_order);

		}

	}

</%init>
