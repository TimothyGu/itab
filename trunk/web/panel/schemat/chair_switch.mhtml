<%args>
	$tourn
	$judge_id
	$panel_id
	$from => undef
</%args>
<%perl>

	my $judge = Tab::Judge->retrieve($judge_id);
	my $panel = Tab::Panel->retrieve($panel_id);

	my $event = $panel->round->event;

	my $ballot = Tab::Ballot->search( judge => $judge->id, panel => $panel->id)->first;

	Tab::Ballot->set_sql(remove_chairs => "update ballot set chair = 0 where panel = ? and judge = ? and chair = 1");
	Tab::Ballot->set_sql(add_chair => "update ballot set chair = 1 where panel = ? and judge = ? and chair = 0");

	my $msg;

	if ($ballot->chair) { 

		Tab::Ballot->sql_remove_chairs->execute($panel->id, $judge->id);
		$msg = "Chair of panel removed";

	} else { 

		if ($event->type eq "congress") { 


			Tab::Panel->set_sql( by_letter => "select distinct panel.* from panel, round where round.event = ? and round.id = panel.round and panel.letter = ? ");

			my @panels = Tab::Panel->search_by_letter( $event->id, $panel->letter );

			Tab::debuglog("I have found ".scalar @panels." panels with letter ".$panel->letter);

			foreach my $opanel (@panels) { 

				my %judges = map {$_->id => $_} $m->comp("/funclib/panel_judges.mas", panel => $opanel);

				Tab::debuglog("Judge map for ".$judge->id." in panel $opanel is ".$judges{$judge->id});

				unless ($judges{$judge->id}) { 
					$m->comp("judge_add.mhtml", judge_id => $judge->id, panel_id => $opanel->id, tourn => $tourn, return => "ohgodyes");
				}

				Tab::Ballot->sql_add_chair->execute($opanel->id, $judge->id);
			}

			$msg = "Parliamentarian ".$judge->first." ".$judge->last." designated for chamber ".$panel->letter." in ALL ROUNDS";

		} else { 

			Tab::Ballot->sql_add_chair->execute($panel->id, $judge->id);
			$msg = "Chair of panel added";
		}

	}


	$m->redirect("panel_view.mhtml?panel_id=".$panel->id."&msg=$msg");


</%perl>
