<%args>
	$tourn
	$panel_id
	$judge_id => undef
	$code => undef
	$return => undef
</%args>
<%init>

	Tab::Ballot->set_sql( update_ballot => "
		update ballot
		set judge = ?
		where panel = ?
		and judge = 0
	");

	Tab::Ballot->set_sql( make_chair => "
		update ballot
		set chair = 1 
		where judge = ?
		where panel = ?
		and judge = 0
	");

	my $panel = Tab::Panel->retrieve($panel_id);
	my $judge = Tab::Judge->retrieve($judge_id);

	unless ($judge) { 

		my @judges = $m->comp('/funclib/tourn_judges.mas', tourn => $tourn, code => $code) if $code;
		$judge = shift @judges if @judges;

		unless ($judge) {
			my $err = "No judge found with code $code";
			$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=$err");
		}

	}

	my @others = $m->comp("/funclib/panel_judges.mas", panel => $panel);

	if (@others) { 

		my $sample = shift @others;

		my @ballots = Tab::Ballot->search( panel => $panel->id, judge => $sample->id);

		foreach my $ballot (@ballots)  {
			my $new = $ballot->copy;
			$ballot->audit(0);
			$ballot->collected("");
			$ballot->collected_by(0);
			$ballot->cat_id("");
			$ballot->chair("");
			$ballot->judge($judge->id);
			$ballot->update;
		}

	
	} else { 

		Tab::Ballot->sql_update_ballot->execute($judge->id, $panel->id);
		Tab::Ballot->sql_make_chair->execute($judge->id, $panel->id) unless $panel->round->event->type eq "congress";

	}

	my $msg = "Judge ".$judge->first." ".$judge->last." has been added ";

	return if $return;

	$m->redirect("/panel/schemat/panel_view.mhtml?panel_id=$panel_id&msg=$msg");


</%init>

