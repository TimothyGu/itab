<%args>
	$tourn
	$account
	$panel_id
	$judge_id => undef
	$code     => undef
	$return   => undef
	$steal    => undef
</%args>
<%init>

	Tab::Ballot->set_sql( update_ballot => "
		update ballot
		set judge = ?
		where panel = ?
		and judge = 0
	");

	Tab::Ballot->set_sql( make_chair => "
		update ballot
		set chair = 1 
		where judge = ?
		and panel = ?
	");

	my $panel = Tab::Panel->retrieve($panel_id);
	my $judge = Tab::Judge->retrieve($judge_id);

	my $wudc++ if $panel->round->event->type eq "wudc";

	unless ($judge) { 

		my @judges = $m->comp('/funclib/tourn_judges.mas', tourn => $tourn, code => $code) if $code;
		$judge = shift @judges if @judges;

		unless ($judge) {
			my $err = "No judge found with code $code";
			$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=$err");
		}

	}

	Tab::Ballot->set_sql( round_ballots => "
		select distinct ballot.*
		from ballot, panel
		where ballot.judge = ? 
		and ballot.panel = panel.id
		and panel.round = ? 
		and panel.flight = ? 
	");

	my @currents = Tab::Ballot->search_round_ballots( $judge_id, $panel->round->id, $panel->flight );

	my @others = $m->comp("/funclib/panel_judges.mas", panel => $panel);

	if (@others) { 

		my $sample = shift @others;
		my @ballots = Tab::Ballot->search( panel => $panel->id, judge => $sample->id);

		foreach my $ballot (@ballots)  {

			my $new = $ballot->copy;
			$new->audit(0);
			$new->audit(1) if $wudc; 
			$new->collected("");
			$new->collected_by(0);
			$new->account(0);
			$new->cat_id("");
			$new->chair("");
			$new->judge($judge->id);
			$new->update;
		}
	
	} else { 

		Tab::Ballot->sql_update_ballot->execute($judge->id, $panel->id);
		Tab::Ballot->sql_make_chair->execute($judge->id, $panel->id) 
			if ($panel->round->type eq "elim" || $panel->round->type eq "final" || $panel->round->event->type eq "wudc") && $panel->round->event->type ne "congress";
	}

	my $warn;

	if ($steal && @currents) { 

		$warn = "Judge stolen from another debate.";
	
		my @usual = $m->comp("/funclib/panel_judges.mas", panel => $panel);

		foreach my $current (@currents) { 
			$current->judge("0") if scalar @usual == 1;
			$current->update if scalar @usual == 1;
			$current->delete if scalar @usual > 1;
		}
	}

	if ($tourn->setting('track_reg_changes')) { 

		my $regline = $account->first." ".$account->last." (".$account->email.") moved judge ".$judge->code." ".$judge->last." into section ".$panel->letter." round ".$panel->round->realname." of ".$panel->round->event->abbr;

		$regline .= $warn;

		Tab::TournChange->create({
			type => "judge",
			judge => $judge->id,
			tourn => $tourn->id,
			new_panel => $panel->id,
			text => $regline,
			account => $account->id
		});

	}
	

	my $msg = "Judge ".$judge->first." ".$judge->last." has been added. <br />";
	$msg .= $warn;

	return if $return;

	$m->redirect("/panel/schemat/panel_view.mhtml?panel_id=$panel_id&msg=$msg");


</%init>

