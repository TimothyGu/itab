<%args>
	$account
	$tourn
	$entry_id => undef
	$panel_id => undef
	$manual => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $entry = Tab::Entry->retrieve($entry_id);
	my $panel = Tab::Panel->retrieve($panel_id);

	$m->abort unless $entry && $panel;

	my @ballots = $panel->ballots;
	my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);
	my $speaks = (scalar @entries) + 1;

	foreach ($m->comp("/funclib/panel_entries.mas", panel => $panel)) {
		if ($_->id == $entry_id) {
			return;
		}	
	}

	Tab::Ballot->set_sql( rm_ballots => "
		delete ballot.* 
		from ballot, panel
		where ballot.entry = ? 
		and ballot.panel = panel.id
		and panel.round = ? 
	");

	Tab::Panel->set_sql( current => "
		select distinct panel.*
		from panel, ballot
		where panel.round = ? 
		and panel.id = ballot.panel
		and ballot.entry = ? 
	");

	my $old_panel = Tab::Panel->search_current($panel->round->id, $entry->id)->first;

	if (@ballots && $ballots[0]->entry) { 

		Tab::Ballot->sql_rm_ballots->execute( $entry_id, $panel->round->id );

		# Are these ballots without entries? 
		my $alldone;

		BALLOT:
		foreach my $ballot (@ballots) { 
			next BALLOT if $ballot->entry && $ballot->entry->id != 0;
			$ballot->entry($entry->id);
			$ballot->speakerorder($speaks);
			$ballot->update;
			$alldone++;
		}

		unless ($alldone) { 

			my %done_judge = ();

			foreach my $ballot (@ballots) { 

				next if $done_judge{$ballot->judge->id};
				$done_judge{$ballot->judge->id}++;

				my $newb = $ballot->copy;
				$newb->entry($entry->id);
				$newb->collected_by("");
				$newb->collected("");
				$newb->noshow(0);
				$newb->audit(0);
				$newb->speakerorder($speaks);
				$newb->tv(0);
				$newb->update;
			}

		}

	} else { 

		Tab::Ballot->create({
			entry        => $entry->id,
			noshow       => 0,
			judge        => 0,
			chair        => 0,
			audit        => 0,
			tv           => 0,
			speakerorder => $speaks,
			panel        => $panel_id
		});

	}

	my $regline = "Entry ".$entry->code." moved from ".$old_panel->room->name." into ".$panel->room->name." for ".$panel->round->realname." of ".$panel->round->event->abbr if $old_panel;
	$regline = "Entry ".$entry->code." moved into ".$panel->room->name." for ".$panel->round->realname." of ".$panel->round->event->abbr unless $regline;

	my $old_panel_id = $old_panel->id if $old_panel;

	Tab::TournChange->create({
		type      => "move",
		event     => $entry->id,
		tourn     => $panel->round->event->tourn->id,
		new_panel => $panel->id,
		entry     => $entry->id,
		old_panel => $old_panel_id,
		text      => $regline,
		account   => $account->id
	});

	my $msg = "Competitor ".$entry->code." was moved into ".$panel->letter;
	
	$m->redirect("manual_rebalance.mhtml?round_id=".$panel->round->id."&entry_id=$entry_id&new_panel_id=".$panel->id."&msg=$msg") if $manual;

	$m->redirect("entry_edit.mhtml?round_id=".$panel->round->id."&entry_id=$entry_id&msg=$msg");

</%init> 
