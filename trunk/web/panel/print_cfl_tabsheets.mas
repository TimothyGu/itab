<%args>
	$session
	$event_id
	$tourn
</%args>
<%init>
	use POSIX;
	
	my $tourn_id = $tourn->id;
	my @events;
	if ($event_id eq "all") { 
		@events = $m->comp("/funclib/tourn_events.mas", tourn => $tourn);
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	} 

	@events = sort {$a->abbr <=> $b->abbr} @events;

	#Set up the filename and the needed trace files

     my $filename = "cfl-tabsheets-".$session->id;
     my $filepath = $Tab::file_root."/tmp/";
     my $garbage = `rm -f $filepath"."$filename.*`;

     open (TEXOUT, ">$filepath"."$filename.tex");

	print TEXOUT <<'EOF';
\documentclass[10pt]{report}
\usepackage {helvet}
\usepackage {fullpage}
\renewcommand{\familydefault}{\sfdefault}

\begin{document}
\begin{center}
EOF


	foreach my $event (@events) { 

		my @rounds = $event->rounds( type => "prelim");
		@rounds = sort { $a->name <=> $b->name } @rounds;
		my $num_rounds = scalar @rounds;	
		my @entries = Tab::Entry->search( event => $event->id, dropped => 0, {order_by => "code"});
		my $num_pages =  (scalar @entries)/24;

		$num_pages = ceil $num_pages;
		my $page_count = 1;

		print TEXOUT "\\Large ". $event->name ." ". $tourn->name;
		print TEXOUT " Page $page_count of $num_pages \\\\ \n";
		print TEXOUT "\\normalsize -\\\\ \n";
		print TEXOUT "\\begin{tabular*}{1.0\\textwidth}% \n";
		print TEXOUT "{\@{\\extracolsep{\\fill}}|l|l||";

		#How's this for arcane?	
		foreach my $round (@rounds) { print TEXOUT 'c|c||'; }

		print TEXOUT "|c||c|c|c||c|}\n";
		print TEXOUT "\\hline \n";
		print TEXOUT "\\textsf{Code} & \\textsf{Name} &";

		foreach my $round (@rounds) { 
			print TEXOUT "\\textsf{". $round->name ." J1} & "; 
			print TEXOUT "\\textsf{". $round->name ." J2} & "; 
		}

		print TEXOUT "\\textsf{Total}  & \\textsf{R J1} & \\textsf{R J2}  & \\textsf{R J3}  &  \\textsf{Total}  \\\\ \n";
		print TEXOUT "\\hline \n \\hline \n";

		my $comp_count = 1;
	
		foreach my $comp (@entries) { 

			if ($comp_count == 25) {
				$page_count++;
			
				print TEXOUT "\\end{tabular*}\n \\newpage \n";
				print TEXOUT "\\Large ". $event->name ." ". $tourn->name;
				print TEXOUT " Page $page_count of $num_pages \\\\ \n";
				print TEXOUT "\\normalsize -\\\\ \n";
				print TEXOUT "\\begin{tabular*}{1.0\\textwidth}% \n";
				print TEXOUT "{\@{\\extracolsep{\\fill}}|l|l||";

				foreach my $round (@rounds) { print TEXOUT 'c|c||'; }

				print TEXOUT "|c||c|c|c||c|c|c|}\n \\hline";
				print TEXOUT "\\textsf{Code} & \\textsf{Name} &";

				foreach my $round (@rounds) { 
					print TEXOUT "\\textsf{". $round->name ." J1} & "; 
					print TEXOUT "\\textsf{". $round->name ." J2} & "; 
				}

				print TEXOUT "\\textsf{Total}  & \\textsf{R J1} & \\textsf{R J2}  & \\textsf{R J3}  &  \\textsf{Total} \\\\ \n";
				print TEXOUT "\\hline \n \\hline \n";
				$comp_count = 1;
			}

			print TEXOUT $comp->code." & ".substr($comp->student->first, 0, 10)." & ";

			foreach my $round (@rounds) { print TEXOUT " & &"; }
			print TEXOUT " & & & & \\\\ \n";

			print TEXOUT $comp->school->code." & ".substr($comp->student->last,0,10)." & ";

			foreach my $round (@rounds) { print TEXOUT " & &"; }

			print TEXOUT " & & & & \\\\ \n";
			print TEXOUT "\\hline \n";
			$comp_count++;

		}

			print TEXOUT "\\end{tabular*}\n \\newpage \n";

	} # end of foreach event

	print TEXOUT "\\end{center}\n";
	print TEXOUT "\\end{document} \n";
	close TEXOUT;


    $garbage = `cd $filepath; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;
    $garbage = `cd $filepath; rm -f $filename.tex $filename.log $filename.dvi $filename.aux`;
    $m->redirect("$Tab::url_prefix/tmp/$filename.pdf");

</%init>
