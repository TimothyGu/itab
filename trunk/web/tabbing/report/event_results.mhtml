<%args>
	$tourn
	$session
	$event_id => undef
	$report => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id) if $event_id && $event_id ne "all";

	my $switch = 1;
    my $now = DateTime->now;    
    $now->set_time_zone($tourn->tz);

	my $name = $tourn->name if $event_id eq "all";
    $name = $event->name if $event && not defined $name;
    $name =~ s/[\W_]//g;

	my @events;
	push @events, $event;
	@events = sort {$a->name cmp $b->name} $tourn->events if $event_id eq "all";

    my $filename = "Results-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", filename => $filename, head => 1 );

    open (TEXOUT, ">>$filepath.tex");

	foreach my $event (@events) { 

		my @values = $m->comp("/funclib/event_values.mas", event => $event);
		my %values_by_entry = ();

		foreach my $value (@values) { 
			push @{$values_by_entry{$value->entryid}}, $value;
		}
	
		my @rounds = sort {$b->name <=> $a->name} $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");

		my $final;
		my @elims;
		my $last_prelim;

		foreach my $round (@rounds) { 
			$final = $round if $round->type eq "final";
			push (@elims, $round) if $round->type eq "elim";
			$last_prelim = $round if $round->type eq "prelim" && not defined $last_prelim;
		}

		my @print_rounds;

		if ($report eq "all" || $report eq "elims" || $report eq "final") { 
			push (@print_rounds, $final) if $final;
		}

		if ($report eq "all" || $report eq "elims") { 
			push (@print_rounds, @elims) if @elims;
		}

		if ($report eq "all" || $report eq "prelims") { 
			push (@print_rounds, $last_prelim) if $last_prelim;
		}

		Tab::debuglog("Printing scalar @print_rounds rounds");

		my %used;

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\hfill {\\huge ". Tab::texify($tourn->name.": ".$event->name)."} \\\\ \n";
		print TEXOUT "\\newline\n";

		foreach my $round (@print_rounds) { 

			my $type = $round->type;
			my $label = substr($round->label, 0, 3);

			my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref) = $m->comp("/tabbing/results/speech/order_entries.mas", round => $round);

			print TEXOUT "\\medskip\n";
			print TEXOUT "{\\Large ". Tab::texify($round->realname)."} \\\\ \n";
			print TEXOUT "\\newline\n";

			my $ballot_space = 3.5;
			my $tabular = "\\begin{tabular}{p{.25in}p{1.25in}p{1.25in}";
			foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) {
				$tabular .= "p{.35in}";
				$ballot_space -= .5;
			}
			$tabular .= "p{".$ballot_space."in}}\n";

			print TEXOUT $tabular;
			print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
			print TEXOUT "  & Name & School & ";

			my $count++;
			foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) {
				print TEXOUT " TB".$count++." & ";
			}
			print TEXOUT "  Ballots \\\\ \n";

			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

			foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) {
				
				my $tie++ if scalar @{${$entries_ref}{$key}} > 1;
	
				foreach my $entry (@{${$entries_ref}{$key}}) {

					next if $used{$entry->id};
					$used{$entry->id}++;

					print TEXOUT $tabular;
					print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

					print TEXOUT Tab::texify($key) if $type eq "final";
					print TEXOUT Tab::texify($label) if $type eq "elim";
					print TEXOUT Tab::texify("-T") if $tie && $type eq "final";

					print TEXOUT " & ". Tab::texify($entry->name)." & ";
					print TEXOUT " \\scriptsize ".Tab::texify($entry->school->short_name)." & ";

					foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) {
						print TEXOUT Tab::texify(${$tbs_ref}{$entry->id."-".$key}." ");
						print TEXOUT " & ";
					}

					my $last_tag;

					foreach my $value (@{$values_by_entry{$entry->id}}) { 

						if ($value->tag eq "rank") { 
							print TEXOUT " ";
						} else { 
							print TEXOUT "/" if $last_tag eq "ballot";
							print TEXOUT "/" if $last_tag eq "rank";
							print TEXOUT " " if $last_tag eq "points";
						}
						print TEXOUT $value->value;
						$last_tag = $value->tag;
					}

					print TEXOUT "\\\\ \n";
					print TEXOUT "\\end{tabular}\n";
					print TEXOUT "\\newline\n";
				}
			}

			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
		}

	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas", filename => $filename, tail => 1 );

</%init>

