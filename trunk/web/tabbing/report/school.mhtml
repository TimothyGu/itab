<%args>
	$tourn
	$session
	$school_id => undef
</%args>
<%init>

	my $school = Tab::School->retrieve($school_id) if $school_id && $school_id ne "all";

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $now = DateTime->now;    
    $now->set_time_zone($tourn->tz);

	my $name = $tourn->name."SchoolReports" if $school_id eq "all";
    $name = $school->name."Report" if $school && not defined $name;
    $name =~ s/[\W_]//g;

	my @schools;
	push @schools, $school;
	@schools = sort {$a->name cmp $b->name} $tourn->schools if $school_id eq "all";

    my $filename = $name."-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", filename => $filename, head => 1 );

    open (TEXOUT, ">>$filepath.tex");

	my $switch;

	foreach my $school (@schools) { 

		print TEXOUT "\\medskip\n";
		print TEXOUT "{\\LARGE ". Tab::texify($tourn->name.": ".$school->short_name)."} \\\\ \n";
		print TEXOUT "\\newline\n";

		my $tabular = "\\begin{tabular}{p{.35in}p{2.0in}p{1in}p{2.5in}}\n";

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
		print TEXOUT "  & Name & Event & Ballots \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

		foreach my $event ($m->comp("/funclib/school_events.mas", school => $school)) { 

			my @values = $m->comp("/funclib/school_values.mas", event => $event, school => $school);

			my %values_by_entry = ();
			my %values_by_student = ();

			foreach my $value (@values) { 
				push @{$values_by_entry{$value->entryid}}, $value;
				push @{$values_by_student{$value->student->id}}, $value if $value->tag eq "points" and $value->student;
			}
		
			my @rounds = sort {$b->name <=> $a->name} $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");

			my $final;
			my @elims;
			my $last_prelim;
			my @print_rounds;

			foreach my $round (@rounds) { 
				push (@print_rounds, $round) if $round->type eq "final";
				push (@print_rounds, $round) if $round->type eq "elim";
				push (@print_rounds, $round) if $round->type ne "elim" && $round->type ne "final" && not defined $last_prelim;
			}

			my %used;

			foreach my $round (@print_rounds) { 

				my $type = $round->type;
				my $label = substr($round->label, 0, 3);
				my $event_type = $round->event->type;
				
				my $entries_ref;
				my $students_ref;
				my $tbs_ref;
				my $noshow_ref;
				my $desc_ref;

				if ($event_type eq "speech") { 
					($entries_ref, $tbs_ref, $desc_ref, $noshow_ref) = $m->comp("/tabbing/results/speech/order_entries.mas", round => $round) 
				} elsif ($event_type eq "wudc") {
					($entries_ref, $tbs_ref, $desc_ref) = $m->comp("/tabbing/results/wudc/order_entries.mas", round => $round);
				}

				foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) {
					
					my $tie++ if scalar @{${$entries_ref}{$key}} > 1;

					foreach my $entry (@{${$entries_ref}{$key}}) {

						my $printme++ if $entry->school->id == $school->id;

						next if $used{$entry->id};
						$used{$entry->id}++;

						print TEXOUT $tabular if $printme;
						print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch % 2) && $printme;
						$switch++ if $printme;

						print TEXOUT Tab::texify(Lingua::EN::Numbers::Ordinate::ordinate($key)) if $printme && $type eq "final" || $event_type eq "wudc";
						print TEXOUT Tab::texify("-T") if $printme && $tie;
						print TEXOUT Tab::texify($label) if $printme && $type eq "elim";

						my $name = $entry->name;
						$name =~ s/amp;//g;

						print TEXOUT " & ". Tab::texify($name)." & " if $printme;
						print TEXOUT " ".Tab::texify($entry->event->abbr)." & " if $printme;

						my $last_tag;

						foreach my $value (@{$values_by_entry{$entry->id}}) { 

							if ($value->tag eq "rank") { 
								print TEXOUT " " if $printme;
							} else { 
								print TEXOUT "/" if $printme && $last_tag eq "ballot";
								print TEXOUT "/" if $printme && $last_tag eq "rank";
								print TEXOUT " " if $printme && $last_tag eq "points";
							}
							print TEXOUT $value->value if $printme;
							$last_tag = $value->tag;
						}

						print TEXOUT "\\\\ \n" if $printme;
						print TEXOUT "\\end{tabular}\n" if $printme;
						print TEXOUT "\\newline\n" if $printme;
					}


				}

			}

		}

		print TEXOUT "\\newpage\n";

	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas", filename => $filename, tail => 1 );

</%init>

