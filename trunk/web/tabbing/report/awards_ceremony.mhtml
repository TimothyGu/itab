<%args>
	$tourn
	$session
	$event_id => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id) if $event_id && $event_id ne "all";

	my $switch = 1;
    my $now = DateTime->now;    
    $now->set_time_zone($tourn->tz);

	my $name = $tourn->name if $event_id eq "all";
    $name = $event->name if $event && not defined $name;
    $name =~ s/[\W_]//g;

	my @events;
	push @events, $event if $event;
	@events = sort {$a->name cmp $b->name} $tourn->events if $event_id eq "all";

	Tab::debuglog("Event id $event_id yielded ".scalar @events." events");

    my $filename = "Awards-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", filename => $filename, head => 1, array => "2.0" );

    open (TEXOUT, ">>$filepath.tex");

	foreach my $event (@events) { 

		my @rounds = sort {$b->name <=> $a->name} $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");

		my $final;
		my @elims;

		foreach my $round (@rounds) { 
			$final = $round if $round->type eq "final";
			push (@elims, $round) if $round->type eq "elim";
		}

		my %used;

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\hfill {\\huge Awards: ". Tab::texify($tourn->name.": ".$event->name)."} \\\\ \n";
		print TEXOUT "\\newline\n";

		my $done;

		foreach my $round ($final, @elims) { 

			my $type = $round->type;
			my $label = substr($round->label, 0, 3);

			my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref) = $m->comp("/tabbing/results/speech/order_entries.mas", round => $round);

			my $tabular = "\\begin{tabular}{p{.5in}p{1.75in}p{1.75in}p{2.0in}}\n";

			unless ($done) { 
				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
				print TEXOUT "  & Name & School & Students \\\\ \n ";
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";
			}

			$done++;

			foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) {
				
				my $tie++ if scalar @{${$entries_ref}{$key}} > 1;
	
				foreach my $entry (@{${$entries_ref}{$key}}) {

					next if $used{$entry->id};
					$used{$entry->id}++;

					print TEXOUT $tabular;
					print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

					print TEXOUT Tab::texify($key) if $type eq "final";
					print TEXOUT Tab::texify($label) if $type eq "elim";
					print TEXOUT Tab::texify("-T") if $tie && $type eq "final";

					print TEXOUT " & \\normalsize ". Tab::texify($entry->name);
					print TEXOUT " & \\normalsize ".Tab::texify($entry->school->short_name)." & ";

					my $first;

					my @students = $entry->students;

					print TEXOUT "\\vbox{" if scalar @students > 1;
					foreach my $student (@students) { 
						print TEXOUT "\\hbox{\\strut " if scalar @students > 1;
						print TEXOUT "\\small ".Tab::texify($student->first." ".$student->last);
						print TEXOUT ":   (".Tab::texify($student->phonetic).")" if $student->phonetic;
						print TEXOUT "}" if scalar @students > 1;
					}

					print TEXOUT "} " if scalar @students > 1;
					print TEXOUT "\\\\ \n";
					print TEXOUT "\\end{tabular}\n";
					print TEXOUT "\\newline\n";
				}
			}
		}

	}

	close TEXOUT;

    $m->comp("/funclib/printout.mas", filename => $filename, tail => 1 );

</%init>

