<%args>
	$sweep_set
</%args>
<%init>

	return unless $sweep_set;
	my $tourn = $sweep_set->tourn;
	
	my @sweep_sets;
	push @sweep_sets, $sweep_set;

	my @children = $sweep_set->children;

	if (@children) { 
		my %used;
		$used{$sweep_set->id}++;

		while (@children) { 
			my $take = shift @children;
			next if $used{$take->id};
			push @children, $take->children;
			push @sweep_sets, $take;
			$used{$take->id}++;
		}
	}

	my %points_by_school = ();
	my %count_by_school = ();
	my %countstring_by_school = ();
	my %entries_by_school = ();
	
	my %school_events_used = ();

	my @countme; 

	my %count_me_code;
	my %count_me_event;
	my %count_me_points;
	my %count_me_school;

	my $not_master;

	foreach my $set (@sweep_sets) { 

		next unless $set->rules;
		$not_master++ if $set->id != $sweep_set->id;

		my ($points_ref, $ent_ref, $schools_ref, $event_ref, $code_ref) 
			= $m->comp("/tabbing/results/sweep_tourn.mas", tourn => $tourn, sweep_set => $set);

		my @entries = sort { ${$points_ref}{$b} <=> ${$points_ref}{$a}} @{$ent_ref};

		my $events = $set->rule("events");
		my $entries_rule = $set->rule("entries");
		my $wildcards = $set->rule("wildcards");
		my $event_entries = $set->rule("event_entries");

		my %school_entries = ();
		my %school_event_entries = ();
		my %school_events = ();
		my %school_wildcards = ();

		foreach my $entry (@entries) { 

			my $school_id = ${$schools_ref}{$entry};
			my $event_id = ${$event_ref}{$entry};

			next unless ${$points_ref}{$entry};
			$entries_by_school{$school_id}++;

			next if 
				$entries_rule && 
				( $school_entries{$school_id} >= $entries_rule ) && 
				( $wildcards < 1 || $school_wildcards{$school_id} >= $wildcards );

			next if ( 
				( ($events && $school_events{$school_id} >= $events) || 
					($event_entries && $school_event_entries{$school_id."-".$event_id} >= $event_entries) 
				) && 
					($wildcards < 1 || $school_wildcards{$school_id} >= $wildcards )  
			);

			if (	
					($entries_rule && ($school_entries{$school_id} >= $entries_rule)) ||
					($events && $school_events{$school_id} >= $events ) || 
					($event_entries && $school_event_entries{$school_id."-".$event_id} >= $event_entries) 
				) {

				 $school_wildcards{$school_id}++;

			} else { 

				$school_entries{$school_id}++;
				$school_events{$school_id}++ unless $school_events_used{$school_id."-".$event_id};
				$school_event_entries{$school_id."-".$event_id}++;
				$school_events_used{$school_id."-".$event_id}++;

			}


			$count_by_school{$school_id}++;
			$countstring_by_school{$school_id} .= "\n" if $countstring_by_school{$school_id};
			$countstring_by_school{$school_id} .= ${$code_ref}{$entry}.": ".${$points_ref}{$entry};

			$count_me_school{$entry} = $school_id;
			$count_me_event{$entry} = $event_id;
			$count_me_code{$entry} = ${$code_ref}{$entry};
			$count_me_points{$entry} = ${$points_ref}{$entry};
			$points_by_school{$school_id} += ${$points_ref}{$entry};

			push @countme, $entry;

		}

	}

	@countme = sort {$count_me_points{$b} <=> $count_me_points{$a}} @countme;

	if ($not_master) { 

		undef %count_by_school;
		undef %countstring_by_school;
		undef %points_by_school;

		my %school_entries = ();
		my %school_event_entries = ();
		my %school_events = ();
		my %school_wildcards = ();

		my $events = $sweep_set->rule("events");
		my $entries_rule = $sweep_set->rule("entries");
		my $wildcards = $sweep_set->rule("wildcards");
		my $event_entries = $sweep_set->rule("event_entries");

		foreach my $entry (@countme) { 

			my $code = $count_me_code{$entry};
			my $points = $count_me_points{$entry};
			my $event_id = $count_me_event{$entry};
			my $school_id = $count_me_school{$entry};

#			Tab::debuglog("Testing $code with $points in $event_id from $school_id");

			next unless $points;

			$entries_by_school{$school_id}++;

			next if 
				$entries_rule && 
				( $school_entries{$school_id} >= $entries_rule ) && 
				( $wildcards < 1 || $school_wildcards{$school_id} >= $wildcards );

			next if ( 
				( ($events && $school_events{$school_id} >= $events) || 
					($event_entries && $school_event_entries{$school_id."-".$event_id} >= $event_entries) 
				) && 
					($wildcards < 1 || $school_wildcards{$school_id} >= $wildcards )  
			);

			if (	
					($entries_rule && ($school_entries{$school_id} >= $entries_rule)) ||
					($events && $school_events{$school_id} >= $events ) || 
					($event_entries && $school_event_entries{$school_id."-".$event_id} >= $event_entries) 
				) {

				 $school_wildcards{$school_id}++;

			} else { 

				$school_entries{$school_id}++;
				$school_events{$school_id}++ unless $school_events_used{$school_id."-".$event_id};
				$school_event_entries{$school_id."-".$event_id}++;
				$school_events_used{$school_id."-".$event_id}++;

			}

			$count_by_school{$school_id}++;
			$countstring_by_school{$school_id} .= "\n" if $countstring_by_school{$school_id};
			$countstring_by_school{$school_id} .= $code.": ".$points;

			$points_by_school{$school_id} += $points;

		}

	}


	return ( \%points_by_school, \%count_by_school, \%countstring_by_school, \%entries_by_school);
	

</%init>

