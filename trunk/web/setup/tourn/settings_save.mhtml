<%args>
	$tourn
	$from                  => undef
	$require_adult_contact => 0
	$hidden                => 0
	$track_reg_changes     => 0
	$publish_schools       => 0
	$overall_cap           => 0
	$hide_codes            => 0
	$school_codes          => 0
	$first_school_code     => 0
	$ncfl                  => 0
	$closed_entry          => 0
	$student_claim         => 0
	$onsite_registration   => 0
	$onsite_only_paid      => 0
	$onsite_starts         => undef
	$onsite_startstime     => undef
	$onsite_ends           => undef
	$onsite_endstime       => undef
</%args>
<%init> 

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $onsite_endsdt;
	my $onsite_startsdt 

	eval{ 
		$onsite_endsdt = Tab::dtme($onsite_ends,$onsite_endstime, $tz) if $onsite_starts && $onsite_startstime;
		$onsite_startsdt = Tab::dtme($onsite_starts,$onsite_startstime, $tz) if $onsite_ends && $onsite_endstime;
	};

	unless ($onsite_endsdt && $onsite_startsdt) { 
		$m->print("You must specify a date.  Please go back and try again");
		$m->abort;
	}

	$tourn->setting("require_adult_contact", $require_adult_contact);
	$tourn->setting("track_reg_changes", $track_reg_changes);
	$tourn->setting("publish_schools", $publish_schools);
	$tourn->setting("overall_cap", $overall_cap);
	$tourn->setting("hide_codes", $hide_codes);
	$tourn->setting("school_codes", $school_codes);
	$tourn->setting("first_school_code", $first_school_code);
	$tourn->setting("ncfl", $ncfl);
	$tourn->setting("closed_entry", $closed_entry);
	$tourn->setting("onsite_registration", $onsite_registration);
	$tourn->setting("onsite_only_paid", $onsite_only_paid);
	$tourn->setting("student_claim", $student_claim);
	$tourn->setting("onsite_ends", "date", $onsite_endsdt) if $onsite_endsdt;
	$tourn->setting("onsite_starts", "date", $onsite_startsdt) if $onsite_startsdt;

	$tourn->hidden($hidden);
	$tourn->update;

	my $msg = "Tournament settings saved";

	$m->redirect("settings.mhtml?msg=$msg");

</%init> 

