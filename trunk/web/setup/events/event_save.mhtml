<%args>
	$event_id => undef
	$league
	$tourn
	$name
	$judge_group_id => undef
	$abbr => undef
	$fee => undef
	$team => undef
	$type => undef
	$cap => undef
	$school_cap => undef
	$min_entry => 1
	$max_entry => 1
	$ballot_type => "normal"
	$code => undef
	$initial_codes => 0
	$reg_codes => 0
	$no_codes => 0
	$alumni => 0
	$waitlist => 0
	$waitlist_all => 0
	$omit_sweeps => 0
	$allow_judge_own => 0
	$no_judge_burden => 0
	$bids => 0
	$ask_for_titles => 0
	$supp => 0
	$field_report => 0
	$live_updates => 0
	$deadline => undef
	$deadlinetime => "5:00 P"
	$blurb => undef
</%args>
<%init>

	my $event;
	my $msg;

	$blurb =~ s/\r/\n/g;
	$blurb =~ s/\n\n/\n/g;

	my $deadlinedt = Tab::dtme($deadline,$deadlinetime) if $deadline;
	$deadlinedt->set_time_zone($league->timezone) if $deadlinedt;

	unless (defined $code) { 
	
		my @code_events = 
				Tab::Event->search( 
				tournament => $tourn->id, { order_by => 'code' });

		if (@code_events) { 
			my $last_code_event = pop(@code_events); 		
			my $last_code = $last_code_event->code; 
			$code = $last_code; 
			$code = $code + 100;
		} else {
			$code = 100; 
		}
	
	}	

	if ($event_id) { 
	
		$event = Tab::Event->retrieve($event_id);
		$event->tournament($tourn->id);
		$event->name($name);
		$event->judge_group($judge_group_id);
		$event->abbr($abbr);
		$event->fee($fee);
		$event->team($team);
		$event->type($type);
		$event->cap($cap);
		$event->school_cap($school_cap);
		$event->min_entry($min_entry);
		$event->max_entry($max_entry);
		$event->ballot_type($ballot_type);
		$event->code($code);
		$event->initial_codes($initial_codes);
		$event->reg_codes($reg_codes);
		$event->no_codes($no_codes);
		$event->alumni($alumni);
		$event->waitlist($waitlist);
		$event->waitlist_all($waitlist_all);
		$event->omit_sweeps($omit_sweeps);
		$event->allow_judge_own($allow_judge_own);
		$event->no_judge_burden($no_judge_burden);
		$event->bids($bids);
		$event->ask_for_titles($ask_for_titles);
		$event->supp($supp);
		$event->field_report($field_report);
		$event->live_updates($live_updates);
		$event->deadline($deadlinedt);
		$event->blurb($blurb);

		$event->update;

		$msg = "Event changes saved";

	} else { 
	
		$event = Tab::Event->create({
			tournament  =>  $tourn->id,
			name  =>  $name,
			judge_group  =>  $judge_group_id,
			abbr  =>  $abbr,
			fee  =>  $fee,
			team  =>  $team,
			type  =>  $type,
			cap  =>  $cap,
			school_cap  =>  $school_cap,
			min_entry  =>  $min_entry,
			max_entry  =>  $max_entry,
			ballot_type  =>  $ballot_type,
			code  =>  $code,
			initial_codes  =>  $initial_codes,
			reg_codes  =>  $reg_codes,
			no_codes  =>  $no_codes,
			alumni  =>  $alumni,
			waitlist  =>  $waitlist,
			waitlist_all  =>  $waitlist_all,
			omit_sweeps  =>  $omit_sweeps,
			allow_judge_own  =>  $allow_judge_own,
			no_judge_burden  =>  $no_judge_burden,
			bids  =>  $bids,
			ask_for_titles  =>  $ask_for_titles,
			supp  =>  $supp,
			field_report  =>  $field_report,
			live_updates  =>  $live_updates,
			deadline  =>  $deadlinedt,
			blurb  =>  $blurb
		});

		$msg = "Event $name created";

	}
	
	$m->redirect("$Tab::url_prefix/setup/events/edit.mhtml?event_id=".$event->id."&msg=$msg");
		
</%init>
