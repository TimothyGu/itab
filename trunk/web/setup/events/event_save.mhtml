<%args>
	$event_id => undef
	$circuit
	$tourn
	$name
	$judge_group_id => undef
	$event_double_id => undef
	$abbr => undef
	$fee => undef
	$team => undef
	$type => undef
	$cap => undef
	$school_cap => undef
	$speaker_tbset => undef
	$min_entry => 1
	$max_entry => 1
	$min_points => 1
	$max_points => 1
	$ballot_type => "normal"
	$code_start => undef
	$code_style => undef
	$code_hide => undef
	$alumni => 0
	$hybrids => 0
	$waitlist => 0
	$waitlist_all => 0
	$omit_sweeps => 0
	$allow_judge_own => 0
	$no_judge_burden => 0
	$bids => 0
	$ask_for_titles => 0
	$supp => 0
	$field_report => 0
	$live_updates => 0
	$online_ballots => 0
	$deadline => undef
	$deadlinetime => "5:00 P"
	$text => undef
	$tz 
</%args>
<%init>

	my $event;
	my $msg;

	$tz = $tourn->tz unless $tz;

	$text =~ s/\r/\n/g;
	$text =~ s/\n\n/\n/g;

	my $deadlinedt = Tab::dtme($deadline,$deadlinetime) if $deadline;
	$deadlinedt->set_time_zone($tz) if $deadlinedt;


	if ($event_id) { 
		$event = Tab::Event->retrieve($event_id);
		$event->tourn($tourn->id);
		$event->name($name);
		$event->type($type);
		$event->abbr($abbr);
		$event->event_double($event_double_id);
		$event->judge_group($judge_group_id);
		$event->fee($fee);
		$event->update;
	
		$msg = "Event changes saved";

	} else { 

		my @code_events = Tab::Event->search( tourn => $tourn->id );
		@code_events = sort {$a->setting("code_start") <=> $b->setting("code_start")} @code_events;

		if (@code_events) { 
			my $last_code_event = pop(@code_events); 		
			my $last_code = $last_code_event->setting("code_start"); 
			$code_start = $last_code; 
			$code_start = $code_start + 100;
		} else {
			$code_start = 100; 
		}
	
		$event = Tab::Event->create({
			name  =>  $name,
			type  =>  $type,
			abbr  =>  $abbr,
			event_double  =>  $event_double_id,
			judge_group  =>  $judge_group_id,
			fee  =>  $fee
		});

		$msg = "Event $name created";

	}

	$event->setting("team", $team);
	$event->setting("cap", $cap);
	$event->setting("school_cap", $school_cap);
	$event->setting("speaker_tbset", $speaker_tbset);
	$event->setting("min_entry", $min_entry);
	$event->setting("max_entry", $max_entry);
	$event->setting("min_points", $min_points);
	$event->setting("max_points", $max_points);
	$event->setting("code_start", $code_start);
	$event->setting("code_style", $code_style);
	$event->setting("code_hide", $code_hide);
	$event->setting("alumni", $alumni);
	$event->setting("hybrids", $hybrids);
	$event->setting("waitlist", $waitlist);
	$event->setting("waitlist_all", $waitlist_all);
	$event->setting("omit_sweeps", $omit_sweeps);
	$event->setting("ballot_type", $ballot_type);
	$event->setting("allow_judge_own", $allow_judge_own);
	$event->setting("no_judge_burden", $no_judge_burden);
	$event->setting("bids", $bids);
	$event->setting("ask_for_titles", $ask_for_titles);
	$event->setting("supp", $supp);
	$event->setting("field_report", $field_report);
	$event->setting("live_updates", $live_updates);
	$event->setting("online_ballots", $online_ballots);

	$event->setting("deadline", "date", $deadlinedt) if $deadlinedt;
	$event->setting("text", "text", $text) if $text;

	$m->redirect("$Tab::url_prefix/setup/events/edit.mhtml?event_id=".$event->id."&msg=$msg");
		
</%init>
