<%args>
	$tourn
	$mysite => undef
	$myevent => undef
	$res_count => undef
	$pref_count => undef
</%args>

%	use POSIX;

	<div class="right small">

	<div class="sidenote">

		<h4>Sites</h4>

		<a class="yellow block" href="manage_sites.mhtml">Edit tournament sites</a>

		<a class="yellow block" href="import.mhtml">Upload room lists</a>

		<h4>Room Lists</h4>

%		foreach my $site ($m->comp("/funclib/tourn_sites.mas", tourn => $tourn)) { 
			
			<a class="<% ($mysite && $site->id == $mysite->id) ? "dk" : "" %>blue block" href="list.mhtml?site_id=<% $site->id %>">

				<span class="nowrap medspan padno" style="margin-right: 5px;">
					<% $site->name %>
				</span>
				<span class="nowrap finespan padno">
					<% scalar ($site->rooms) %> 
				</span>
			</a>

%		}

		<h4>Event Pools</h4>

		<a class="blue block" href="print_pools.mhtml">Print Pools</a>
		<br />

%		foreach my $event ($m->comp("/funclib/tourn_events.mas", tourn => $tourn)) { 

			<a class="<% ($myevent && $event->id == $myevent->id) ? "dkblue block" : "blue block" %>"
				href="event_rooms.mhtml?event_id=<% $event->id %>"><% $event->name %></a>

%		}

		<br />

%		if ($mysite) { 
			<a class="yellow block" href="dedupe_rooms.mhtml?site_id=<% $mysite->id %>">Deduplicate Rooms</a>
%		}

		<a class="dkred block" href="dump_pool.mhtml">Dump All Pool Assignments</a>

%		if ($myevent) { 

%			my $switch;

			<h4 style="margin-top: 10px;">
				<% $myevent->name %> Stats
			</h4>

			<table cellpadding="3" width="100%" cellspacing="1" id="roomcounts">

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>

				<th class="smaller">
					Entered
				</td>

				<td>
					<% scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) %>
				</td>

			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>

				<th class="smaller">
					Waitlisted
				</th>
				<td>
					<% scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => 1 }) %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<th class="smaller">
					Rooms Reserved:
				</th>
				<td>
					<% $res_count %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<th class="smaller">
					Rooms Preferred:
				</th>
				<td>
					<% $pref_count %>
				</td>
			</tr>


			<tr>
				<td colspan="2">
				</td>
			</tr>

			<tr class="liblrow">

				<th class="smaller">
					Max Room Size	
				</th>

				<th class="smaller">
					Rooms Required
				</th>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>

				<td>
					2
				</td>
				<td> 
					<% floor( scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) /2) %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<td>
					4
				</td>
				<td> 
					<% ceil( scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) /4) %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<td>
					5
				</td>
				<td> 
					<% ceil( scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) /5) %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<td>
					6
				</td>
				<td> 
					<% ceil( scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) /6) %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<td>
					7
				</td>
				<td> 
					<% ceil( scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) /7) %>
				</td>
			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\"" %>>
				<td>
					8
				</td>
				<td> 
					<% ceil( scalar Tab::Entry->search_where({  event => $myevent->id,  dropped => { '!=', 1 }, waitlist => { '!=', 1} }) /8) %>
				</td>
			</tr>

		</table>

%		}


	</div>

	</div>


