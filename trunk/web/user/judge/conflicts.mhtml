<%args>
	$account
	$other_id => undef
	$chapter_id => undef
	$search_email => undef
	$search_chapter => undef
	$search_last => undef
</%args>
<%init>

	if ($other_id) { 

		my $other = Tab::Account->retrieve($other_id);

		if ($other) { 

			my @already = Tab::AccountConflict->search( account => $account->id, conflict => $other_id );

			unless (@already) { 

				Tab::AccountConflict->create({
					account => $account->id,
					conflict => $other_id,
					added_by => $account->id,
				});

			}
			
		} 

	} 

	if ($chapter_id) { 

		my $chapter = Tab::Chapter->retrieve($chapter_id);

		if ($chapter) { 

			my @already = Tab::AccountConflict->search( account => $account->id, chapter => $chapter_id );

			unless (@already) { 

				Tab::AccountConflict->create({
					account => $account->id,
					chapter => $chapter_id,
					added_by => $account->id,
				});

			}
			
		} 

	}
	
	my @chapters;
	my @accounts;

	if ($search_email && $search_last) { 

		@accounts = Tab::Account->search_where( last => { "like", $search_last."%" }, email => { "like", $search_email."%" } );

	} elsif ($search_email) { 

		@accounts = Tab::Account->search_where( email => { "like", $search_email."%" } );

	} elsif ($search_last) { 

		@accounts = Tab::Account->search_where( last => { "like", $search_last."%" } );

	}

	if ($search_chapter) { 

		@chapters = Tab::Chapter->search_where( name => { "like", $search_chapter."%" } );

	}

	my @existings = Tab::AccountConflict->search( account => $account->id );

</%init>

	<& /user/menu.mas, account => $account &>

	<div class="left huge">

		<h2>Standing Conflicts</h2>

		<p>These conflicts are meant to reflect a personal or professional
		relationship which means that you should not judge or be judged by the
		other person; such as a relative, or a former classmate, or a former
		coach.  Do NOT use conflicts to reflect judges you simply do not like
		or the tournament directors of tournaments you attend will likely get
		very angry.</p>

		<p>The other user must have a Tabroom.com account linked to their judge
		records for a standing conflict to work automatically.</p>

		<div class="left half">

			<h4>Add Personal Conflict</h4>

			<form action="conflicts.mhtml" method="post">

			<div class="block" style="margin-bottom: 20px;">

				<span class="biggishspan evenrow">
					<input type="text" name="search_last" size="25" placeholder="Search by last name">
				</span>

				<span class="biggishspan">
					<input type="text" name="search_email" size="25" placeholder="Search by email">
				</span>

				<span class="biggishspan rightalign liblrow">
					<input type="submit" value="Search for Conflicts">
					</form>
				</span>
					
			</div>

			<h4>Add School Conflict</h4>

			<form action="conflicts.mhtml" method="post">

			<div class="block">

				<span class="biggishspan">
					<input type="text" name="search_chapter" size="25" placeholder="Search by school name">
				</span>

				<span class="biggishspan rightalign liblrow">
					<input type="submit" value="Search for Schools">
					</form>
				</span>
					
			</div>

		</div>

		<div class="right half">

%			if (@accounts || @chapters) { 

			
				<h4>Search Results:</h4>

%				my $switch;

%				foreach my $other (@accounts) { 

%					my @chapters;
%					my @students = Tab::Student->search( account => $other->id );
%					my @chapter_judges = Tab::ChapterJudge->search( account => $other->id );

%					foreach my $person (@chapter_judges, @students) { 
%						push @chapters, $person->chapter if $person->chapter;
%					}

					<div class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %> smallish padmore">

						<span class="smallspan nowrap">
							<% $other->first %>
						</span>

						<span class="schemat nowrap">
							<% $other->last %>
						</span>

						<div style="width: 85px; vertical-align: top;" class="inline padno ">
%							foreach my $chapter (@chapters) { 
								<span class="eighty block nowrap padno ">
									<% $chapter->name %> 
								</span>
								<br />
%							}
						</div>

						<span class="smallishspan rightalign  padno">
							<a class="dkred block smaller centeralign" href="conflicts.mhtml?other_id=<% $other->id %>">
								Conflict
							</a>
						</span>

					</div>

%				}

%				foreach my $chapter (@chapters) { 

					<div class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %> smallish">

						<span class="judgechart" style="padding-left: 4px;">
							<% $chapter->name %>
						</span>

						<span class="smallspan">
							<% $chapter->state %>
						</span>

						<span class="smallishspan rightalign">
							<a class="dkred block smaller centeralign" href="conflicts.mhtml?chapter_id=<% $chapter->id %>">
								Conflict
							</a>
						</span>

					</div>

%				}

%			}

			<h4>Existing Conflicts</h4>

%				my $switch;

%				foreach my $existing (@existings) { 

					<div class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %> smallish">
						
						<span class="medbigspan nowrap">
							<% $existing->conflict->id ? "Personal: ".$existing->conflict->first." ".$existing->conflict->last : "" %>
							<% $existing->chapter->id ? "Team: ".$existing->chapter->name : "" %>
						</span>

						<span class="smallishspan rightalign">
							<a class="dkred block smaller centeralign" href="conflict_rm.mhtml?conflict_id=<% $existing->id %>">
								Remove
							</a>
						</span>

					</div>

%				}

		</div>

	</div>



