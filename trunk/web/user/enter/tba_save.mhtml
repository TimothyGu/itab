<%args>
	$account
	$event_id
	$school
	$slots => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);

	unless ($event->tourn->id == $school->tourn->id) { 
		$m->redirect("students.mhtml?school_id=".$school->id."&event_id=$event_id&err=Something odd happened. Try again.");
	}

	my $tz = $school->tourn->tz;
	$tz = "UTC" unless $tz;

	my $now = DateTime->now(time_zone => $tz);

	my @alreadys = $school->entries( event => $event_id, unconfirmed => 0 );
	my @all_event = $event->entries( event => $event_id, unconfirmed => 0, waitlist => 0);
	my @all = $m->comp("/funclib/tourn_entries.mas", tourn => $event->tourn); 

	my $cap = $event->setting("cap");
	my $school_cap = $event->setting("school_cap");
	my $tourn_cap = $event->tourn->setting("overall_cap");

	my $wl = $event->setting("waitlist");

	if ($cap) { 
		$cap -= scalar @all_event;
	} else { 
		$cap = 100;
	}

	if ($school_cap) { 
		$school_cap -= scalar @alreadys;
	} else {
		$school_cap = 100;
	}

	if ($tourn_cap) { 
		$tourn_cap -= scalar @all;
	} else {
		$tourn_cap = 100;
	}
	
	foreach my $slot (1 .. $slots) {
	
		my $waitlist = 0;

		Tab::debuglog("Cap is $cap, school is $school_cap, overall is $tourn_cap");

		$waitlist = 1 if $cap <  1;
		$waitlist = 1 if $school_cap < 1;
		$waitlist = 1 if $tourn_cap < 1;

		next if $waitlist && not defined $wl;
		
		Tab::Entry->create({
			name => "Names TBA",
			code => "TBA",
			event => $event_id,
			school => $school->id,
			waitlist => $waitlist,
			tba => 1,
			reg_time => $now,
			reg_by => $account->id,
			unconfirmed => 0,
			dropped => 0
		});

		$school_cap--;
		$cap--;

	}

	$m->redirect("students.mhtml?school_id=".$school->id."&event_id=$event_id&msg=$slots slots saved");


</%init>
