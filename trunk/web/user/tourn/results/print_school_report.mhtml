<%args>
	$tourn
	$school
	$session
	$debug => undef
</%args>
<%init>

	system "$Tab::logger BEGIN THE REPORT" if $debug;

	system "$Tab::logger Getting the schools" if $debug;

	system "$Tab::logger Prep the ballots" if $debug;
	$m->comp("/results/prep_ballots.mas", tourn => $tourn);
	system "$Tab::logger Done prepping the ballots" if $debug;

	system "$Tab::logger Sweeping the students" if $debug;
    $m->comp("/results/sweep_entries.mas", tourn => $tourn, no_prep => 1);

	my %finalists_by_event;
		
	foreach my $event ($m->comp("/funclib/tourn_events.mas", tourn => $tourn)( type => "speech")) { 

		system "$Tab::logger Getting final placements" if $debug;

		my @finalists = $m->comp(
       		"/results/order_entries.mas",
       		tourn => $tourn,
			basis => "final",
			event => $event,
			no_prep => 1,
			finals_only => "1");

		push (@{$finalists_by_event{$event->id}}, @finalists);

	}


	system "$Tab::logger Preparing the document" if $debug;

	my $basename = "/tmp/school-reports-school-".$school->id."-".$session->id;

    my $filename = $Tab::file_root."".$basename;
    my $garbage = `rm -f $filename.*`;

    open (TEXOUT, ">$filename.tex");

	print TEXOUT <<"EOF";

\\documentclass[10pt]{letter}
\\usepackage{fullpage}
\\usepackage{helvet}
\\usepackage{colortbl}
\\usepackage{fancyhdr,lastpage}
\\usepackage[hmargin=.8in,vmargin=.7in]{geometry}

\\pagestyle{fancy}
\\fancyhf{} % clear all header and footer fields
\\fancyfoot[R]{\\footnotesize Page \\thepage\\ of \\pageref{LastPage}}
\\fancyfoot[L]{\\footnotesize Printed by the Tabroom.com free online tournament management system}
\\renewcommand{\\headrulewidth}{0pt}
\\renewcommand{\\footrulewidth}{0pt}

\\renewcommand{\\familydefault}{\\sfdefault}
\\renewcommand{\\arraystretch}{1.4}

\\addtolength{\\textwidth}{1in}
\\addtolength{\\hoffset}{-.1in}

\\begin{document}
\\small

EOF

my $tabular_row = "\\begin{tabular}{p{.35in}p{.35in}p{1.5in}p{.35in}p{3.25in}p{.5in}}\n";

	system "$Tab::logger Figuring out who counts" if $debug;

	my %entries_counted = $m->comp("/results/school_count.mas", school => $school, tourn => $tourn);
	my $school_points;

	system "$Tab::logger Adding up total sweepstakes points" if $debug;

	foreach my $comp ($school->entries) {
	   	$school_points = $school_points + $comp->sweeps_points if $entries_counted{$comp->id};
    }

	system "$Tab::logger Printing header " if $debug;

	print TEXOUT "\\begin{tabular}{lr}\n";
	print TEXOUT "{\\Large ".&Tab::texify($school->chapter->name) ."'s results at ".&Tab::texify($tourn->name)."} & ";
	print TEXOUT "{\\large    Total Points: $school_points }\\\\ \n" if $school_points;
	print TEXOUT "\\end{tabular} \n\\newline \n";

	print TEXOUT $tabular_row;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.94}\[5.5pt\]\[5.5pt\]\n";
    print TEXOUT "Code & Event & Name & Pts & Results & Place \\\\ \n";
	print TEXOUT "\\end{tabular} \n\\newline \n";
	print TEXOUT "\\small\n";

	my $switch; 

	system "$Tab::logger Printing results begin:" if $debug;

	COMP:
	foreach my $comp (sort {$a->code <=> $b->code} $school->entries) {

		next if $comp->waitlist == 1|| $comp->dropped == 1;

		my @ballots = Tab::Ballot->search_ordered_by_round($comp->id); 
		next COMP unless @ballots;

		print TEXOUT $tabular_row;
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);

		print TEXOUT $comp->code." & ";
		print TEXOUT $comp->event->abbr." & ";
		print TEXOUT ($comp->event->team == 1) ? substr($comp->student->last.", ".$comp->student->first,0,20) : "";
		print TEXOUT ($comp->event->team == 2) ? substr($comp->student->last." \\& ".$comp->partner->last,0,20) : "";
		my $c_name = $comp->name if $comp->event->team;
		$c_name =~ s/\&/\\\&/g;
	
		print TEXOUT ($comp->event->team == 3) ? substr($c_name,0,20) : "";

		print TEXOUT  "*" if $comp->event->team == 1 && $comp->student->novice;
		print TEXOUT  "*" if $comp->event->team == 2 && ($comp->student->novice || $comp->partner->novice);

		print TEXOUT " & ";
		print TEXOUT ($entries_counted{$comp->id}) ? "{\\bf".$comp->sweeps_points."}" : $comp->sweeps_points unless $comp->dropped;
		print TEXOUT "DROP" if $comp->dropped;
		print TEXOUT " & ";

		if ($comp->event->type eq "speech") {
			foreach my $ballot (@ballots) { 
				print TEXOUT $ballot->rank."/".$ballot->points;
				print TEXOUT " \\emph{(".$ballot->real_rank."/".$ballot->real_points.") }" 
					if $ballot->real_rank != $ballot->rank;
				print TEXOUT " ";
			}
		}

		print TEXOUT " & ";

		my $comp_rank;
		my $rank;

		foreach my $finalist (@{$finalists_by_event{$comp->event->id}}) {
			$rank++;
			next if $finalist->id != $comp->id;
			$comp_rank = $rank;
		}	

		print TEXOUT "{\\bf ".$comp_rank if $comp_rank;

		print TEXOUT "st }" if $comp_rank == 1;
		print TEXOUT "nd }" if $comp_rank == 2;
		print TEXOUT "rd }" if $comp_rank == 3;
		print TEXOUT "th }" if $comp_rank != 3 && $comp_rank != 2 && $comp_rank != 1 && $comp_rank > 0;

		print TEXOUT "\\end{tabular} \n\\newline \n";

	}

	system "$Tab::logger Printing results end." if $debug;

	print TEXOUT "\\end{document}\n";
	close TEXOUT;

	`cd $Tab::file_root/tmp; $Tab::latex_path $filename.tex; $Tab::latex_path $filename.tex; $Tab::dvipdfm_path $filename.dvi`;

	`rm -f $filename.tex $filename.log $filename.dvi $filename.aux` unless $debug;

	$m->redirect($Tab::url_prefix."".$basename.".pdf");

</%init>

