<%args>
	$school_id
	$housing_id
	$student_id => undef
	$judge_id => undef
	$err => undef
	$account
	$session
</%args>
<%init>

	my $housing = Tab::Housing->retrieve($housing_id);
	my $tourn = $housing->tournament;
	my $school = Tab::School->retrieve($school_id);

	#Check permissions
	$account->can_alter($school);

	if ($student_id && $judge_id) { 

		$err = "Oh, hey now.  You can only transfer a housing request to a
		judge OR a student, not both!  Try again, and make sure one slot
		blank."; 

		$m->redirect("housing_transfer.mhtml?housing_id=$housing_id&school_id=$school_id&err=$err");

	}


	my $old = $housing->student if ($housing->student && $housing->student->id);
	$old = $housing->judge if $housing->judge && $housing->judge->id;

	if ($student_id) { 

		my $student = Tab::Student->retrieve($student_id);

		# Get rid of existing request if one exists
		my $ex = $student->housing($tourn, $housing->night);
		$ex->delete if $ex;

		$housing->student($student_id);
		$housing->judge("");
		$housing->type("student");
		$housing->update;

		if ($tourn->method->track_reg_changes) {

			my $regline = $account->first." ".$account->last." Transferred
			housing from ".$old->first." ".$old->last." to ".$student->first."
			".$student->last;

			my $change = Tab::Change->create({
       			tournament => $tourn->id,
        		school => $school->id,
				type => "registration",
           		regline => $regline
        	});

		}

		my $msg = "Housing request transferred to ".$student->first." ".$student->last;
		$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg");

	}

	if ($judge_id) {

		my $judge = Tab::Judge->retrieve($judge_id);

		my $ex = $judge->housing($housing->night);
		$ex->delete if $ex;

		$housing->judge($judge_id);
		$housing->student("");
		$housing->type("judge");
		$housing->update;

		if ($tourn->method->track_reg_changes) {

			my $regline = " Transferred housing from ".$old->first." ".$old->last." 
							to ".$judge->first." ".$judge->last;

			my $change = Tab::Change->create({
       			tournament => $tourn->id,
        		school => $school->id,
				type => "registration",
           		regline => $regline
        	});

		}

		my $msg = "Housing request transferred to ".$judge->first." ".$judge->last;

		$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg");
	}

	my @students_without_housing;
	my @judges_without_housing;

	STUDENT:
	foreach my $student ($school->students) { 
		my $hs = $student->housing($tourn, $housing->night);

		if ($hs) { 
			next STUDENT unless $hs->waitlist > 0 && $housing->waitlist < 1;
		}

		push (@students_without_housing, $student);
	}

	JUDGE:
	foreach my $judge ($school->judges) {

		my $hs = $judge->housing($housing->night);

		if ($hs) { 
			next JUDGE unless $hs->waitlist > 0 && $housing->waitlist < 1;
		}

		push (@judges_without_housing, $judge);
	}

	my $person = $housing->judge if $housing->type eq "judge";
	$person = $housing->student if $housing->type eq "student";

</%init>

	<h2><% $school->name %> at the <% $tourn->name %></h2>
    <& menubar.mas, school => $school, whoami => "housing" &>

	<div class="left huge">

	<h3>Transfer <% $person->first." ".$person->last %>'s housing:</h3>

	<p>Housing for the night of <% Tab::nicedate($housing->night) %>.</p>

	<form action="housing_transfer.mhtml" method="post">
	<input type="hidden" name="housing_id" value="<% $housing->id %>">
	<input type="hidden" name="school_id" value="<% $school->id %>">

	<table cellpadding="7" cellspacing="1" width="100%">

%	my $switch;

%		if (@students_without_housing) { 

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\""%> >

				<th>
					To a Student:
				</th> 
				
				<td> 
					<select name="student_id">
						<option value="">Select one:</option>

%						foreach my $student (sort {$a->last cmp $b->last} @students_without_housing) {
							<option value="<% $student->id %>">
								<% $student->last.", ".$student->first %>
							</option>
%						}
					</select>
				</td>

			</tr>

%		}

%		if (@judges_without_housing) { 

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\""%> >
	
				<th>
					To a judge*
				</td>

				<td>
					<select name="judge_id">
						<option value="">Select one:</option>
%						foreach my $judge (sort {$a->last cmp $b->last} @judges_without_housing) {
							<option value="<% $judge->id %>"><% $judge->last." ".$judge->first %></option>
%						}
					</select>
				</td>
			</tr>

%		}

%		unless (@judges_without_housing || @students_without_housing) { 

			<tr>
				<th colspan="2">
					Your entire entry has housing.  You cannot transfer this request.
				</th>
			</tr>

%		} else { 

		<tr class="liblrow">
			<td colspan="2" class="right">
			<input type="submit" value="   Transfer Housing Request   ">
			</form>
		</tr>


		<tr>
			<td style="padding-top: 25px;">
			</td>
		</tr>
	

		<tr class="lirdrow">
			<td colspan="2" style="line-height: 24px; border: 1px solid red;">
				*Remember, typically tournaments only provide housing for judges who are still
				in high school, not adults or college students.  Please consult the tournament's
				invitation before requesting housing for a judge.
			</td>
		</tr>

%		}

	</table>

	</div>

    <div class="right small">

		<a class="blue block" href="housing.mhtml?school_id=<% $school_id %>">
			Return to Housing Screen
		</a>

%       if ($tourn->method->housing_message) {

            <h3>Housing Policy/Messages:</h3>

                <p>
                    <% $tourn->method->housing_message %>
                </p>

%       }

    </div>


