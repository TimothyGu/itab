<%args>
	$student_id
	$school_id
	$tourn_id
	$account
	$day
	$err => undef
</%args>
<%perl>

	my $now = DateTime->now();

	my $student = Tab::Student->retrieve($student_id);
	my $school = Tab::School->retrieve($school_id);
	my $tourn = Tab::Tourn->retrieve($tourn_id);
	my $night = DateTime::Format::MySQL->parse_date($day);

	#Does the student have gender?	
	unless ($student->gender) { 
		my $err = "You must fill in the student's gender before you can request housing";
		$m->redirect("housing.mhtml?histu=$student_id&err=$err&school_id=$school_id");
	}

	# How many slots do we have tonight? 
	my @slots = Tab::HousingSlots->search( night => $night->ymd, tournament => $tourn->id );
	my $num_slots = $slots[0]->slots;

	# Are we over that number of requests already?
	my @requests =  Tab::Housing->search( night => $night->ymd, tournament => $tourn->id );
	my $waitlist = 0;
	$waitlist++ if $num_slots < scalar @requests;

	$err = "The student has been placed on the housing waitlist because tournament housing is full.  The student will be removed should space open up; you will be notified by email if this happens." if $waitlist;

	# Is the student waitlisted?
	my $only_waitlisted = 1;

	foreach my $entry ($student->entries($tourn)) { 
		$only_waitlisted = 0 unless $entry->waitlist;
	}

	if ($only_waitlisted) { 
		$waitlist++;
		$err = "The student has been placed on the housing waitlist because ";
		$err .= "s" if $student->gender eq "F"; 
		$err .= "he is waitlisted in the tournament.";
	}

	my $existing_request = $student->housing($tourn, $night);
	
	my $housing_request = Tab::Housing->create({
		tournament => $tourn->id,
		night => $night,
		student => $student_id,
		waitlist => $waitlist,
		requested => $now,
		type => "student"
	}) unless $existing_request;

	if ($tourn->method->track_reg_changes) {

       my $regline = $account->first." ".$account->last." Requested housing for ".$student->first." ".$student->last;

        my $change = Tab::Change->create({
           tournament => $tourn->id,
           school => $school_id,
           type => "registration",
           regline => $regline
        });

	}    


	$err = "Housing for ".$student->first." ".$student->last." on ".$night->day_name." confirmed." unless $waitlist;

	$m->redirect("housing.mhtml?err=$err&school_id=$school_id");

</%perl>
