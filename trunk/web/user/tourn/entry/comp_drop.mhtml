<%args>
	$comp_id
	$school_id
	$confirmed => undef
	$account
</%args>
<%init>

	my $comp = Tab::Entry->retrieve($comp_id);
	my $school = Tab::School->retrieve($school_id);

	unless ($comp) { 
		$m->redirect("students.mhtml?school_id=$school_id");
	}

	my $event = $comp->event;

	my $tourn = $event->tournament;

	my $now = DateTime->now;

	if ($tourn->drop_deadline < $now) { 

		my $err = "The online drop deadline for this tournament has passed.  Please contact the tournament directly";
		$m->redirect("students.mhtml?comp_id=$comp_id&school_id=$school_id&err=$err");

	}

	unless ($confirmed) { 

#		Is this a Waitlisted event?  If so, warn the person.

		my $wl_warn;
		my $caphit;
		
		if ($event->school_cap || $event->cap) { 

            $caphit = "Your school's limit of ".$event->school_cap." Reached" if (
                 ((scalar Tab::Entry->search( school => $school->id, event => $event->id, waitlist => 0)) >=
                    ($event->school_cap)) && ($event->school_cap > 0)
            );

            $caphit = "This event is full." if (
                ((scalar Tab::Entry->search(event => $event->id, dropped => 0, waitlist => 0)) >= ($event->cap)) && ($event->cap > 0)
            ) ;

			$wl_warn++ if $caphit;

		}

		my $h_warn;

		foreach my $student ($comp->members) { 

			if ($student->housing($tourn)) { 

				$h_warn++;

			}
		}

		my $add_warn++ if $event->deadline < $now || $tourn->reg_end < $now;

		$m->redirect("drop_confirm.mhtml?comp_id=$comp_id&school_id=$school_id&h_warn=$h_warn&wl_warn=$wl_warn&add_warn=$add_warn") if $wl_warn || $h_warn || $add_warn;

	}

	
	if ($tourn->method->track_reg_changes) { 
			
		my $regline = $account->first." ".$account->last." dropped ".$comp->event->abbr." competitor ".$comp->code; 
	
		foreach my $student ($comp->members) {  $regline .= " ".$student->first." ".$student->last; } 
		
		my $change = Tab::Change->create({
			tournament => $tourn->id,
			school => $school_id,
			type => "registration",
			regline => $regline
		}); 
		
	} 

	foreach my $student ($comp->members) { 

		foreach my $housing ($student->housing($tourn)) { 
			$housing->delete if $housing;
		}

	}

	my $msg = "Entryetitor ".$comp->team_name." dropped";

	if ($tourn->freeze_deadline > $now) { 
		
		$comp->delete();

	} else { 
	
		$comp->dropped(1);
		$comp->dropped_at($now); 
		
		my $drop_reason = "Dropped ". $comp->code ." by ".$account->last; 

		if ($tourn->fine_deadline < $now && $comp->waitlist < 1) { 
		
			my $fine = Tab::Fine->create({
				school => $comp->school->id,
				amount => $tourn->method->drop_fine,
				reason => $drop_reason,
				levied => $now
			}) if $tourn->method->drop_fine > 0; 
			
		} 
		
		$comp->update;

	}

	$m->redirect("students.mhtml?event_id=".$event->id."&school_id=$school_id&msg=$msg");

</%init>

