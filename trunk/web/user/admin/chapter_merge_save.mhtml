<%args>
	$chapter_id
	$other_id
	$account
</%args>
<%init>

	if ($other_id == $chapter_id) { 
		$m->print("<p><b>You're trying to merge a chapter into itself.</b></p>"); 
		$m->abort();
	}

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my $other = Tab::Chapter->retrieve($other_id);

	my %other_students_by_name = ();

	foreach my $ms ($other->students) { 
		my $key = $ms->first."-".$ms->last;
		$other_students_by_name{$key} = $ms->id;
	}

	my %other_judges_by_name = ();

	foreach my $mu ($other->chapter_judges) { 
		my $key = $mu->first."-".$mu->last;
		$other_judges_by_name{$key} = $mu->id;
	}

	foreach my $student ($chapter->students) { 

		my $stu_key = $student->first."-".$student->last."-".$student->grad_year;

		if ($other_students_by_name{$stu_key}) { 

			# If a student exists in the chapter being merged into who has the
			# exact same name and graduation year, we're going to take a gamble
			# and say they're the same kid and merge them too.

			$m->comp("student_merge.mas", 
						student_id => $student->id, 
			  			other_id => $other_students_by_name{$stu_key}
					);

		} else { 
			$student->chapter($other_id);
			$student->update;
		}
	}	

	foreach my $chapter_judge ($chapter->chapter_judges) { 

		my $chapter_judge_key = $chapter_judge->first."-".$chapter_judge->last;

		if ($other_judges_by_name{$chapter_judge_key}) { 

			# If a chapter_judge exists in the chapter being merged into who has the
			# exact same name and graduation year, we're going to take a gamble
			# and say they're the same kid and merge them too.

			$m->comp("judge_merge.mas", 
						chapter_judge_id => $chapter_judge->id, 
			  			other_id => $other_judges_by_name{$chapter_judge_key}
					);

		} else { 
			$chapter_judge->chapter($other_id);
			$chapter_judge->update;
		}
	}	

	#student_results

	Tab::Chapter->set_sql( change_chapter => "
		UPDATE school SET chapter = $other_id
		WHERE chapter = $chapter_id ");

	# accounts with access

    my %other_access_admins = ();

    foreach my $account ($chapter->admins) {

			my @already = Tab::ChapterAdmin->search(
				chapter => $chapter->id,
				account => $account->id );

			push (@already, Tab::ChapterAdmin->search(
				chapter => $other->id,
				account => $account->id ));

			foreach my $al (@already)  {
				$al->delete;
			}

			Tab::ChapterAdmin->create({
				chapter => $other->id,
				account => $account->id });

    }

	my $msg = "Chapter ".$chapter->id." was merged into ".$other->id." by ".$account->email;

	system "$Tab::logger $msg";

	$chapter->delete;

	$m->redirect("chapter_merge.mhtml?chapter_id=$other_id&msg=$msg");

</%init>
