<%flags>
	inherit => undef
</%flags>
<%perl>

	use PHP::Serialization;
	use MIME::Base64;
	use Crypt::Rijndael;
	use Crypt::ECB;

	my %cookies = Apache2::Cookie->fetch;

	foreach my $key (keys %cookies) { 
		$m->print($key);
	}

	my $serialized_data = $cookies{'CHOCOLATECHIP'}->value;

	$m->print("<p>");
	$m->print("Serialized: ");
	$m->print($serialized_data);
	$m->print("</p>");

	my $debased_data = decode_base64($serialized_data);

	$m->print("<p>");
	$m->print("Decoded: ");
	$m->print($debased_data);
	$m->print("</p>");

	my $key = "kKLAxkjp1t9o7Aex";

#	my $crypt = Crypt::ECB->new;
#	$crypt->padding(PADDING_AUTO);
#	$crypt->cipher('Rijndael') || die $crypt->errstring;
# 	$crypt->key($key);

	$m->print("<p>");
	$m->print("Key: ");
	$m->print($key);
	$m->print("</p>");

#	my $plain = $crypt->decrypt_hex($debased_data);

	my $cipher = Crypt::Rijndael->new( $key , Crypt::Rijndael::MODE_ECB());
	my $plain = $cipher->decrypt($debased_data);

	$m->print("<p>");
	$m->print("Plain: ");
	$m->print($plain);
	$m->print("</p>");

	my ($garbage, $namebit, $mailbit, $initbit, $typebit) =  split(/s:4:/, $plain);

	my @lulz = split(/\"/, $namebit);
	my $name = $lulz[3];

	@lulz = split(/\"/, $mailbit);
	my $email = $lulz[3];

	@lulz = split(/\"/, $initbit);
	my $site = $lulz[3];
	my $timestamp = $lulz[10];
	$timestamp =~ s/[\D_]//g;

	$m->print("<p>");
	$m->print("Name is $name");
	$m->print("</p>");

	$m->print("<p>");
	$m->print("Email is $email");
	$m->print("</p>");

	$m->print("<p>");
	$m->print("Site is $site");
	$m->print("</p>");

	my $time = DateTime->from_epoch( epoch => $timestamp );

	$m->print("<p>");
	$m->print("Timestamp is $timestamp");
	$m->print(Tab::nicedt($time)." ".Tab::tzname($time->time_zone->name));
	$m->print("</p>");

</%perl>
