<%args>
	$event
	$round
</%args>
<%perl>

	my @entries = $event->entries;
	my @ballots = $event->ballots;
	my @panels = $event->panels;

	my %ballots_by_comp = ();
	my %ballots_by_panel = ();
	my %ballots_by_judge = ();

	foreach my $ballot (@ballots) { 
		push (@{$ballots_by_comp{$ballot->comp->id}}, $ballot);
		push (@{$ballots_by_panel{$ballot->panel->id}}, $ballot);
		push (@{$ballots_by_judge{$ballot->judge->id}}, $ballot);
	}

	my %panels_by_id = ();

	foreach my $panel (@panels) { 
		$panels_by_id{$panel->id} = $panel;
	}

	my $basis = $round->type;

    my @tiebreakers = $tourn->method->tiebreaks(covers => $basis);

	unless (@tiebreakers) { 

		my $err = "You have not defined tiebreakers for the level $basis.  Do so and try again" unless @tiebreakers;
		$m->redirect("$Tab::url_prefix/setup/rules/tiebreaks.mhtml?err=$err");
	
	}

	my %tiebreaker_priorities = ();

    foreach my $tb (@tiebreakers) {
		push (@{$tiebreaker_priorities{$tb->priority}}, $tb);
	}

	my @priorities = sort keys %tiebreaker_priorities;

	my %sort_priorities = ();

	foreach my $priority (@priorities) { 

		my @tiebreakers = @{$tiebreaker_priorities{$priority}};	

		foreach my $tiebreak (@tiebreakers) { 

			if ($tiebreak->tiebreaker eq "cumulative") { 

				foreach my $comp (
				

			}

			if ($tiebreak->tiebreaker eq "reciprocals") { 

			}

			if ($tiebreak->tiebreaker eq "points") {

			}

			if ($tiebreak->tiebreaker eq "judgepref") { 

			}

			if ($tiebreak->tiebreaker eq "roundrank") {

			}

			if ($tiebreak->tiebreaker eq "competition") {

			}

			if ($tiebreak->tiebreaker eq "rankinround") {

			}

			if ($tiebreak->tiebreaker eq "panelletter") {

			}

			if ($tiebreak->tiebreaker eq "coinflip") {

			}

		}

	}

</%perl>


