<%args>
	$tourn
	$debug => 1
	$cooke => undef
</%args>
<%perl>

	$m->comp("/results/prep_ballots.mas", tourn => $tourn);

	my @dioceses = $tourn->regions;
	system "$Tab::logger I have ".scalar @dioceses." dioceses" if $debug;

	my @schools = $tourn->schools;
	system "$Tab::logger I have ".scalar @schools." schools" if $debug;

	my @speech_comps = $tourn->speech_comps;
	system "$Tab::logger I have ".scalar @speech_comps." speech kiddies" if $debug;

	my @debate_comps = $tourn->debate_and_congress_comps;
	system "$Tab::logger I have ".scalar @debate_comps." debate kiddies" if $debug;

	my @ballots = $tourn->speech_ballots;
	system "$Tab::logger I have ".scalar @ballots." ballots" if $debug;

	my %sweeps_by_comp;
	my %comps_by_diocese;
	my %sweeps_by_diocese;
	my %dioceses_by_school = ();

	system "$Tab::logger Putting schools into a hash by diocese" if $debug;

	foreach my $school (@schools) {
		$dioceses_by_school{$school->id} = $school->region->id;
	}

	system "$Tab::logger Calculating out ballots into sweeps points into the comp hash" if $debug;

	foreach my $ballot (@ballots) { 

		next if $ballot->noshow;
		next if $ballot->countmenot;

		my $sweeps = (6 - $ballot->rank) if $ballot->rank > 0;
		$sweeps = 1 if $sweeps < 1 && $ballot->rank > 0;

		$sweeps_by_comp{$ballot->comp->id} += $sweeps;

	}

	system "$Tab::logger Sorting the speech sweeps points into the competitor records " if $debug;

	foreach my $comp (@speech_comps) {
		push (@{$comps_by_diocese{$dioceses_by_school{$comp->school->id}}}, $comp);
	}

	system "$Tab::logger Sorting the debate sweeps points into the competitor records " if $debug;

	my %debate_comps = ();

	foreach my $comp (@debate_comps) {
		push (@{$comps_by_diocese{$dioceses_by_school{$comp->school->id}}}, $comp);
		$sweeps_by_comp{$comp->id} = $comp->sweeps_points;
		$debate_comps{$comp->id}++;
	}

	system "$Tab::logger Sorting the competitors' sweeps points into the dioceses " if $debug;

	foreach my $diocese (@dioceses) { 

		next unless $comps_by_diocese{$diocese->id};

		my $top_interp;
		my $top_address;
		my $top_debate;
		
		my @comps = @{$comps_by_diocese{$diocese->id}};

		@comps = sort {$sweeps_by_comp{$b->id} <=> $sweeps_by_comp{$a->id}} @comps;

		foreach (1 .. 10) { 
            my $counted_comp = shift @comps;
            next unless $counted_comp;
            $sweeps_by_diocese{$diocese->id} += $sweeps_by_comp{$counted_comp->id};
		}

		system "$Tab::logger sweeps for ".$diocese->name." is ".$sweeps_by_diocese{$diocese->id} if $debug;
		$diocese->sweeps($sweeps_by_diocese{$diocese->id});
		$diocese->update;
	}

	system "$Tab::eventlog Coming up on saving Cooke award points for future nationals" if $debug;

	if ($cooke eq "do") { 

		system "$Tab::eventlog Saving Cooke award points for future nationals" if $debug;

		foreach my $diocese (@dioceses) { 
			my $cooke = $diocese->cooke_pts;
			$cooke += $diocese->sweeps;
			$diocese->cooke_pts($cooke);
			$diocese->update;
		}
	}

	if ($cooke eq "undo") {

		foreach my $diocese (@dioceses) { 
			my $cooke = $diocese->cooke_pts;
			$cooke -= $diocese->sweeps;
			$diocese->cooke_pts($cooke);
			$diocese->update;
		}

	}

	@dioceses = sort {$sweeps_by_diocese{$b->id} <=> $sweeps_by_diocese{$a->id}} @dioceses;

	return\%sweeps_by_diocese, @dioceses;

</%perl>

