<%args>
	$chapter_id
	$other_id
	$account
</%args>
<%init>

	if ($other_id == $chapter_id) { 
		$m->print("<p><b>You're trying to merge a chapter into itself.</b></p>"); 
		$m->abort();
	}

	my $chapter = Tab::Chapter->retrieve($chapter_id);

	my $other = Tab::Chapter->retrieve($other_id);

	my %other_students_by_everything = ();

	foreach my $ms ($other->students) { 
		my $key = $ms->first."-".$ms->last."-".$ms->grad_year;
		$other_students_by_everything{$key} = $ms->id;
	}

	my %other_ubers_by_everything = ();

	foreach my $mu ($other->ubers) { 
		my $key = $mu->first."-".$mu->last;
		$other_ubers_by_everything{$key} = $mu->id;
	}

	foreach my $student ($chapter->students) { 

		my $stu_key = $student->first."-".$student->last."-".$student->grad_year;

		if ($other_students_by_everything{$stu_key}) { 

			# If a student exists in the chapter being merged into who has the
			# exact same name and graduation year, we're going to take a gamble
			# and say they're the same kid and merge them too.

			$m->comp("student_merge.mas", 
						student_id => $student->id, 
			  			other_id => $other_students_by_everything{$stu_key}
					);

		} else { 
			$student->chapter($other_id);
			$student->update;
		}
	}	

	foreach my $uber ($chapter->ubers) { 

		my $uber_key = $uber->first."-".$uber->last;

		if ($other_ubers_by_everything{$uber_key}) { 

			# If a uber exists in the chapter being merged into who has the
			# exact same name and graduation year, we're going to take a gamble
			# and say they're the same kid and merge them too.

			$m->comp("uber_merge.mas", 
						uber_id => $uber->id, 
			  			other_id => $other_ubers_by_everything{$uber_key}
					);

		} else { 
			$uber->chapter($other_id);
			$uber->update;
		}
	}	

	#student_results

	my @fields = (
		"student_result",
		"school",
		"coach",
		"due_payment");

	foreach my $field (@fields) { 
		Tab::Chapter->set_sql( change_chapter => "
			UPDATE $field SET chapter = $other_id
			WHERE chapter = $chapter_id ");
		Tab::Chapter->sql_change_chapter->execute;
	}

	#accounts with access

    my %other_access_coaches = ();

    foreach my $account ($chapter->coaches) {

			my @already = Tab::ChapterAccess->search(
				chapter => $chapter->id,
				account => $account->id );

			push (@already, Tab::ChapterAccess->search(
				chapter => $other->id,
				account => $account->id ));

			foreach my $al (@already)  {
				$al->delete;
			}

			Tab::ChapterAccess->create({
				chapter => $other->id,
				account => $account->id });

    }

	#league memberships
    my %other_league = ();

    foreach my $league_mem ($other->league_joins) {
        $other_league{$league_mem->league->id}++;
    }

    foreach my $league_mem ($chapter->league_joins) {
        unless ($other_league{$league_mem->league->id}) {
            $league_mem->chapter($other->id);
            $league_mem->update;
        } else { 
			$league_mem->delete;
		}
    }

	my $err = "Chapter ".$chapter->id." was merged into ".$other->id." by ".$account->email;

	system "$Tab::logger $err";

	$chapter->delete;

	$m->redirect("/admin/chapter/chapter_merge.mhtml?chapter_id=$other_id&err=$err");

</%init>
