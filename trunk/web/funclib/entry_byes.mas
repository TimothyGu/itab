<%args>
	$event
	$round    => undef
	$last     => undef
	$public   => undef
	$elimstoo => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main(); 

	my $round_limit = " and round.name <= ".$round->name." " if $round && $round->name;
	$round_limit .= " and round.post_results > 0 " if $public;
	my $bye_limit .= " and panel.bye = 0" if $round && $round->type ne "elim" && $round->type ne "final";

	my $lastq = 'and round.type != "elim" and round.type != "final" ';
	$lastq = " and round.name = ".$round->name if $last;
	undef $lastq if $elimstoo == 42;

	# Do not do the below.  It breaks elim round advancement by removing the
	# limit on counting ballots from only the last elim round, which is what
	# the $last flag asks for -- Palmer

	#unless ($elimstoo == 42) {
	#	$lastq = 'and round.type != "elim" and round.type != "final" ';
	#} else {
	#	$lastq='';
	#}
	
	my %entry_byes = ();

	my $bye_sth = $dbh->prepare('
		select entry.id, count(distinct panel.id) as byes
        from round, panel, entry, ballot exist
        where entry.event = '.$event->id.'
        and entry.id = exist.entry
        and panel.id = exist.panel
		and panel.round = round.id
		and panel.bye = 1
		'.$round_limit .'
		'.$lastq.'
		and not exists ( 
			select ballot_value.id
			from ballot_value, ballot bany
			where ballot_value.tag = "ballot"
			and ballot_value.ballot = bany.id
			and ballot_value.value = 1
			and bany.panel = panel.id
		)
        group by entry.id
        order by entry.code
	');

	$bye_sth->execute();

	while( my ($entry_id, $byes) = $bye_sth->fetchrow_array() ) {
		$entry_byes{$entry_id} = 0 unless $entry_byes{$entry_id};
		$entry_byes{$entry_id} += $byes;
	}

	my $ballot_bye_sth = $dbh->prepare('
		select entry.id, count(distinct panel.id) as byes
        from round, panel, entry, ballot
        where entry.event = '.$event->id.'
        and entry.id = ballot.entry
        and panel.id = ballot.panel
		and panel.round = round.id
		and panel.bye = 0
		'.$round_limit .'
		'.$lastq.'
		and ballot.bye = 1
		and ballot.noshow = 0
        group by entry.id
        order by entry.code
	');

	$ballot_bye_sth->execute();

	while( my ($entry_id, $byes) = $ballot_bye_sth->fetchrow_array() ) {
		$entry_byes{$entry_id} = 0 unless $entry_byes{$entry_id};
		$entry_byes{$entry_id} += $byes;
	}

	return %entry_byes;

</%init>
