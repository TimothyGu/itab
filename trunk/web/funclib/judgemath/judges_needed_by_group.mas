<%args>	
	$group
	$school => undef
	$region => undef
</%args>
<%init>

	use POSIX;

	if ($region) { 

			Tab::Entry->set_sql(entry_groups => "select distinct entry.id 
							from entry,class,event,judge_group,chapter
							where entry.event = event.id 
							and event.no_judge_burden = 0
							and event.judge_group = judge_group.id 
							and entry.school = chapter.school  
							and entry.waitlist != 1
							and entry.unconfirmed != 1
							and chapter.region = ? 
							and judge_group.id = ? ");

			my @entries = Tab::Entry->search_entry_groups( $region->id, $group->id );
	
			my $judge_burden = ceil( (scalar @entries) / $group->setting("judge_per")) if $group->setting("judge_per") != 0;
			$judge_burden = ceil( (scalar @entries) * $group->setting("rounds_per")) if $group->setting("rounds_per") != 0;
	
			$judge_burden = $group->setting("dio_min") if $group->setting("dio_min");
	
			$judge_burden = $group->setting("min_burden") if $group->setting("min_burden") && $group->setting("min_burden") > $judge_burden && @entries;

			$judge_burden = $group->setting("max_burden") if $group->setting("max_burden") && $group->setting("max_burden") < $judge_burden && @entries;

			$judge_burden = $judge_burden - $group->setting("free");

			return $judge_burden;

		} else { 

			my @entries = $m->comp("/funclib/group_entries.mas", group => $group, school => $school);
	
			my $judge_burden = ceil( (scalar @entries) / $group->setting("judge_per")) if $group->setting("judge_per") != 0;
			$judge_burden = ceil( (scalar @entries) * $group->setting("rounds_per")) if $group->setting("rounds_per") != 0;

			$judge_burden = $group->setting("min_burden") if $group->setting("min_burden") && $group->setting("min_burden") > $judge_burden && @entries;
	
			$judge_burden = $group->setting("max_burden") if $group->setting("max_burden") && $group->setting("max_burden") < $judge_burden && @entries;

			$judge_burden = $judge_burden - $group->setting("free");

			return $judge_burden;

		}
	

</%init>
