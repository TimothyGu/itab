<%args>	
	$group
	$school => undef
	$region => undef
	$debug => undef
</%args>
<%init>

	use POSIX;

	my $slots;
	my @entries;

	if ($region) { 

		Tab::Entry->set_sql(entry_groups => "select distinct entry.id 
							from entry,class,event,judge_group,chapter
							where entry.event = event.id 
							and event.class = class.id
							and event.no_judge_burden = 0
							and class.judge_group = judge_group.id 
							and entry.school = chapter.school  
							and entry.waitlist != 1
							and chapter.region =". $region->id." 
							and judge_group.id = ".$group->id);

		@entries = Tab::Entry->search_entry_groups;
		$slots -= $group->dio_min * $group->judge_per if $group->dio_min;

	} else { 

		@entries = Tab::Entry->search_by_group_school( $school->id, $group->id);
		$slots = scalar @entries;
	}

	system "$Tab::logger Slots owed is $slots at first step" if $debug;

	if ($group->min_burden && @entries) { 
		$slots = $group->min_burden * $group->judge_per if ($group->min_burden * $group->judge_per) > $slots;
	}

	if ($group->max_burden && @entries) { 
		$slots = $group->max_burden * $group->judge_per if ($group->max_burden * $group->judge_per) < $slots;
	}

	$slots -= $group->free * $group->judge_per;

	$slots = 0 if $slots < 0;

	system "$Tab::logger Slots owed is $slots at second step for group ".$group->abbr if $debug;

	return $slots;


</%init>
