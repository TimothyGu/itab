<%args>
	$judge
	$entry
</%args>
<%init>

	my $prelim;

	return unless $judge && $entry;

	Tab::debuglog("Judge checking for ".$judge->last." and entry ".$entry->code);

	return if ($judge->school->id == $entry->school->id)
			&! (  $entry->event->setting("allow_judge_own")
		          || ($judge->setting("neutral") && $judge->judge_group->tourn->setting("allow_neutral_judges"))  );

	Tab::debuglog("No more same school match");

	my @ballots = Tab::Ballot->search( judge => $judge->id, entry => $entry->id );

	Tab::debuglog("Found ".scalar @ballots." ballots");

	if (@ballots) { 
		if ($entry->event->setting("repeat_judge_elims")) { 
			foreach my $ballot (@ballots) { 
				$prelim++ unless $ballot->panel->round->type eq "elim" || $ballot->panel->round->type eq "final";
			}
		} else { 
			return;
		}
	}

	Tab::debuglog("No mutual ballots found");

	Tab::Rating->set_sql( by_strike => "
		select distinct rating.* 
		from rating, rating_tier
		where rating.judge = ? 
		and rating.entry = ? 
		and rating.rating_tier = rating_tier.id
		and rating_tier.strike = 1
	");

	return if Tab::Rating->search_by_strike($judge->id, $entry->id);

	Tab::debuglog("No MJP rating strike found");

	foreach my $strike ($judge->strikes) { 

		next if $strike->entry && $strike->entry->id && $strike->entry->id != $entry->id;
		next if $strike->school && $strike->school->id && $strike->school->id != $entry->school->id;
		next if $strike->event &&  $strike->event->id && $strike->event->id != $entry->event->id;

		return if $strike->entry && $strike->entry->id == $entry->id && $strike->type eq "entry";
		return if $strike->entry && $strike->entry->id == $entry->id && $strike->type eq "conflict";

		return if $strike->school && $strike->school->id == $entry->school->id && $strike->type eq "school";
		return if $strike->school && $strike->school->id == $entry->school->id && $strike->type eq "conflict";

		return if $strike->event && $strike->event->id == $entry->event->id && $strike->type eq "event";
		$prelim++ if $strike->event && $strike->event->id == $entry->event->id && $strike->type eq "prelim";
		
	}

	Tab::debuglog("WHEEEEEEEEEEEEEEEEEEEEE  No other conflict or strike found.  $prelim");

	return "elim" if $prelim;
	return 1;

</%init> 
