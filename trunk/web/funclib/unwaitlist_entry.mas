<%args>
	$entry
	$account
</%args>
<%init>


	my $tourn = $entry->event->tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	$entry->off_waitlist($now);
	$entry->waitlist(0);
	$entry->update;

	my $double_warning;
	my $housing_warning;

	my @students;

	foreach my $student ($m->comp("/funclib/entry_students.mas", entry => $entry)) { 

		push (@students, $student);

		my @entries = $m->comp("/funclib/student_entries.mas", student => $student, tourn => $tourn);

		$double_warning++ if scalar @entries > 1;

		if ($tourn->setting("housing")) { 

			my @days = $m->comp("/funclib/tourn_days.mas", tourn => $tourn);
	   		my $day_before = $days[0]->clone;
	   		$day_before->subtract( days => 1);
	   		push (@days, $day_before);

	   		foreach my $day (sort {$a->epoch <=> $b->epoch} @days) {
	
				my @slots = Tab::HousingSlots->search( tourn => $tourn->id, night => $day->ymd );
				next unless @slots;

				my $housing_request = $m->comp("/funclib/student_housing.mas", student => $student, tourn => $tourn, day => $day);
				next unless $housing_request;

				my $num_slots = $slots[0]->slots;
				my @total_requests = Tab::Housing->search( tourn => $tourn->id, night => $day->ymd);

				if ($num_slots > scalar @total_requests) { 

					$housing_request->waitlist(0);
					$housing_request->update;
					$housing_warning .= $student->first." ".$student->last;
					$housing_warning .=" HAS HOUSING (not waitlisted) on ".$day->day_name." ".$day->month."/".$day->day."\n";

				} else { 

					$housing_warning .= $student->first." ".$student->last;
					$housing_warning .=" IS STILL WAITLISTED FOR HOUSING on ".$day->day_name." ".$day->month."/".$day->day."\n";

				}
			}
		}
	}

	my $subject = "Entry accepted from waitlist: ". $tourn->name;

	my $message = "The ".$tourn->name." is pleased to notify you\r\n";
	$message .= "that the following entry has been taken from the waitlist \r\n";
	$message .= "and added to the tournament: \r\n \r\n";

	$message .= "   Code ".$m->comp("/funclib/entry_code.mas", entry => $entry, full => 1)."\r\n " unless ($entry->event->setting('code_hide') || $tourn->setting("hide_codes"));
	$message .= "   Event: ".$entry->event->name."\r\n";

	foreach my $student (@students) { 
		$message .= "   Name: ".$student->first." ".$student->last."\r\n";
	}

	if ($double_warning) { 
		$message .= "\r\n\r\n******WARNING:******\r\n";
		$message .= "Students in this entry are now double-entered.  Please make sure \r\n";
		$message .= "that their double-entry is not in conflict with tournament \r\n";
		$message .= "rules as the result of getting off the waitlist in this event. \r\n";
	} else { 
		$message .= "\r\n\r\n";
		$message .= "You do not have to take further action; this student \r\n";
		$message .= "is now fully entered and has been added to your invoice.\r\n";
	}

	if ($housing_warning)  {
		$message .= "\r\n\r\n";
		$message .= $housing_warning;
	}

	$message .= "\r\n \r\n";
	$message .= "Cheers,\r\n";
	$message .= "   ".$account->first." ".$account->last."\r\n";
	$message .= "   ".$tourn->name."\r\n ";

    foreach my $sendto ($entry->school->chapter->coaches) {

        $m->comp( "/funclib/send_email.mas", from => $account, to => $sendto, subject => $subject, body => $message );

	}

	return;

</%init>
