<%args>
	$group_id
	$debug => undef
</%args>
<%init>
#/

my $group = Tab::JudgeGroup->retrieve($group_id);

my @classes = $group->classes;
my @judges  = $group->judges;

my $max_panel;

my @panels;
my @rounds;
my @events;

my %timeslot_seen = ();
my %timeslot_panels = ();

foreach my $class (@classes) {

	my @c_events = $class->events;
	push (@events, @c_events);

  	foreach my $c_event (@c_events) { 
 		push (@rounds, $c_event->rounds);

		foreach my $round ($c_event->rounds) {
			my $tstmp = $round->timeslot;
			my @round_panels = $round->panels;
			my $num_panels = scalar @round_panels;
			$timeslot_seen{$tstmp->id}++;
			$timeslot_panels{$tstmp->id} = $timeslot_panels{$tstmp->id} + $num_panels;
		}
 	}
}


my @uniqs = keys %timeslot_seen;
my @timeslots;
foreach (@uniqs) { 
	my $uts = Tab::Timeslot->retrieve($_);
	push (@timeslots, $uts);
}


return 0 unless (@timeslots);

TIMESLOT:
foreach my $timeslot (@timeslots) { 

	my $ts_start = $timeslot->start;
	my $ts_end = $timeslot->end;

	my $ts_span;

	if ($group->tournament->method->no_back_to_back > 0) { 
		$ts_span = DateTime::Span->from_datetimes( start => $ts_start, end => $ts_end);
	} else { 
		$ts_span = DateTime::Span->from_datetimes( after => $ts_start, before => $ts_end);
	}

	my $ts_total;	
	my @overlaps;

	foreach my $other_timeslot (@timeslots) { 
		next if $other_timeslot->id == $timeslot->id;
		my $other_start = $other_timeslot->start;
		my $other_end = $other_timeslot->end;
		my $other_span;

		if ($group->tournament->method->no_back_to_back > 0) { 
			$other_span = DateTime::Span->from_datetimes( start => $other_start, end => $other_end);
		} else { 
			$other_span = DateTime::Span->from_datetimes( after => $other_start, before => $other_end);
		}

		push (@overlaps, $other_timeslot) if $ts_span->intersects($other_span);

	}
	
	unless (@overlaps) { 
		
		$max_panel = $timeslot_panels{$timeslot->id} if ($max_panel < $timeslot_panels{$timeslot->id});
		
	} else {

		system "$Tab::logger Yeah, ".$timeslot->name." overlaps.  Overlaps with: " if $debug;

		foreach my $ol (@overlaps) {
			system "$Tab::logger Timeslot ".$ol->name if $debug;
		}
	
		my @timeslot_borders;
	
		foreach my $ol (@overlaps) { 

			my $ol_start = $ol->start;
			my $ol_end = $ol->end;	
			push (@timeslot_borders, $ol_start) if ($ts_span->contains($ol_start));
			push (@timeslot_borders, $ol_end) if ($ts_span->contains($ol_end));

		}
	
		foreach my $border (@timeslot_borders) { 

			my $border_total;
		
			foreach my $hs (@timeslots) {
				my $hs_start = $hs->start;
				my $hs_end = $hs->end;

				my $this_span;

				if ($group->tournament->method->no_back_to_back > 0) { 
					$this_span = DateTime::Span->from_datetimes( start => $hs_start, end => $hs_end);
				} else {
					$this_span = DateTime::Span->from_datetimes( after => $hs_start, before => $hs_end);
				}

				$border_total = $border_total + $timeslot_panels{$hs->id} if $this_span->contains($border);
			}
		
			$ts_total = $border_total if $ts_total < $border_total;

		}

		$max_panel = $ts_total if $ts_total > $max_panel;
	
	}
		
}
	
	return $max_panel;

</%init>
