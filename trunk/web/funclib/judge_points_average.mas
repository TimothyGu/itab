<%args>
	$event
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main(); 
	use Math::Round;
	
	my $sth = $dbh->prepare('
		select distinct judge.id, avg(ballot_value.value) as avg, stddev(ballot_value.value) as stddev,
			count(ballot_value.value) as count, sum(ballot_value.value) as total
			from judge, ballot_value, ballot, panel, round
			where round.event = '.$event->id.'
			and round.type != "elim"
			and round.type != "final"
			and round.id = panel.round
			and panel.id = ballot.panel
			and ballot.judge = judge.id
			and ballot_value.ballot = ballot.id
			and ballot_value.tag = "points"
			group by judge.id
	');

	$sth->execute();

	my %judge_averages = ();
	my %judge_stddevs = ();
	my %judge_ballots = ();
	my %judge_total = ();

	while( my ($judge_id, $avg, $stddev, $count, $total) = $sth->fetchrow_array() ) {
		$judge_averages{$judge_id} = $avg;
		$judge_stddevs{$judge_id} = $stddev;
		$judge_ballots{$judge_id} = $count;
		$judge_total{$judge_id} = $total;
	}

	my $total_sth = $dbh->prepare('
		select distinct event.judge_group, avg(ballot_value.value) as avg, stddev(ballot_value.value) as stddev,
			count(ballot_value.value) as count, sum(ballot_value.value) as total
			from ballot_value, ballot, panel, round, event
			where event.judge_group = '.$event->judge_group->id.'
			and event.id = round.event
			and round.type != "elim"
			and round.type != "final"
			and round.id = panel.round
			and panel.id = ballot.panel
			and ballot_value.ballot = ballot.id
			and ballot_value.tag = "points"
			and ballot_value.value > 5
	');

	$total_sth->execute();

	my ($group_id, $total_avg, $total_std, $total_count, $total_points) = $total_sth->fetchrow_array();

	my $judge_sth = $dbh->prepare('
		select distinct judge.id, avg(ballot_value.value) as avg, stddev(ballot_value.value) as stddev,
			count(ballot_value.value) as count, sum(ballot_value.value) as total

			from ballot_value, ballot, panel, round, event, ballot jballot, judge

			where event.judge_group = '.$event->judge_group->id.'
			and event.id = round.event
			and round.type != "elim"
			and round.type != "final"
			and round.id = panel.round
			and panel.id = jballot.panel
			and judge.id = jballot.judge

			and ballot.entry = jballot.entry
			and ballot_value.ballot = ballot.id
			and ballot_value.tag = "points"
			and ballot_value.value > 5
			group by judge.id
	');

	$judge_sth->execute();

	my %judge_z2_averages = ();
	my %judge_z2_stddevs = ();
	my %judge_z2_ballots = ();
	my %judge_z2_total = ();

	while( my ($judge_id, $avg, $stddev, $count, $total) = $judge_sth->fetchrow_array() ) {
		$judge_z2_averages{$judge_id} = $avg;
		$judge_z2_stddevs{$judge_id} = $stddev;
		$judge_z2_ballots{$judge_id} = $count;
		$judge_z2_total{$judge_id} = $total;
	}

	return \%judge_averages, \%judge_ballots, \%judge_total, \%judge_stddevs, $total_avg, $total_std, \%judge_z2_averages, \%judge_z2_ballots, \%judge_z2_total, \%judge_z2_stddevs;

</%init>
