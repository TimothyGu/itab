<%args>
	$event
	$public => undef
	$prelim => undef
	$round => undef
</%args>
<%init>

	my $desc = "DESC" if $event->type eq "speech" || $event->type eq "congress";

	if ($round) { 

		if ($event->type eq "speech") { 

			Tab::BallotValue->set_sql(round_by_event => "
				select ballot_value.id, ballot_value.tag, ballot_value.value, ballot.entry as entryid, panel.bye as bye
					from ballot_value, ballot, panel, round
					where ballot_value.ballot = ballot.id
					and ballot.panel = panel.id
					and panel.round = round.id
					and round.event = ? 
					and round.name <= ?
					order by ballot.entry, round.name, ballot.judge, ballot_value.tag ".$desc
			);

			return Tab::BallotValue->search_round_by_event($event->id, $round->name);

		} elsif ($round->tb_set) { 

			my $tb_set = $round->tb_set;

			my $other;

			foreach my $tb ($tb_set->tiebreaks) {
				$other++ unless $tb->count eq "last_elim" || $tb->count eq "last elim";
			}

			if ($other) { 

				Tab::BallotValue->set_sql(round_by_event => "
					select distinct ballot_value.id, ballot_value.tag, ballot_value.student, ballot_value.value, ballot.entry as entryid, panel.bye as bye
						from panel,ballot,ballot_value,round
						where panel.round = round.id
						and round.event = ? 
						and round.name <= ?
						and panel.id = ballot.panel
						and ballot.id = ballot_value.ballot
						order by ballot.entry, round.name, ballot.judge, ballot_value.tag ".$desc
				);

				return Tab::BallotValue->search_round_by_event($event->id, $round->name);

			} else { 

				Tab::BallotValue->set_sql(round_by_event => "
					select distinct ballot_value.id, ballot_value.tag, ballot_value.student, ballot_value.value, ballot.entry as entryid, panel.bye as bye
						from panel,ballot,ballot_value,round
						where panel.round = round.id
						and round.event = ? 
						and round.name = ?
						and panel.id = ballot.panel
						and ballot.id = ballot_value.ballot
						order by ballot.entry, round.name, ballot.judge, ballot_value.tag  ".$desc
				);

				return Tab::BallotValue->search_round_by_event($event->id, $round->name);
		
			}

		}

	} elsif ($public && $prelim) { 

		Tab::BallotValue->set_sql(by_event => "
			select distinct ballot_value.id, ballot_value.tag, ballot_value.student, ballot_value.value, ballot.entry as entryid, ballot.panel as panelid, panel.bye as bye
				from panel,ballot,ballot_value,round
				where panel.round = round.id
				and round.event = ? 
				and round.post_results > 0
				and round.type != \"elim\"
				and round.type != \"final\"
				and panel.id = ballot.panel
				and ballot.id = ballot_value.ballot
				order by ballot.entry, round.name, ballot.judge, ballot_value.tag DESC
		");

		return Tab::BallotValue->search_by_event($event->id);

	} elsif ($public) { 

		Tab::BallotValue->set_sql(by_event => "
			select distinct ballot_value.id, ballot_value.tag, ballot_value.student, ballot_value.value, ballot.entry as entryid , round.type as roundtype, round.id as roundid, panel.bye as bye
				from panel,ballot,ballot_value,round
				where panel.round = round.id
				and round.event = ? 
				and round.post_results > 0
				and panel.id = ballot.panel
				and ballot.id = ballot_value.ballot
				order by ballot.entry, round.name, ballot.judge, ballot_value.tag DESC
		");

		return Tab::BallotValue->search_by_event($event->id);

	} elsif ($prelim) { 

		Tab::BallotValue->set_sql(by_event => "
			select distinct ballot_value.id, ballot_value.tag, ballot_value.student, ballot_value.value, ballot.entry as entryid, panel.bye as bye
				from panel,ballot,ballot_value,round
				where panel.round = round.id
				and round.event = ? 
				and round.type = \"prelim\"
				and panel.id = ballot.panel
				and ballot.id = ballot_value.ballot
				order by ballot.entry, round.name, ballot.judge, ballot_value.tag DESC
		");

		return Tab::BallotValue->search_by_event($event->id);

	} else { 

		Tab::BallotValue->set_sql(by_event => "
			select distinct ballot_value.id, ballot_value.tag, ballot_value.student, ballot_value.value, ballot.entry as entryid, ballot_value.tag as tag, round.type as roundtype, round.id as roundid, panel.bye as bye
				from panel,ballot,ballot_value,round
				where panel.round = round.id
				and round.event = ? 
				and panel.id = ballot.panel
				and ballot.id = ballot_value.ballot
				order by ballot.entry, round.name, ballot.judge, ballot_value.tag DESC
		");

		return Tab::BallotValue->search_by_event($event->id);
	}

</%init>
