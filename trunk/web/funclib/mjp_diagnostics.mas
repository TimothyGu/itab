<%args>
	$round
	$max_mut => undef
	$max_pref => undef
	$break_losses => undef
</%args>
<%init>

	my $debug = 1;
	use Time::HiRes qw( time );
	use POSIX;
	my $start_processing = time() if $debug; 
	
	
	my $pref1; my $pref2;
	my $worstpref=0; my $worstmut=0;
	my $totalprefs; my $totalmut; my $total_ratings; my $total_panels;
	#1=over break line, 2=at break line, 3=below break line
	my $cohort;
	
	my %deciles;
	
	unless ($break_losses) {
		my $n_prelims;
		my @rds = Tab::Round->search( event => $round->event );
		foreach my $rd (@rds) {
			$n_prelims++ if ($rd->type ne "elim" && $rd->type ne "final");
		}
		$break_losses = ceil($n_prelims / 2 );
	}
	
	print "Round is ".$round->name." and break point for losses is:".$break_losses."<br>" if $debug; 
	
	my $last_round_name = $round->name - 1;
	my $last_round = Tab::Round->search( event => $round->event->id, name => $last_round_name)->first;
	my %entry_losses = $m->comp("/funclib/entry_losses.mas", event => $round->event, round => $last_round);
	
	my @panels = Tab::Panel->search( round => $round->id, bye=> 0 );
	foreach my $panel (@panels) {
		my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel); 
		my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);
		$cohort = 3;
		foreach my $entry (@entries) {
			
			print $entry->name." loss total is ".$entry_losses{$entry}." " if $debug;
			if ($entry_losses{$entry} == $break_losses-1) { $cohort = 2; }
			if ($entry_losses{$entry} < $break_losses-1 && $cohort != 2 ) { $cohort = 1; }
			
			foreach my $judge (@judges) {
			
				my @prefs = Tab::Rating->search( judge => $judge->id, entry=> $entry->id );
				
				foreach my $pref (@prefs) {
					print "pref was ".$pref->percentile."<br>" if $debug;
					$total_ratings++;
					if ( $pref1 == 0 ) { $pref1 = $pref->percentile; 
						} else {
						$pref2 = $pref->percentile;
					}
				}
			}
		}	
		$totalprefs += $pref1;
		$totalprefs += $pref2;
		if ( $pref1 > $worstpref ) { $worstpref = $pref1; }
		if ( $pref2 > $worstpref ) { $worstpref = $pref2; }
		$totalmut += abs($pref1-$pref2);
		if ( abs($pref1-$pref2) > $worstmut ) { $worstmut = abs($pref1-$pref2); }
		$total_panels++;
		my $i;
		for ($i=1; $i<=10; $i++) {
			if ( $pref1 < ($i*10) ) { $deciles{$i}++; last; }
		}
		for ($i=1; $i<=10; $i++) {
			if ( $pref2 < ($i*10) ) { $deciles{$i}++; last; }
		}
		

		print "cohort=$cohort, pref1=$pref1, pref2=$pref2, total=$totalprefs, total n=$total_ratings, mut=".abs($pref1-$pref2)." tot panels=$total_panels<br>" if $debug;
		
		$pref1=0; $pref2=0;
		
	}

	my @avgpref; my $avgmut;
	
	if ( $total_ratings > 0 ) {
		$avgpref[0] = $totalprefs/$total_ratings;
		$avgpref[1] = 42.42;
	}
	if ( $total_panels > 0 ) {
		$avgmut =$totalmut/$total_panels;
	}
	
	my $end = time();
	print "<br>processing time: " if $debug;
	printf("%.2f\n", $end - $start_processing) if $debug;

	return \@avgpref, $avgmut, $worstpref, $worstmut, \%deciles;
		
</%init>
