<%args>
	$round
	$max_mut => undef
	$max_pref => undef
</%args>
<%init>

#	use Time::HiRes qw( time );
#	my $start_processing = time(); 

	my $pref1; my $pref2;
	my $worstpref=0; my $worstmut=0;
	my $totalprefs; my $totalmut; my $total_ratings; my $total_panels;
	
	my @panels = Tab::Panel->search( round => $round->id, bye=> 0 );
	foreach my $panel (@panels) {
		my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel); 
		my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);
		foreach my $entry (@entries) {
			foreach my $judge (@judges) {
			
				my @prefs = Tab::Rating->search( judge => $judge->id, entry=> $entry->id );
				
				foreach my $pref (@prefs) {
#					print "pref was ".$pref->percentile."<br>";
					$total_ratings++;
					if ( $pref1 == 0 ) { $pref1 = $pref->percentile; 
						} else {
						$pref2 = $pref->percentile;
					}
				}
			}
		}	
		$totalprefs += $pref1;
		$totalprefs += $pref2;
		if ( $pref1 > $worstpref ) { $worstpref = $pref1; }
		if ( $pref2 > $worstpref ) { $worstpref = $pref2; }
		$totalmut += abs($pref1-$pref2);
		if ( abs($pref1-$pref2) > $worstmut ) { $worstmut = abs($pref1-$pref2); }
		$total_panels++;

#		print "pref1=$pref1, pref2=$pref2, total=$totalprefs, total n=$total_ratings, mut=".abs($pref1-$pref2)." tot panels=$total_panels<br>";
		
		$pref1=0; $pref2=0;
		
	}

	if ( $total_ratings > 0 ) {
		my $avgpref = $totalprefs/$total_ratings;
	}
	if ( $total_panels > 0 ) {
		my $avgmut =$totalmut/$total_panels;
	}
	
#	my $end = time();
#	print "<br>processing time: ";
#	printf("%.2f\n", $end - $start_processing);

	return $avgpref, $avgmut, $worstpref, $worstmut;
		
</%init>
