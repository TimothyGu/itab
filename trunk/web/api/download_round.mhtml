<%args>
	$username => undef
	$password => undef
	$round => undef
</%args>
<%init>
	use Crypt::PasswdMD5;
	use XML::Simple;
	use Data::Dumper;

	my ($account) = Tab::Account->search( email => lc($username) );

	unless ($account) { 
		$m->print("<error>No account with the email ".$username." was found.</error>");
		$m->abort;
	} 

	$password =~ s/\s+$//g;
	my $db_password = $account->passhash;
   	my $verify_password = unix_md5_crypt($password,$db_password);
   
   	unless ($verify_password eq $db_password) { 
		$m->print("<error>Password incorrect for ".$username.".</error>");
		$m->abort;
	}
	
	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;
	my $tourn = $event->tourn;

	unless ($round) { 
		$m->print("NO_SUCH_ROUND");
		$m->abort;
	}

	unless ($tourn) { 
		$m->print("NO_SUCH_TOURNAMENT");
		$m->abort;
	}

	unless ($account->site_admin || Tab::TournAdmin->search( tourn => $tourn->id, account => $account->id )) { 
		$m->print("TOURN_ACCESS_DENIED");
		$m->abort;
	}

	my $panels = [];
	my $ballots = [];

	foreach my $panel ($round->panels) { 

		my $room = $panel->room->id if $panel->room;
		
		my $xml_panel = {
			ID => $panel->id,
			ROUND => $round->id,
			ROOM => $room,
			FLIGHT => $panel->flight
		};

		push (@{$panels}, $xml_panel);

		foreach my $ballot ($panel->ballots) { 

			my $judge = $ballot->judge->id if $ballot->judge;
			my $entry = $ballot->entry->id if $ballot->entry;

			my $xml_ballot = {
				ID => $ballot->id,
				JUDGE => $judge,
				PANEL => $panel->id,
				ENTRY => $entry,
				SIDE => $ballot->side
			};

			push (@{$ballots}, $xml_ballot);

			foreach my $score ($ballot->values) { 


			}

		}

	}

	my $xml_round = {
		RoundName => $round->realname,
		sortorder => $round->name,
		RoundType => ucfirst($round->type),
		EventID => $event->id,


		ID => $tourn->id,
		TOURNNAME => $tourn->name,
		STARTDATE => Tab::pickerdate($tourn->start),
		ENDDATE => Tab::pickerdate($tourn->end),
		DOWNLOADSITE => "idebate.org"
	};

	my $tsets = [];

	foreach my $tset ($tourn->settings) { 

		my $value = $tset->value;
		$value = Tab::pickerdate($tset->value_date) if $value eq "date";
		$value = $tset->value_text if $value eq "text";
		
		my $xml_tset = {
			TAG => $tset->tag,
			VALUE => $value
		};

		push (@{$tsets}, $xml_tset);
	}

	my $xml_hash = {
		
	};

	my $filename = "RoundData-$round_id";
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`; 

	my $xs = new XML::Simple();
	my $xml = $xs->XMLout($xml_hash, RootName => 'TOURNAMENTRESULTS', NoAttr => 1, XMLDecl => 1, OutputFile => "$filepath.xml");

	$m->redirect("$Tab::url_prefix/tmp/$filename.xml");
	
</%init>
