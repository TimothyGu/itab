<%args>
	$username => undef
	$password => undef
	$round_id => undef
</%args>
<%init>

	use Crypt::PasswdMD5;
	use XML::Simple;
	use Data::Dumper;

	my ($account) = Tab::Account->search( email => lc($username) );

	unless ($account) { 
		$m->print("<error>No account with the email ".$username." was found.</error>");
		$m->abort;
	} 

	$password =~ s/\s+$//g;
	my $db_password = $account->passhash;
   	my $verify_password = unix_md5_crypt($password,$db_password);
   
   	unless ($verify_password eq $db_password) { 
		$m->print("<error>Password incorrect for ".$username.".</error>");
		$m->abort;
	}
	
    #PROCESS THE XML
	my $req = Apache2::Request->new($r);
	my $xml_file = $req->upload("xml");
	my $xml_filename = $xml_file->tempname;

	my $xml = new XML::Simple ( SuppressEmpty => 1,  ForceArray => [ qw(EVENT EVENT_SETTING TOURN_SETTING SCHOOL REGION) ]);
	my $data = $xml->XMLin($xml_filename);

	my $round_id = $data->{ID};
	my $round = Tab::Round->retrieve($round_id);

	unless ($round) { 
		$m->print("NO_SUCH_ROUND");
		$m->abort;
	}

	my $event = $round->event;
	my $tourn = $event->tourn;

	unless ($tourn) { 
		$m->print("NO_SUCH_TOURNAMENT");
		$m->abort;
	}

	unless ($account->site_admin || Tab::TournAdmin->search( tourn => $tourn->id, account => $account->id )) { 
		$m->print("TOURN_ACCESS_DENIED");
		$m->abort;
	}

	$round->name($data->{RD_NAME});
	$round->flighted($data->{FLIGHTING});
	$round->label($data->{LABEL});
	$round->judges($data->{JUDGESPERPANEL});
	$round->type(lc $data->{PAIRINGSCHEME});
	$round->tb_set($data->{TB_SET});
	$round->update;

	my $counteri = 1;

	foreach my $xml_panel (@{$data->{PANEL}}) {

		my $panel = Tab::Panel->retrieve($xml_panel->{ID});

		unless ($panel) { 
			$panel = Tab::Panel->create({
				room => 0,
				letter => $counter,
				type => 0,
				round => $round->id
			});
		}

		$panel->room($xml_panel->{ROOM});
		$panel->flight($xml_panel->{FLIGHT});
		$panel->update;
	}

	foreach my $xml_ballot (@{$data->{BALLOT}}) { 

		my $ballot = Tab::Ballot->retrieve($xml_ballot->{ID});

		unless ($ballot) { 
			$ballot = Tab::Ballot->create({ panel => $xml_ballot->{PANEL} });
		}

		$ballot->panel($xml_ballot->{PANEL});
		$ballot->judge($xml_ballot->{JUDGE});
		$ballot->entry($xml_ballot->{ENTRY});
		$ballot->side($xml_ballot->{SIDE});
		$ballot->update;

	}

	foreach my $xml_score (@{$data->{BALLOT_SCORE}}) { 

		my $score = Tab::BallotValue->retrieve($xml_score->{ID});

		unless ($score) { 
			$score = Tab::BallotValue->create({ ballot => $xml_score->{BALLOT} });
		}

		$score->ballot($xml_score->{BALLOT});
		$score->student($xml_score->{RECIPIENT}) if $xml_score->{SCORE_ID} == 2;
		$score->tag("Ballot") if $xml_score->{SCORE_ID} == 1;
		$score->tag("Points") if $xml_score->{SCORE_ID} == 2; 
		$score->tag("Ranks") if $xml_score->{SCORE_ID} == 3; 
		$score->score($xml_score->{SCORE});
		$score->update;

	}

	$m->print("Round uploaded.  See it at ".$Tab::url_prefix."/web/panel/schemat/show.mhtml?round_id=".$round->id);

	
</%init>
