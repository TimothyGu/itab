<%args>
	$username => undef
	$password => undef
</%args>
<%init>

	use Crypt::PasswdMD5;

	my $now = DateTime->now;

	#ACCOUNT
	my ($account) = Tab::Account->search( email => lc($username) );
	unless ($account) { 
		$m->print("NO_SUCH_ACCOUNT");
		$m->abort;
	}

	$password =~ s/\s+$//g;
	my $db_password = $account->passhash;
   	my $verify_password = unix_md5_crypt($password,$db_password);
   
   	unless ($verify_password eq $db_password) { 
	   	$m->print("PASSWORD_WRONG");
		$m->abort;
	}

	my @panels = $m->comp("/funclib/account_student_panels.mas", account => $account, student => 1);

	foreach my $panel (@panels) { 

		my $tz = $panel->round->event->tourn->tz;
		$tz = "UTC" unless $tz;
		my $tzname = Tab::tzname($tz);

		$r->content_type("text/plain");

		$m->print("ROUND: ".$panel->round->realname."\r\n");
		$m->print("START: ".Tab::niceshortdt($panel->round->timeslot->start)." ".$tzname."\r\n");

		if ($panel->bye) { 
			$m->print("BYE");
			$m->abort;
		}

		$m->print("ROOM: ".($panel->room ? $panel->room->name : "No Room")."\r\n");

		foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) { 

			my $moi;

			foreach my $student ($entry->students) { 
				$moi++ if $student->account && $student->account->id == $account->id;
			}

			if ($moi) { 
				$m->print("SIDE: ".($entry->side == 1 ? "AFF" : "NEG")."\r\n");
			} else { 

				$m->print("OPPONENT_CODE: ".$entry->code."\r\n");
				$m->print("OPPONENT_NAME: ".$entry->name."\r\n");
				$m->print("OPPONENT_SCHOOL: ".$entry->school->name."\r\n");
			}
		}

		my $judge_string;

		foreach my $judge ($m->comp("/funclib/panel_judges.mas", panel => $panel)) { 
			$judge_string .= "; " if $judge_string;
			$judge_string .= $judge->first." ".$judge->last;
		}

		$m->print("JUDGING: $judge_string");

	}

</%init>

