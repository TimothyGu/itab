<%args> 
	$account
	$group
	$debug => undef
</%args>
<%init>

	my $available_slots = $group->hired_pool & $group->setting("judge_per");

	my $tourn = $group->tournament;
	my $circuit = $tourn->circuit;

	if ($available_slots) {

		my @requests = Tab::JudgeHire->search( judge_group => $group->id );

		@requests = sort {$a->request_made <=> $b->request_made} @requests;
	
		foreach my $req (@requests) { 
		
			my $needed = $req->covers - $req->accepted;
			next unless $needed;

			if ($needed >= $available_slots) { 

				$req->accepted($req->covers);
				$req->update;
				$available_slots -= $needed;

			} else { 

				$req->accepted($req->accepted + $available_slots);
				$req->update;
				$available_slots = 0;
			} 

			last if $available_slots < 0;

			#Send the email
			my $subject = " Judge Hire Request Accepted: ". $tourn->name;
			my $message = " The ".$tourn->name." is pleased to notify you\r\n";
			$message = $message." that we have accepted standing requests to hire judging\r\n";
			$message = $message." to cover entries in ".$group->name.".\r\n\r\n";

			if ($req->accepted == $req->covers) { 
				$message = $message." This fills your entire request for hires in ".$group->name."\r\n";
			} else { 
	
				my $uncovered = $req->covered - $req->accepted;
				$uncovered = $uncovered / $group->setting("judge_per") if $group->setting("judge_per");
		
				$message .= " This only partly fills your requests for hires in ".$group->name."\r\n";
				$message .= $uncovered." slots are still unavailable from our hired pool.\r\n";
				$message .= " More hires will be added to cover the remainder if they \r\n become available.\r\n";

			}

			$message = $message." You do not have to take further action; this judge hire \r\n";
			$message = $message." is now fully entered and has been added to your invoice.\r\n";

			$message = $message."\r\n \r\n";
			$message = $message." Cheers,\r\n ";
			$message = $message." ".$account->first." ".$account->last."\r\n";
			$message = $message." ".$tourn->name."\r\n ";

    		$message = $message." \r\n \r\n --- \r\n ";
    		$message = $message." This message auto-generated by the Tabroom.com software\r\n
 at ".$Tab::url_prefix.". on behalf of the ". $circuit->name ."\r\n
 Tabroom.com: http://www.tabroom.com.  ";

			my @accounts = $req->school->chapter->coaches;

			unless ($r->hostname =~ /tabdev/) {

			    foreach my $sendto (@accounts) {

    		    	my $mail = new Mail::Mailer 'smtp', Server => $Tab::smtp_server;
    		    	my $from = $account->first." ".$account->last." <".$account->email.">";
    		    	my $to = $sendto->first." ".$sendto->last." <".$sendto->email.">";

    		    	$mail->open({   From => $from,
    		    	    To => $to,
						Bcc => $account->email,
    		    	    Subject => $subject,
    		    	});

    		    	print $mail $message."\r\n \r\n";
    		    	$mail->close();

				}
    		}

		}

	}

	return;

</%init>
