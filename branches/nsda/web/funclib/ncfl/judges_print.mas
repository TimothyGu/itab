<%args>
	$diocese_id
	$tourn_id
	$filename
	$filepath
</%args>
<%init>

	my $now = DateTime->now;
	my $diocese = Tab::Region->retrieve($diocese_id);
	my $tourn  = Tab::Tourn->retrieve($tourn_id);

	my %elim_names_by_group = ();

	my %elim_padding_by_group = ();

	my @elim_names = ("D","O","Q","S","F");

	foreach my $group ($tourn->groups) {

		next if $group->tab_room;

		my @tmp_elim_names = @elim_names;

		my @elim_pools = $group->pools( registrant => 1, event_based => 0);

		my $elim_padding;

		my $num_elims = scalar @elim_pools;

		foreach ($num_elims .. 4) { 
			$elim_padding .= " & ";
			my $junk = shift @tmp_elim_names;
		}

		$elim_padding_by_group{$group->id} = $elim_padding;

		@{$elim_names_by_group{$group->id}} = @tmp_elim_names;


	}

	open (TEXOUT, ">>$filepath"."$filename.tex");

	my $tabular = "\\begin{tabular}{p{.5in}p{1.5in}p{2.5in}p{.4in}p{.75in}p{.5in}p{.2in}p{.2in}p{.2in}p{.2in}p{.2in}}\n";

	my $tab_tabular = "\\begin{tabular}{p{.5in}p{1.5in}p{2.5in}p{3.8in}}\n";

	my $tab_index = "Name & School & Tab Assignment\\\\ \n";

    print TEXOUT "\\Large Judges for ".&Tab::texify($diocese->name)." (".$diocese->code.") \n";

	print TEXOUT $tab_tabular;
	print TEXOUT "& & & \\\\ \n";
	print TEXOUT "\\end{tabular}\n";
    print TEXOUT "\\newline\n";

	print TEXOUT "\\small ";
	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.95}\[5.5pt\]\[5.5pt\]\n";
	print TEXOUT "Code & Name & School & Qual & Prelim & Elims & & & & & \\\\ \n";
	print TEXOUT "\\end{tabular}\n";
    print TEXOUT "\\newline\n";

	my @judges = sort { $a->code cmp $b->code } $diocese->judges($tourn);

	@judges = sort { $a->judge_group->name cmp $b->judge_group->name } @judges;

	@judges = sort { $a->judge_group->tab_room cmp $b->judge_group->tab_room } @judges;

	my $current_group;
	my $switch = 1;

	foreach my $judge (@judges) {

		print TEXOUT $tab_tabular if $judge->judge_group->tab_room;
		print TEXOUT $tabular unless $judge->judge_group->tab_room;

		print TEXOUT "\\rowcolor[rgb]{.9,.9,.9}\[5.5pt\]\[5.5pt\]\n"  if ($switch++ % 2);

		print TEXOUT "\\small ". &Tab::texify($judge->code)." & ";

		print TEXOUT "\\small ". &Tab::texify($judge->first." ".$judge->last)." & ";

		print TEXOUT "\\small ". &Tab::texify($judge->school->short_name)." & ";

		if ($judge->judge_group->tab_room) { 

			print TEXOUT "\\small TAB: ".$judge->special." \n";

		} else { 

			my $elim_style;

			print TEXOUT "\\footnotesize ";
			
			foreach my $qual ($judge->quals) { 

				print TEXOUT &Tab::texify(" ".$qual->name." ");

			}

			print TEXOUT " &  ";

			print TEXOUT "\\small ".&Tab::texify($judge->prelim_pool->name) if $judge->prelim_pool;

			print TEXOUT "\\small ".&Tab::texify($judge->judge_group->abbr) unless $judge->prelim_pool;

			my $elim_group;

			foreach my $eg ($judge->elim_group) {

				$elim_group = $eg;

			}

			print TEXOUT " & ";

			if ($elim_group) { 	

				print TEXOUT "\\small ".&Tab::texify($elim_group->abbr);

				print TEXOUT $elim_padding_by_group{$elim_group->id}." ";
	
				my @tmp_elim_names = @{$elim_names_by_group{$elim_group->id}};

				ELIM:
				foreach my $elim (sort {$a->name <=> $b->name} $elim_group->pools( registrant => 1, event_based => 0)) { 

					my $name = shift @tmp_elim_names;

					print TEXOUT " & ";

					print TEXOUT "\\small ".&Tab::texify($name)." " if $judge->in_pool($elim);

				}	

			} else {

				print TEXOUT " & & & & & ";
			}


		}

		print TEXOUT "\\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;
	return;

</%init>
