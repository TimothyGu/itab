<%args>
	$entry_id
	$student_id
	$school_id
	$switch_student_id => undef
	$housing => undef
</%args>
<%perl>

	unless ($switch_student_id) { 
		$m->print("You must select a student to switch this entry to.  Please hit \"back\" and try again");
		$m->abort;
	}

	my $entry = Tab::Entry->retrieve($entry_id);
	my $tourn = $entry->event->tournament;
	my $student = Tab::Student->retrieve($student_id);
	my $switch_student = Tab::Student->retrieve($switch_student_id);

	if ($entry->event->team == 1) { 
		$entry->student($switch_student->id);
		$entry->update();
	}

	if ($entry->event->team == 2) { 
		$entry->student($switch_student->id) if $student->id == $entry->student->id;
		$entry->partner($switch_student->id) if $student->id == $entry->partner->id;
		$entry->update;
	}

	if ($entry->event->team == 3) {
		$entry->rm_student($student->id);
		$entry->add_student($switch_student->id);
	}

	my @hrs = Tab::Housing->search( tournament => $tourn->id, student => $student->id);

	my $code_style = $entry->event->setting('code_style');

	unless ($code_style eq "numbers" || $code_style eq "school_number" || $code_style eq "schoolname_code" || $code_style eq "school_name_only" || $code_style eq "register") { 
		$entry->code($m->comp("/funclib/entry_code.mas", entry => $entry));
		$entry->update;
	}
		
	if ($housing) { 
	
		foreach (@hrs) {  
			$_->student($switch_student_id);   
			$_->update();  
		}

	} else { 

		foreach (@hrs) { 
			$_->delete();
		}
	}

	my $msg = "Entry slot switched to ".$student->first." ".$student->last;

	$m->redirect("/user/tourn/entry/students.mhtml?school_id=$school_id&event_id=".$entry->event->id."&msg=$msg");

</%perl>
