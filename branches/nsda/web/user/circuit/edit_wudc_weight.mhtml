<%args>
	$account
	$tourn_id
	$circuit_id
	$weight
</%args>
<%init>

	my $tz = $account->tz if $account->tz;
	$tz = "UTC" unless $tz;

#save the new weight
	my @tourn_setting = Tab::TournSetting->search( tourn => $tourn_id, tag => "weight");
	if (scalar(@tourn_setting) > 0) {
		foreach my $tourn_setting (@tourn_setting) {
			$tourn_setting->value($weight);
			$tourn_setting->update();
		}
	}
	else {
		Tab::TournSetting->create( {
			tourn => $tourn_id,
			tag => "weight",
			value => $weight
		});
	}
	
	
#Delete existing result_set, result, result_value
	my @result_set = Tab::ResultSet->search( tourn => $tourn_id, label => "WUDC Points");
	foreach my $result_set (@result_set) {
		my @result = Tab::Result->search( result_set => $result_set->id);
		foreach my $result (@result) {
			my @result_value = Tab::ResultValue->search( result => $result->id);
			foreach my $result_value (@result_value) {
				$result_value->delete;
			}
			$result->delete;
		}
		$result_set->delete;
	}

	#$m->redirect("result_fix_launch.mhtml?tourn_id=$tourn_id&circuit_id=$circuit_id&msg=deleted");

#scroll the events

my @events = Tab::Event->search( tourn => $tourn_id);

foreach my $event (@events) {

	#create result_set
	my $now = DateTime->now( time_zone => $tz);

	my $RSobject = Tab::ResultSet->create( {
			tourn => $tourn_id,
			event => $event->id,
			label => "WUDC Points",
			generated => $now,
			bracket => 0
	});

	my $eventid=$event->id;	
	Tab::Entry->columns(TEMP => qw/rank/);
	Tab::Entry->columns(TEMP => qw/percentile/);
	Tab::Entry->columns(TEMP => qw/school/);
	Tab::Entry->set_sql(pull_entries => "
		select entry.id, result.rank as rank, result.percentile as percentile, entry.school as school
		from entry, result, result_set
		where entry.event = $eventid
		and result.entry=entry.id
		and result_set.id=result.result_set
		and result_set.label='Final Places'
	");

	my @wudcentry = Tab::Entry->search_pull_entries;
	my $n = scalar(@wudcentry);
	print $n;
	
	#set published to true
	Tab::EventSetting->create( {
		event => $event->id,
		tag => "results_published",
		value => 1
	});

	
	#create a result and result_value for each entry
	foreach my $row (@wudcentry) {

		#save the result
		my $resultobj = Tab::Result->create( {
			entry => $row->id,
			result_set => $RSobject->id,
			rank => $row->rank,
			percentile => $row->percentile,
			school => $row->school
		});

		#calcualte and save the result_value
		my $pts = (1 + $n - $row->rank) * $weight;
		Tab::ResultValue->create( {
			result => $resultobj->id,
			value => $pts,
			priority => 1,
			sort_desc => 0,
			long_tag => "Points for WUDC rankings",
			tag => "WUDC Points"
		});
		
	}
	
}
	
	$m->redirect("result_fix_launch.mhtml?tourn_id=$tourn_id&circuit_id=$circuit_id&msg=Tournament weight updated and WUDC points saved");

</%init>

