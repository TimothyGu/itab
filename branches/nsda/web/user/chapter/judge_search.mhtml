<%args>
	$account
	$chapter_id
	$chapter_judge_id => undef
	$email => undef
</%args>
<%init>

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my $judge = Tab::ChapterJudge->retrieve($chapter_judge_id);

	unless ($m->comp("/funclib/chapter_admins.mas", chapter => $chapter, admin => $account)) { 
		$m->print("<p>You do not have access to that chapter.  Stop messing around</p>");
		$m->abort;
	}

	my ($judge_acc) = Tab::Account->search( email => $email );

	unless ($judge_acc) { 
		my $err = "No idebate account with the email address <br /><br />".$email." <br /><br />was found.";
		$err .= "Try again, or create a new judge record";
		$m->redirect("judge_edit.mhtml?chapter_id=$chapter_id&err=$err");

	}

	my ($exists) = Tab::ChapterJudge->search( chapter => $chapter->id, account => $judge_acc->id);

	if ($exists) { 

		my $err = $email ." is already on your roster as ".$exists->first." ".$exists->last."\n";
		$m->redirect("judge_edit.mhtml?chapter_id=$chapter_id&chapter_judge_id=$chapter_judge_id&err=$err");

	}

	my $msg;

	if ($judge) { 

		$judge->account($judge_acc->id);
		$judge->first($judge_acc->first);
		$judge->last($judge_acc->last);
		$judge->gender($judge_acc->gender) if $judge_acc->gender;
		$judge->update;

		$msg = "Judge ".$judge->first." ".$judge->last."'s account linked. The judge has been notified by email.";

		Tab::Judge->set_sql( update_judges => "update judge set account = ? where chapter_judge = ?");
		Tab::Judge->sql_update_judges->execute($judge_acc->id, $judge->id);

	} else { 

		my $now = DateTime->now;
		my $started = $judge_acc->started_judging;

		unless ($started) {
			$started = $now->year;
			$judge_acc->started_judging($started);
			$judge_acc->update;
		}

		$judge = Tab::ChapterJudge->create({
			account => $judge_acc->id,
			first => $judge_acc->first,
			last => $judge_acc->last,
			gender => $judge_acc->gender,
			chapter => $chapter->id,
			created => $now,
			started => $started,
			retired => 0
		});

		$msg = "Judge ".$judge->first." ".$judge->last." has been added to your roster. The judge has been notified by email.";

	}

	# Notify the judge
	my $body = $account->first." ".$account->last." (".$account->email.") has added you on the Tabroom system to the team roster for ".$chapter->name."\n";

	$body .= "You will now be able to get team emails and notices, and will be eligible to sign up for tournaments through Tabroom at ".$Tab::url_prefix." if your coaches use the self-signup system. \n\n";
	$body .= "If this is in error, you can remove this affilation by logging into your idebate account at ".$Tab::url_prefix."\n\n".
	$body .= "If you need help, contact us at help\@tabroom.com.  Thanks!\n";

	my $subject = "[TabRoom] Added to the ".$chapter->name." team roster";

	$m->comp("/funclib/send_email.mas", from => $account, to => $judge_acc, subject => $subject, body => $body);

	$m->redirect("judge_edit.mhtml?chapter_judge_id=".$judge->id."&chapter_id=$chapter_id&msg=$msg");

</%init>
