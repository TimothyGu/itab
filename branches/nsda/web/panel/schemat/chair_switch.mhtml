<%args>
	$tourn
	$judge_id
	$panel_id
	$from => undef
	$account
</%args>
<%perl>

	my $judge = Tab::Judge->retrieve($judge_id);
	my $panel = Tab::Panel->retrieve($panel_id);

	my $wudc++ if $panel->round->event->type eq "wudc";
	my $event = $panel->round->event;

	my $ballot = Tab::Ballot->search( judge => $judge->id, panel => $panel->id)->first;

	if ($wudc) { 
		Tab::Ballot->set_sql(remove_all_chairs => "update ballot set chair = 0,audit = 1 where panel = ? and chair = 1");
		Tab::Ballot->set_sql(remove_chairs => "update ballot set chair = 0,audit = 1 where panel = ? and judge = ? and chair = 1");
		Tab::Ballot->set_sql(rm_scores => "delete ballot_value.* from ballot, ballot_value where ballot_value.ballot = ballot.id and ballot.panel = ? and ballot.chair = 1");
		Tab::Ballot->set_sql(add_chair => "update ballot set chair = 1,audit = 0 where panel = ? and judge = ? and chair = 0");
	} else {  
		Tab::Ballot->set_sql(remove_all_chairs => "update ballot set chair = 0 where panel = ? and chair = 1");
		Tab::Ballot->set_sql(remove_chairs => "update ballot set chair = 0 where panel = ? and judge = ? and chair = 1");
		Tab::Ballot->set_sql(add_chair => "update ballot set chair = 1 where panel = ? and judge = ? and chair = 0");
	}

	my $msg;

	if ($ballot->chair) { 

		Tab::Ballot->sql_remove_chairs->execute($panel->id, $judge->id);
		$msg = "Chair of panel removed";

	} else { 

		if ($event->type eq "congress" && $ballot->panel->round->type eq "prelim") { 

			Tab::Panel->set_sql( by_letter => "select distinct panel.* from panel, round where round.event = ? and round.type = \"prelim\" and round.id = panel.round and panel.letter = ? ");

			my @panels = Tab::Panel->search_by_letter( $event->id, $panel->letter );

			my @rounds;
			my $last_round;

			foreach my $opanel (@panels) { 

				$last_round = $opanel->round->name if $opanel->round->name > $last_round;

				my %judges = map {$_->id => $_} $m->comp("/funclib/panel_judges.mas", panel => $opanel);

				unless ($judges{$judge->id}) { 
					$m->comp("judge_add.mhtml", judge_id => $judge->id, panel_id => $opanel->id, tourn => $tourn, return => "ohgodyes", account => $account);
				}

				Tab::Ballot->sql_rm_scores->execute($opanel->id) if $wudc;
				Tab::Ballot->sql_remove_all_chairs->execute($opanel->id);
				Tab::Ballot->sql_add_chair->execute($opanel->id, $judge->id);
			}

			if ($event->setting("parli_ballot")) { 

				Tab::Ballot->set_sql( only_last => "
					update ballot, panel, round
					set ballot.audit = 1
					where ballot.judge = ? 
					and ballot.panel = panel.id
					and panel.round = round.id
					and round.event = ? 
					and round.name < ? 
				");

				Tab::Ballot->sql_only_last->execute( $judge->id, $event->id, $last_round );

			}

			$msg = "Parliamentarian ".$judge->first." ".$judge->last." designated for chamber ".$panel->letter." in ALL ROUNDS";

		} else { 

			Tab::Ballot->sql_rm_scores->execute($panel->id) if $wudc;
			Tab::Ballot->sql_remove_all_chairs->execute($panel->id);
			Tab::Ballot->sql_add_chair->execute($panel->id, $judge->id);
			$msg = $judge->last." designated chair of panel";
		}

	}


	$m->redirect("panel_view.mhtml?panel_id=".$panel->id."&msg=$msg");


</%perl>
